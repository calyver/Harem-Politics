favor = {
	skill = intrigue
	desc = "favor_desc_general"
	hostile = yes
	power_per_skill_point = 2.0
	resistance_per_skill_point = 1.75
	power_per_agent_skill_point = 1

	minimum_progress_chance = 75
	maximum_progress_chance = 100
	minimum_success = 5
	maximum_secrecy = 85
	maximum_success = 85

	allow = {
		is_ai = no
	}

	valid = {
		is_ai = no
	}

	valid_agent = {
		age >= 14
	}

	agent_join_chance = {
		base = 0

		# Base Reluctance, including negative AI Energy
		modifier = {
			add = {
				value = -20
				if = {
					limit = {
						ai_energy < 0
					}
					add = {
						value = ai_energy
						multiply = 0.5
					}
				}
			}
			desc = BASE_RELUCTANCE
		}

		#Is Owner sending a gift in the invite interaction?
		modifier = {
			add = bribe_acceptance_value
			exists = scope:gift
			always = scope:gift
			NOT = {
				OR = {
					scope:target = { is_parent_of = root }
					root = { is_parent_of = scope:target }
				}
			}
			desc = "SCHEME_WITH_GIFT"
		}

		#Scope:target has caused internal strife in the realm
		character_hates_scope_due_to_strife_plus_desc_modifier = { TARGET = scope:target }

		#Family Feud
		house_feud_hostile_scheme_agent_modifier = yes

		#Default Hostile Scheme modifiers
		hostile_murder_agent_base_join_chance_modifier = yes
	}

	base_success_chance = {
		base = 0

		hostile_scheme_base_chance_modifier = yes
		
		compare_modifier = {
			desc = sway_my_diplomacy
			target = scope:owner
			value = diplomacy
			multiplier = 2
		}
		
		# Their friend told you what they like
		modifier = {
			add = 15
			desc = "SCHEME_WBANQUET_FRIEND_INSIGHT"
			scope:owner = {
				exists = var:wbanquet_friend_insight_var
				var:wbanquet_friend_insight_var = scope:target
			}
		}

		#Owner Traits
		modifier = {
			add = 2
			scope:owner = { has_trait = education_diplomacy_1 }
			desc = "SCHEME_BEFRIEND_MY_EDUCATION"
		}
		modifier = {
			add = 4
			scope:owner = { has_trait = education_diplomacy_2 }
			desc = "SCHEME_BEFRIEND_MY_EDUCATION"
		}
		modifier = {
			add = 6
			scope:owner = { has_trait = education_diplomacy_3 }
			desc = "SCHEME_BEFRIEND_MY_EDUCATION"
		}
		modifier = {
			add = 8
			scope:owner = { has_trait = education_diplomacy_4 }
			desc = "SCHEME_BEFRIEND_MY_EDUCATION"
		}
		modifier = {
			add = 10
			scope:owner = { has_trait = education_diplomacy_5 }
			desc = "SCHEME_BEFRIEND_MY_EDUCATION"
		}
		modifier = {
			scope:owner = {
				OR = {
					has_trait = diplomat
					has_trait = family_first
					has_trait = august
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						scope:owner = { has_trait = diplomat }
					}
					add = 4
				}
				if = {
					limit = {
						scope:owner = { has_trait = family_first }
					}
					add = 8
				}
				if = {
					limit = {
						scope:owner = { has_trait = august }
					}
					add = 12
				}
			}
			desc = "SCHEME_BEFRIEND_MY_LIFESTYLE"
		}
		modifier = {
			add = 4
			scope:owner = {
				has_trait = lifestyle_reveler
				has_trait_xp = {
					trait = lifestyle_reveler
					value < 50
				}
			}
			desc = "SCHEME_BEFRIEND_MY_REVELRY"
		}
		modifier = {
			add = 6
			scope:owner = {
				has_trait = lifestyle_reveler
				has_trait_xp = {
					trait = lifestyle_reveler
					value >= 50
				}
				has_trait_xp = {
					trait = lifestyle_reveler
					value < 100
				}
			}
			desc = "SCHEME_BEFRIEND_MY_REVELRY"
		}
		modifier = {
			add = 8
			scope:owner = {
				has_trait = lifestyle_reveler
				has_trait_xp = {
					trait = lifestyle_reveler
					value = 100
				}
			}
			desc = "SCHEME_BEFRIEND_MY_REVELRY"
		}
		modifier = {
			add = -5
			scope:owner = { has_trait = shy }
			desc = "SCHEME_BEFRIEND_MY_SHYNESS"
		}
		modifier = {
			add = 5
			scope:owner = { has_trait = gregarious }
			desc = "SCHEME_BEFRIEND_MY_GREGARIOUSNESS"
		}
		modifier = {
			add = 4
			scope:owner = { has_trait = callous }
			desc = "SCHEME_BEFRIEND_MY_CALLOUSNESS"
		}
		modifier = {
			add = 4
			scope:owner = { has_trait = sadistic }
			desc = ""
		}
		modifier = {
			add = 4
			scope:owner = { has_trait = vengeful }
			desc = ""
		}
		modifier = {
			add = 4
			scope:owner = { has_trait = wrathful }
			desc = ""
		}
		modifier = {
			add = 4
			scope:owner = { has_trait = patient }
			desc = ""
		}
		modifier = {
			add = 4
			scope:owner = { has_trait = intellect_good_1 }
			desc = ""
		}
		modifier = {
			add = 8
			scope:owner = { has_trait = intellect_good_2 }
			desc = ""
		}
		modifier = {
			add = 12
			scope:owner = { has_trait = intellect_good_3 }
			desc = ""
		}
		#Target Traits
		modifier = {
			add = -4
			scope:target = { has_trait = intellect_good_1 }
			desc = ""
		}
		modifier = {
			add = -8
			scope:target = { has_trait = intellect_good_2 }
			desc = ""
		}
		modifier = {
			add = -12
			scope:target = { has_trait = intellect_good_3 }
			desc = ""
		}
		modifier = {
			add = -5
			scope:target = { has_trait = shy }
			desc = "SCHEME_BEFRIEND_THEIR_SHYNESS"
		}
		modifier = {
			add = 5
			scope:target = { has_trait = gregarious }
			desc = "SCHEME_BEFRIEND_THEIR_GREGARIOUSNESS"
		}
		modifier = {
			add = -4
			scope:target = { has_trait = callous }
			desc = "SCHEME_BEFRIEND_THEIR_CALLOUSNESS"
		}
		modifier = {
			add = -4
			scope:target = { has_trait = paranoid }
			desc = "SCHEME_BEFRIEND_THEIR_PARANOIA"
		}
		modifier = {
			add = 4
			scope:target = { has_trait = trusting }
			desc = "SCHEME_BEFRIEND_THEIR_TRUST"
		}
		modifier = {
			add = 4
			scope:target = {
				has_trait = lifestyle_reveler
				has_trait_xp = {
					trait = lifestyle_reveler
					value < 50
				}
			}
			desc = "SCHEME_BEFRIEND_MY_REVELRY"
		}
		modifier = {
			add = 6
			scope:target = {
				has_trait = lifestyle_reveler
				has_trait_xp = {
					trait = lifestyle_reveler
					value >= 50
				}
				has_trait_xp = {
					trait = lifestyle_reveler
					value < 100
				}
			}
			desc = "SCHEME_BEFRIEND_MY_REVELRY"
		}
		modifier = {
			add = 8
			scope:target = {
				has_trait = lifestyle_reveler
				has_trait_xp = {
					trait = lifestyle_reveler
					value = 100
				}
			}
			desc = "SCHEME_BEFRIEND_MY_REVELRY"
		}
		modifier = {
			add = scope:target.var:recipient_stubborness_scheme
			scope:target = {
				has_trait = stubborn
				exists = var:recipient_stubborness_scheme
			}
			desc = "SCHEME_BEFRIEND_THEIR_STUBBORNESS"
		}
		modifier = {
			add = scope:target.var:recipient_fickleness_scheme
			scope:target = {
				has_trait = fickle
				exists = var:recipient_fickleness_scheme
				NOT = { var:recipient_fickleness_scheme = 0 }
			}
			desc = "SCHEME_BEFRIEND_THEIR_FICKLENESS"
		}
		
		#Trait similarity to owner
		compatibility_modifier = {
			who = scope:target
			compatibility_target = scope:owner
			min = -50
			max = 50
			multiplier = 2
		}
		#Extra rank bonus/penalty if target is arrogant/ambitious
		modifier = {
			desc = SCHEME_SOCIAL_CLIMBER_RANK_BONUS
			add = 10
			scope:target = {
				OR = {
					has_trait = arrogant
					has_trait = ambitious
					has_trait = greedy
				}
			}
		}
		modifier = {
			desc = SCHEME_SOCIAL_CLIMBER_RANK_BONUS
			add = 10
			scope:owner = {
				OR = {
					has_trait = ambitious
					has_trait = greedy
				}
			}
		}
		# Diarchs are better at schemes within their liege's realm
		diarch_scheming_within_realm_bonus_modifier = yes
		#Religious Heads
		modifier = {
			add = -50
			desc = "SCHEME_VS_RELIGIOUS_HEAD"
			scope:target = {
				faith = scope:owner.faith
				faith = {
					exists = religious_head
					religious_head = {
			 			this = scope:target
			 		}
				}
			}
		}
	}

	agent_success_chance = {
		base = 0

		hostile_scheme_agent_success_chance_modifier = yes #Adds a value depending on their "closeness" to target
	}

	agent_leave_threshold = -25

	cooldown = { days = 30 }
	is_secret = yes
	base_secrecy = 10

	on_ready = {
		scheme_owner = {
			if = {
				limit = {
					has_character_flag = is_in_event_favor_outcome_0001
				}
				trigger_event = {
					id = favor_outcome.0001
					days = 1
				}
			}
			else = {
				trigger_event = favor_outcome.0001
			}
		}
	}

	on_monthly = {
		hostile_scheme_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}
			scheme_owner = {
				trigger_event = {
					on_action = favor_ongoing
				}
			}
		}
	}


	on_invalidated = {
		scheme_target = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
		}
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = abduct_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_died
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:target = {
					is_imprisoned = yes
					NOT = { 
						OR = {
							imprisoner = scope:owner
							imprisoner = scope:owner.primary_spouse 
						}
					}
				}
			}
			scope:target.imprisoner = {
				save_scope_as = other_imprisoner
			}
			scope:owner = {
				send_interface_toast = {
					title = abduct_scheme_invalidated_title
					left_icon = scope:target
					right_icon = scope:other_imprisoner
					custom_description_no_bullet = {
						subject = scope:other_imprisoner
						object = scope:target
						text = scheme_target_imprisoned_by_other
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:target = {
					NOT = { in_diplomatic_range = scope:owner }
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = abduct_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_not_in_diplomatic_range
					}
				}
			}
		}
	}

	success_desc = "favor_SUCCESS_DESC"
	discovery_desc = "favor_DISCOVERY_DESC"
}
