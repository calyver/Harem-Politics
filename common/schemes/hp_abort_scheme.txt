abort = {

	skill = intrigue
	desc = "abort_desc"
	hostile = yes
	icon = icon_scheme_hostile
	
	allow = {
		age >= 16
		is_imprisoned = no
		NOT = {
			has_trait = incapable
		}
	}
	
	valid = {
		is_incapable = no
		custom_description = {
			object = scope:target
			text = i_have_been_caught_trying_to_murder_target #Check
			scope:target = {
				NOT = {
					has_opinion_modifier = {
						target = prev
						modifier = abort_personal_grudge_opinion #Check
					}
				}
			}
		}
		scope:target = {
			OR = {
				exists = location
				in_diplomatic_range = scope:owner
			}
		}
		scope:target = {
			is_pregnant = yes
			has_trait = pregnant
		}
	}
	
	valid_agent = {
		age >= 16
	}
	
	agent_join_chance = {
		base = 0

		# Base Reluctance, including negative AI Energy
		modifier = {
			add = {
				value = -20
				if = {
					limit = {
						ai_energy < 0
					}
					add = {
						value = ai_energy
						multiply = 0.5
					}
				}
			}
			desc = BASE_RELUCTANCE
		}

		#Is Owner sending a gift in the invite interaction?
		modifier = {
			add = bribe_acceptance_value
			exists = scope:gift
			always = scope:gift
			NOT = {
				OR = {
					scope:target = { is_parent_of = root }
					root = { is_parent_of = scope:target }
				}
			}
			desc = "SCHEME_WITH_GIFT"
		}
		
		#The target is indeed a threat in the harem
		modifier = {
			any_consort = {
				any_consort = {
					this = scope:owner
				}
				any_consort = {
					this = scope:target
				}
				scope:target = {
					OR = {	
						AND = {
							is_married = yes 
							any_close_family_member = {
								OR = {
									is_powerful_vassal_of = scope:target.primary_spouse
									is_councillor_of = scope:target.primary_spouse
									is_parent_of = scope:target.primary_spouse
								}
							}
						}
						AND = {
							is_concubine = yes 
							any_close_family_member = {
								OR = {
									is_powerful_vassal_of = scope:target.concubinist
									is_councillor_of = scope:target.concubinist
									is_parent_of = scope:target.concubinist
								}
							}
						}
						has_character_modifier = favored_consort_modifier
					}
				}
			}
			value = 10
			
			desc = threatening_consort_desc #Check it
		}
		
		opinion_modifier = { #Opinion
			opinion_target = scope:target
			multiplier = -0.25
			desc = opinion_consort_desc #Check it
		}
		modifier = { #Rivals
			add = 20
			OR = {
				has_relation_potential_rival = scope:target
				has_relation_rival = scope:target
				has_relation_nemesis = scope:target
			}
			desc = bad_relationship_consort_desc #Check it
		}
		
		modifier = { #Good relationship
			factor = 0
			OR = {
				has_relation_friend = scope:target
				has_relation_best_friend = scope:target

				has_relation_lover = scope:target
				has_relation_soulmate = scope:target
			}
			desc = good_relationship_consort_desc #Check it
		}
		
		modifier = { #Good consorts
			factor = 0
			OR = {
				has_trait = compassionate
				has_trait = forgiving
				has_trait = honest
				has_trait = just
			}
			desc = good_personality_consort_desc #Check it
		}
		modifier = { #Evil consorts
			add = 10
			harem_politics_evil_consort_trigger = yes
			desc = evil_consort_desc #Check it
		}

		#Scope:target has caused internal strife in the realm
		character_hates_scope_due_to_strife_plus_desc_modifier = { TARGET = scope:target }

		#Family Feud
		house_feud_hostile_scheme_agent_modifier = yes

		#Default Hostile Scheme modifiers
		hostile_murder_agent_base_join_chance_modifier = yes
	}
	
	base_success_chance = {
		base = 0

		hostile_scheme_base_chance_modifier = yes
		
		#Learning to know of herbs
		compare_modifier = {
			desc = "SCHEME_MY_LEARNING"
			value = scope:owner.learning
			multiplier = 0.5
		}
		
		#Diplomacy to reach the target
		compare_modifier = {
			desc = "SCHEME_MY_DIPLOMACY" #Check it
			value = scope:owner.diplomacy
			multiplier = 0.5
		}
		
		#Intrigue to reach the target
		compare_modifier = {
			desc = "SCHEME_MY_INTRIGUE"
			value = scope:owner.intrigue
			multiplier = 1.5
		}
		
		modifier = {
			add = 10
			scope:owner = { has_trait = lifestyle_herbalist }
			desc = MURDER_HERBALIST_BONUS
		}
		
		modifier = {
			add = -50
			scope:target = {				
				has_opinion_modifier = {
					target = scope:owner
					modifier = attempted_murder_me_crime
				}
			}
			desc = HAS_ATTEMPTED_TO_MURDER_TARGET_BEFORE
		}
		
		modifier = {
			add = -50
			scope:target = {				
				has_opinion_modifier = {
					target = scope:owner
					modifier = attempted_abort
				}
			}
			desc = HAS_ATTEMPTED_TO_INDUCE_abort_TARGET_BEFORE #Check
		}
		
		modifier = { #Main spouse
			add = 15
			scope:target = {				
				any_consort = {
					is_married = yes
					primary_spouse = {
						this = scope:owner
					}
				}
			}
			desc = main_spouse_scheme_success #Check
		}
		
		modifier = { #The Empress Dowager
			add = 15
			scope:target = {				
				any_consort = {
					is_child_of = scope:owner
				}
			}
			desc = parent_scheme_success #Check
		}
		
		modifier = { #The GC
			add = 10
			scope:owner = {				
				has_court_position = grand_consort_court_position
			}
			desc = gc_scheme_success #Check
		}
		
		modifier = { #Spouses and concubines
			add = 5
			scope:owner = {				
				OR = {	
					is_married = yes
					any_child = {	
						any_consort = {
							this = scope:target
						}
					}
				}
			}
			scope:target = {				
				is_concubine = yes
			}
			desc = concubine_scheme_success #Check
		}
		
		modifier = { #Favored consorts
			add = -10
			scope:target = {				
				has_character_modifier = favored_consort_modifier
			}
			desc = target_favored_scheme_success #Check
		}
		modifier = { #Favored consorts
			add = 10
			scope:target = {				
				has_character_modifier = unfavored_consort_modifier
			}
			desc = target_unfavored_scheme_success #Check
		}
		
		modifier = { #Favored consorts
			add = -10
			scope:owner = {				
				has_character_modifier = unfavored_consort_modifier
			}
			desc = owner_unfavored_scheme_success #Check
		}
		modifier = { #Favored consorts
			add = 10
			scope:owner = {				
				has_character_modifier = favored_consort_modifier
			}
			desc = owner_favored_scheme_success #Check
		}
		
		modifier = { #Target is the MS
			add = -15
			scope:owner = {				
				any_consort = {	
					exists = primary_spouse
					primary_spouse = {	
						this = scope:target
					}
				}
			}
			desc = target_ms_scheme_success #Check
		}
		modifier = { #Target is the GC
			add = -10
			scope:target = {				
				has_court_position = grand_consort_court_position
			}
			desc = target_gc_scheme_success #Check
		}
		modifier = { #Target is a spouse
			add = -5
			scope:target = {				
				is_married = yes
			}
			scope:owner = {				
				is_concubine = yes
			}
			desc = target_spouse_scheme_success #Check
		}
		
		modifier = { #Target is owner's friend
			add = 15
			scope:target = {
				OR = {
					has_relation_best_friend = scope:owner
					has_relation_friend = scope:owner
					
					has_relation_soulmate = scope:owner
					has_relation_lover = scope:owner
				}
			}
			desc = good_relation_scheme_success #Check
		}
		
		modifier = { #Target is owner's rival
			add = -15
			scope:target = {	
				OR = {
					has_relation_nemesis = scope:owner
					has_relation_rival = scope:owner
					has_relation_potential_rival = scope:owner
				}
			}
			desc = bad_relation_scheme_success #Check
		}

		modifier = {
			add = -8
			scope:owner = { has_trait = shy }
			desc = "SCHEME_BEFRIEND_MY_SHYNESS" #Check
		}
		
		modifier = {
			add = 5
			scope:owner = { has_trait = intellect_good_1 }
			desc = ""
		}
		modifier = {
			add = 10
			scope:owner = { has_trait = intellect_good_2 }
			desc = ""
		}
		modifier = {
			add = 12
			scope:owner = { has_trait = intellect_good_3 }
			desc = ""
		}
		#Target Traits
		modifier = {
			add = -5
			scope:target = { has_trait = intellect_good_1 }
			desc = ""
		}
		modifier = {
			add = -10
			scope:target = { has_trait = intellect_good_2 }
			desc = ""
		}
		modifier = {
			add = -12
			scope:target = { has_trait = intellect_good_3 }
			desc = ""
		}
		
		modifier = {
			add = -10
			scope:target = { has_trait = paranoid }
			desc = "SCHEME_BEFRIEND_THEIR_PARANOIA"
		}
		modifier = {
			add = 10
			scope:target = { has_trait = trusting }
			desc = "SCHEME_BEFRIEND_THEIR_TRUST"
		}
		
		# Family Feud
		house_feud_hostile_scheme_success_modifier = yes
	}
	
	agent_success_chance = {
		base = 0
		
		modifier = { #Main spouse
			add = 15
			scope:target = {				
				any_consort = {
					is_married = yes
					primary_spouse = {
						this = prev
					}
				}
			}
			desc = main_spouse_agent_scheme_success #Check
		}
		
		modifier = { #The Empress Dowager
			add = 15
			scope:target = {				
				any_consort = {
					is_child_of = prev
				}
			}
			desc = parent_agent_scheme_success #Check
		}
		
		modifier = { #The GC
			add = 10
			has_court_position = grand_consort_court_position
			desc = gc_agent_scheme_success #Check
		}
		
		modifier = { #Spouses and concubines
			add = 5			
			OR = {	
				AND = {	
					is_married = yes
					any_consort = {
						this = scope:target
					}
				}
				any_child = {	
					any_consort = {
						this = scope:target
					}
				}
			}
			scope:target = {				
				is_concubine = yes
			}
			desc = concubine_agent_scheme_success #Check
		}
		
		modifier = { #Target is the MS
			add = -15			
			any_consort = {	
				exists = primary_spouse
				primary_spouse = {	
					this = scope:target
				}
			}
			desc = target_scheme_success #Check
		}
		modifier = { #Target is the GC
			add = -10
			scope:target = {				
				has_court_position = grand_consort_court_position
			}
			desc = target_gc_scheme_success #Check
		}
		modifier = { #Target is a spouse
			add = -5
			scope:target = {				
				is_married = yes
			}
			is_concubine = yes
			desc = target_spouse_scheme_success #Check
		}
		
		modifier = { #Target is friend
			add = 15
			OR = {				
				has_relation_best_friend = scope:target
				has_relation_friend = scope:target
				
				has_relation_soulmate = scope:target
				has_relation_lover = scope:target
			}
			desc = good_relation_scheme_success #Check
		}
		
		modifier = { #Target is rival
			add = -15
			OR = {				
				has_relation_nemesis = scope:target
				has_relation_rival = scope:target
				has_relation_potential_rival = scope:target
			}
			desc = bad_relation_scheme_success #Check
		}
		
		modifier = {
			add = -12
			has_trait = shy
			desc = agent_shyness_scheme_success #Check
		}
		
		hostile_scheme_agent_success_chance_modifier = yes #Adds a value depending on their "closeness" to target
	}
	
	agent_leave_threshold = -25
	
	cooldown = { days = 60 }
	is_secret = yes
	base_secrecy = 10
	
	on_ready = {
		scheme_owner = {
			if = {
				limit = {
					has_character_flag = is_in_event_abort_outcome_0001
				}
				trigger_event = {
					id = abort_outcome.0001
					days = 1
				}
			}
			else = {
				trigger_event = abort_outcome.0001
			}
		}
	}
	
	on_monthly = {
		hostile_scheme_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}
			scheme_owner = {
				trigger_event = {
					on_action = abort_ongoing
				}
				trigger_event = {
					on_action = abort_ongoing
					days = { 10 15 }
				}
				trigger_event = {
					on_action = abort_ongoing
					days = { 20 25 }
				}
			}
		}
	}
	
	on_invalidated = {
		scheme_target = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
		}
		if = { #Target died
			limit = {
				scope:target = {
					is_alive = no
					NOT = { killer = scope:owner }
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = abort_scheme_invalidated_title #Check
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_died
					}
				}
			}
		}
		else_if = { #Target was imprisoned by scope:owner
			limit = {
				scope:target = {
					is_imprisoned = yes
					imprisoner = scope:owner
				}
			}
			scope:owner = {
				send_interface_message = {
					title = abort_scheme_invalidated_title
					type = abort_invalidated_i_imprisoned_message #Check
					desc = abort_scheme_i_imprisoned_them_message #Check
					left_icon = scope:target
				}
			}
		}
		else_if = { #Target was imprisoned by someone else
			limit = {
				scope:target = {
					is_imprisoned = yes
					NOT = { imprisoner = scope:owner }
				}
			}
			scope:target.imprisoner = {
				save_scope_as = other_imprisoner
			}
			scope:owner = {
				send_interface_toast = {
					title = abort_scheme_invalidated_title
					left_icon = scope:target
					right_icon = scope:other_imprisoner
					custom_description_no_bullet = {
						subject = scope:other_imprisoner
						object = scope:target
						text = scheme_target_imprisoned_by_other
					}
				}
			}
		}
		else_if = { #Target is outside the diplomatic range
			limit = {
				scope:target = {
					NOT = { in_diplomatic_range = scope:owner }
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = abort_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_not_in_diplomatic_range
					}
				}
			}
		}
		else_if = { #Target is no longer pregnant
			limit = {
				scope:target = {
					is_pregnant = no
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = abort_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_not_pregnant #Check
					}
				}
			}
		}
	}
	
	power_per_skill_point = 2.0
	resistance_per_skill_point = 1.50
	power_per_agent_skill_point = 1

	minimum_progress_chance = 60
	maximum_progress_chance = 90
	minimum_success = 5
	maximum_secrecy = 85
	maximum_success = 85

	success_desc = "abort_SUCCESS_DESC" #Check
	discovery_desc = "abort_DISCOVERY_DESC" #Check
}
