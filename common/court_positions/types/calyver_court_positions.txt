grand_consort_court_position = {
	max_available_positions = 1
	category = court_position_category_concubines

	opinion = {
		value = ceremonial_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		if = {
			limit = {
				any_close_family_member = {
					OR = {
						primary_title.tier >= tier_kingdom
						is_councillor = yes
						is_powerful_vassal = yes
					}
				}
			}
			add = { 
				value = 50
				desc = grand_consort_prominent_family_description
			}
		}
		else_if = {
			limit = {
				any_close_family_member = {
					primary_title.tier >= tier_duchy
				}
			}
			add = { 
				value = 20
				desc = grand_consort_good_family_description 
			}
		}
		else_if = {
			limit = {
				any_close_family_member = {
					is_landed = yes
				}
			}
			add = { 
				value = 10
				desc = grand_consort_decent_family_description
			}
		}
		
		if = {
			limit = {
				is_lowborn = yes
			}
			add = { 
				value = -20
				desc = grand_consort_lowborn_description
			}
		}
		
		if = {
			limit = {
				any_child = {
					count >= 4
				}
			}
			add = { 
				value = 15
				desc = grand_consort_fertile_description
			}
		}
		else_if = {
			limit = {
				any_child = {
					count = 3
				}
			}
			add = { 
				value = 10
				desc = grand_consort_fertile_description
			}
		}
		
		if = { #Beauty
			limit = {
				has_trait = beauty_good_3
			}
			add = { 
				value = 15
				desc = court_position_beauty_good_3_trait
			}
		}
		else_if = { #Beauty
			limit = {
				has_trait = beauty_good_2
			}
			add = { 
				value = 10
				desc = court_position_beauty_good_2_trait
			}
		}
		else_if = { #Beauty
			limit = {
				has_trait = beauty_good_1
			}
			add = { 
				value = 5
				desc = court_position_beauty_good_1_trait
			}
		}
		if = { #Intellect
			limit = {
				has_trait = intellect_good_3
			}
			add = { 
				value = 30
				desc = court_position_intellect_good_3_trait
			}
		}
		else_if = { #Intellect
			limit = {
				has_trait = intellect_good_2
			}
			add = { 
				value = 20
				desc = court_position_intellect_good_2_trait
			}
		}
		else_if = { #Intellect
			limit = {
				has_trait = intellect_good_1
			}
			add = {
				value = 10
				desc = court_position_intellect_good_1_trait
			}
		}
		if = { #Intellect
			limit = {
				has_trait = intellect_bad_3
			}
			add = { 
				value = -30
				desc = court_position_intellect_bad_trait
			}
		}
		else_if = { #Intellect
			limit = {
				has_trait = intellect_bad_2
			}
			add = { 
				value = -20
				desc = court_position_intellect_bad_trait
			}
		}
		else_if = { #Intellect
			limit = {
				has_trait = intellect_bad_1
			}
			add = {
				value = -10
				desc = court_position_intellect_bad_trait
			}
		}
		if = {
			limit = {
				OR = {
					diplomacy = high_skill_rating
					stewardship = high_skill_rating
					learning = high_skill_rating
				}
			}
			add = { 
				value = 20
				desc = court_position_high_skills_trait
			}
		}
		
		if = {
			limit = {
				has_trait = patient
			}
			add = { 
				value = 10
				desc = court_position_patient_trait
			}
		}
		if = {
			limit = {
				has_trait = wrathful
			}
			add = { 
				value = -10
				desc = court_position_wrathful_trait
			}
		}
		if = {
			limit = {
				has_trait = callous
			}
			add = { 
				value = -10
				desc = court_position_callous_trait
			}
		}
		if = {
			limit = {
				has_trait = sadistic
			}
			add = { 
				value = -10
				desc = court_position_sadistic_trait
			}
		}
		if = {
			limit = {
				has_trait = vengeful
			}
			add = { 
				value = -10
				desc = court_position_vengeful_trait
			}
		}
		if = {
			limit = {
				has_trait = diligent
			}
			add = { 
				value = 15
				desc = court_position_diligent_trait
			}
		}
		if = {
			limit = {
				has_trait = greedy
			}
			add = {
				value = -10
				desc = court_position_greedy_trait
			}
		}
		if = {
			limit = {
				has_trait = arrogant
			}
			add = {
				value = -10
				desc = court_position_greedy_trait
			}
		}
		if = {
			limit = {
				has_trait = ambitious
			}
			add = {
				value = -10
				desc = court_position_ambitious_trait
			}
		}
		if = {
			limit = {
				has_trait = generous
			}
			add = {
				value = 10
				desc = court_position_generous_trait
			}
		}
		if = {
			limit = {
				has_trait = forgiving
			}
			add = {
				value = 10
				desc = court_position_forgiving_trait
			}
		}
		if = {
			limit = {
				has_trait = compassionate
			}
			add = {
				value = 20
				desc = court_position_compassionate_trait
			}
		}
		if = {
			limit = {
				has_trait = shy
			}
			add = { 
				value = -10
				desc = court_position_shy_trait
			}
		}
		if = {
			limit = {
				has_trait = craven
			}
			add = {
				value = -10
				desc = court_position_craven_trait
			}
		}
		if = {
			limit = {
				has_trait = paranoid
			}
			add = {
				value = -10
				desc = court_position_paranoid_trait
			}
		}
		if = {
			limit = {
				has_trait = shrewd
			}
			add = {
				value = 10
				desc = court_position_shrewd_trait
			}
		}
		if = {
			limit = {
				has_trait = reclusive
			}
			add = {
				value = -10
				desc = court_position_reclusive_trait
			}
		}
		if = { #Favored consort
			limit = {
				has_character_modifier = favored_consort_modifier
			}
			add = {
				value = 20
				desc = court_position_loved_consort
			}
		}
		
		if = { #Unfavored consort
			limit = {
				OR = {
					has_character_modifier = unfavored_consort_modifier
					has_character_modifier = demoted_spouse_modifier
					has_character_modifier = demoted_primary_spouse_modifier
				}
			}
			add = {
				value = -20
				desc = court_position_unfavored_consort
			}
		}
		
		if = { #Low birth
			limit = {
				OR = {
					has_trait = bastard
					has_trait = wild_oat
					has_trait = legitimized_bastard
					has_trait = disputed_heritage
					has_trait = bastard_founder
				}
			}
			add = {
				value = -20
				desc = court_position_low_birth_consort
			}
		}
		if = { #Virtuous
			limit = {
				num_virtuous_traits >= 1
			}
			add = {
				value = 10
				desc = court_position_virtuous_consort
			}
		}
		if = { #Sinful
			limit = {
				num_sinful_traits >= 1
			}
			add = {
				value = -20
				desc = court_position_sinful_consort
			}
		}
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	is_shown = {
		primary_title.tier >= tier_kingdom
		OR = {
			accepts_polygamy = yes
			AND = {
				accepts_polygamy = no
				accepts_concubinage = yes
			}
		}
	}

	# Is this an available position for this court? (root is court owner)
	valid_position = {
		highest_held_title_tier >= tier_kingdom
	}

	is_shown_character = {
		scope:employee = {
			is_courtier_of = scope:liege
		}
	}

	valid_character = {
		scope:employee = {
			NOT = { this = scope:liege.primary_spouse }
			OR = {
				is_spouse_of = scope:liege
				AND = {
					scope:liege  = {
						accepts_polygamy = no
					}
					is_concubine_of = scope:liege
				}
			}
		}
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost

			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = grand_consort_court_position
					any_court_position_holder = {
				        type = grand_consort_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = grand_consort_court_position
						any_court_position_holder = {
					        type = grand_consort_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.7
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
	}
	
	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			monthly_court_grandeur_change_mult = 0.10
		}
		poor = {
			court_grandeur_baseline_add = 1
			monthly_court_grandeur_change_mult = 0.10
		}
		average = {
			court_grandeur_baseline_add = 1
			monthly_court_grandeur_change_mult = 0.15
			stress_loss_mult = 0.05
		}
		good = {
			court_grandeur_baseline_add = 2
			monthly_court_grandeur_change_mult = 0.20
			stress_loss_mult = 0.10
		}
		excellent = {
			court_grandeur_baseline_add = 2
			monthly_court_grandeur_change_mult = 0.25
			stress_loss_mult = 0.15
		}
	}

	base_employer_modifier = {
	}

	modifier = {
		monthly_prestige = medium_court_position_prestige_salary
	}

	on_court_position_received = {
		grand_consort_gained_court_position_effect = yes
	}
	on_court_position_revoked = { 
		grand_consort_revoked_court_position_effect = yes
	}
	on_court_position_invalidated = {
		grand_consort_invalidated_court_position_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0 fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = 50
		add = scope:base_value
		add = court_position_candidate_score_base_value
		add = court_position_debt_considerations_value
	}
}