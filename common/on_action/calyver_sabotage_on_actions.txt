sabotage_setup = {
	first_valid_on_action = {
		standard_sabotage_method_setup
	}
}



standard_sabotage_method_setup = {
	random_events = {
		100 = sabotage_outcome.1001 # Success or Failure sabotaged_performance
		100 = sabotage_outcome.1002 # Success or Failure sabotaged_meal
		100 = sabotage_outcome.1003 # Success or Failure sabotaged_evening
	}
}

sabotage_succeeded = {
	# Picks out the correct success event depending on setup.
	trigger = { exists = scope:scheme }
	first_valid = {
		sabotage_outcome.2001 #Success sabotaged_performance
		sabotage_outcome.2002 #Success sabotaged_meal
		sabotage_outcome.2003 #Success sabotaged_evening
	}
}

sabotage_failed = {
	# Picks out the correct failure event depending on setup/save.
	trigger = {
		exists = scope:scheme
	}
	first_valid = {
		sabotage_outcome.4001 #Failure sabotaged_performance
		sabotage_outcome.4002 #Failure sabotaged_meal
		sabotage_outcome.4003 #Failure sabotaged_evening
	}
}

sabotage_ongoing = {
	# Events that can happen while planning to sabotage someone. (shared with sabotage)
	trigger = {
		exists = scope:scheme
	}
	
	random_events = {
		chance_to_happen = 100
		300 = 0
		#############
		# Generic Intrigue Scheme events
		#############
		#Agents:
		400 = calyver_scheme_ongoing.1001 	# Pay gold for Scheme Progress
		400 = calyver_scheme_ongoing.1002 	# Zealous agent promotes your agenda
		100 = calyver_scheme_ongoing.1008 	# Agent close to being discovered
		100 = calyver_scheme_ongoing.1009 	# Close relation is willing to join your scheme after all
		400 = calyver_scheme_ongoing.5019 	# Find old architectural papers
		
		#Target:
		400 = intrigue_scheme_ongoing.2001 	# Trusting target
		400 = intrigue_scheme_ongoing.2002 	# Drunkard target
		50 = intrigue_scheme_ongoing.2003 	# Discover a secret about someone else than your target

		#Other
		400 = calyver_scheme_ongoing.3005  # Messenger pigeon
		400 = calyver_scheme_ongoing.5001 	# Distract guards with itching powder
		400 = calyver_scheme_ongoing.5005 	# Gift them poisonous gold

		400 = calyver_scheme_ongoing.3010  # Translate letters yourself
		400 = calyver_scheme_ongoing.3011  # Complex language code
	}
}
