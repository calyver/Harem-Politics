#Demote a spouse to a concubine
visit_liege_interaction = {
	category = interaction_category_harem
	use_diplomatic_range = no
	icon = icon_marriage

	desc = visit_liege_interaction_desc #Check

	is_shown = {
		scope:actor = {
			exists = court_owner
			is_consort_of = court_owner
			court_owner = {
				is_available = yes
				highest_held_title_tier >= tier_county
				any_consort = {
					is_available_allow_travelling = yes
					is_courtier_of = scope:actor.court_owner
					count >= 3
				}
				can_be_visited_trigger = yes
			}
			can_be_visited_trigger = yes
			NOR = {
				exists = scope:is_being_divorced
				exists = scope:is_being_set_aside
			}
			exists = scope:actor.court_owner.location
			location ?= scope:actor.court_owner.location
		}
		OR = {
			scope:actor = scope:recipient
			scope:recipient = scope:actor.court_owner
		}
	}

	is_valid_showing_failures_only = {
		scope:recipient = { is_available_allow_travelling = yes }
		scope:actor = { is_available_allow_travelling = yes }
	}

	auto_accept = yes

	on_accept = {
		custom_tooltip = visit_liege_interaction_effect_tooltip
		scope:actor = {
			add_character_flag = {
				flag = is_visiting_harem_character_flag
				days = 50
			}
			save_scope_as = consort
			court_owner = {
				save_scope_as = harem_liege
			}
			random_list = {
				25 = { #You reach your liege
					#Rank
					modifier = {
						scope:harem_liege.primary_spouse ?= {
							this = scope:actor
						}
						add = 40
					}
					#modifier = {
					#	has_court_position = grand_consort_court_position
					#	add = 30
					#}
					modifier = {
						is_spouse_of = scope:harem_liege
						NOR = {
							this = scope:harem_liege.primary_spouse
							#has_court_position = grand_consort_court_position
						}
						add = 30
					}
					#Favor

					#Too few consorts
					modifier = {
						scope:harem_liege = {
							any_consort = {
								is_courtier_of = prev
								count <= 5
							}
						}
						add = 10
					}
					#Liege's stress
					modifier = {
						scope:harem_liege = {
							stress_level >= 1
						}
						add = -10
					}
					modifier = {
						scope:harem_liege = {
							stress_level >= 2
						}
						add = -10
					}
					modifier = {
						scope:harem_liege = {
							stress_level >= 3
						}
						add = -10
					}
					#Children
					modifier = {
						any_children = {
							is_alive = yes
							is_child_of = scope:harem_liege
							count >= 2
						}
						add = 5
					}
					modifier = {
						any_children = {
							is_alive = yes
							is_child_of = scope:harem_liege
							count >= 3
						}
						add = 5
					}
					#Family connections
					modifier = {
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = scope:harem_liege
								is_councillor_of = scope:harem_liege
								is_liege_or_above_of = scope:harem_liege
							}
						}
						add = 15
					}
					scope:harem_liege = {
						trigger_event = {
							id = consort_play.1000
							days = { 5 10 }
						}	
					}
				}
				25 = { #Servants stop you
					#Rank
					modifier = {
						is_concubine = yes
						add = 10
					}
					#Favor

					#Too many consorts
					modifier = {
						scope:harem_liege = {
							any_consort = {
								is_courtier_of = prev
								count >= 8
							}
						}
						add = 10
					}

					trigger_event = {
						id = consort_play.0002
						days = { 5 10 }
					}
				}
			}
		}
		#scope:recipient = {
		#	save_scope_as = homage_authority
		#	trigger_event = {
		#		id = consort_play.0002
		#		days = 3
		#	}
		#}
	}
	
	# AI
	ai_will_do = {
		base = 0
	}
}

pay_respects_interaction = {
	category = interaction_category_harem
	use_diplomatic_range = no
	icon = icon_marriage

	desc = divorce_character_interaction_desc #Check

	is_shown = {
		scope:actor = {
			exists = court_owner
			court_owner = {
				highest_held_title_tier >= tier_county
				any_consort = {
					is_available_allow_travelling = yes
					is_courtier_of = scope:actor.court_owner
					count >= 3
				}
			}
			OR = {
				AND = { # Concubines can pay respects to any spouse
					is_concubine_of = court_owner
					court_owner = {
						any_consort = {
							is_available_allow_travelling = yes
							is_courtier_of = prev
							OR = {
								is_spouse_of = prev
								#has_court_position = grand_consort_court_position
							}
							NOT = {
								this = scope:actor
							}
						}
					}
				}
				AND = { # Secondary spouses can pay respects to the PS or the GC
					is_spouse_of = court_owner
					court_owner = {
						any_consort = {
							is_available_allow_travelling = yes
							is_courtier_of = prev
							OR = {
								AND = {
									exists = prev.primary_spouse
									is_spouse_of = prev.primary_spouse
								}
								#has_court_position = grand_consort_court_position
							}
							NOT = {
								this = scope:actor
							}
						}
					}
				}
			}
		}
		scope:recipient = {
			this = scope:actor
		}


	#	scope:actor = {
	#		is_ai = no
	#
	#		exists = court_owner
	#		court_owner = {
	#			any_consort = {
	#				this = scope:actor
	#			}
	#			any_consort = {
	#				count >= 3
	#			}
	#		}
	#
	#		exists = court_owner.primary_spouse
	#			NOT = {
	#			this = court_owner.primary_spouse
	#		}
	#	
	#		any_consort = {
	#			count = 1
	#		}
	#	}
	#	scope:recipient = {
	#	
	#		exists = court_owner.primary_spouse
	#		this = court_owner.primary_spouse
	#
	#		exists = court_owner
	#		court_owner = {
	#			any_consort = {
	#				this = scope:actor
	#			}
	#			any_courtier = {
	#				this = scope:actor
	#			}
	#		}
	#		NOT = {
	#			this = scope:actor
	#		}
	#	}
	}

	is_valid_showing_failures_only = {
		#scope:recipient = { is_available_allow_travelling = yes }
		scope:actor = { is_available_allow_travelling = yes }
	}

	auto_accept = yes

	on_accept = {
		custom_tooltip = pay_respects_decision_effect_tooltip
		scope:actor = {
			save_scope_as = homage_subordinate
			court_owner = {
				save_scope_as = harem_liege
			}
			trigger_event = {
				id = consort_play.0004
				days = { 5 10 }
			}
		}
		#scope:recipient = {
		#	save_scope_as = homage_authority
		#	trigger_event = {
		#		id = consort_play.0002
		#		days = 3
		#	}
		#}
	}
	
	# AI
	ai_will_do = {
		base = 0
	}
}