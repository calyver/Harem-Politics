namespace = harem_politics

#################
##Begging event##
#################
scripted_trigger harem_politics_demoted_consort_trigger = {
	is_physically_able_ai_adult = yes
	is_demoted_consort_trigger = yes
	NOR = {
		has_character_flag = flag_pleaded_for
		AND = {
			exists = root.primary_spouse 
			this = root.primary_spouse 
		}
		AND = { 
			has_character_flag = flag_demoted_grand_consort
			is_grand_consort_trigger = yes
		}
		AND = { 
			has_character_flag = flag_demoted_spouse
			is_spouse_of = root
		}
	}
	is_courtier_of = root
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
	has_opinion_modifier = {
		target = root
		modifier = demoted_me_concubine_marriage_opinion
	}
}

harem_politics.0001 = {
	type = character_event
	title = harem_politics.0001.t
	desc = {
		desc = harem_politics.0001.start.desc
		first_valid = {
			triggered_desc = { #Is parent of root
				trigger = {
					scope:beggar = {
						is_parent_of = root
					}
				}
				desc = harem_politics.0001.child.desc
			}
			triggered_desc = { #Root is their brother
				trigger = {
					scope:beggar = {
						is_sibling_of = root
					}
					is_male = yes
				}
				desc = harem_politics.0001.brother.desc
			}
			triggered_desc = { #Root is their sister
				trigger = {
					scope:beggar = {
						is_sibling_of = root
					}
					is_female = yes
				}
				desc = harem_politics.0001.sister.desc
			}
			triggered_desc = { #Root is their father
				trigger = {
					scope:beggar = {
						is_child_of = root
					}
					is_male = yes
				}
				desc = harem_politics.0001.father.desc
			}
			triggered_desc = { #Root is their mother
				trigger = {
					scope:beggar = {
						is_child_of = root
					}
					is_female = yes
				}
				desc = harem_politics.0001.mother.desc
			}
			triggered_desc = {
				desc = harem_politics.0001.generic_1.desc
			}
		}
		desc = harem_politics.0001.end.desc
	}
	theme = realm
	
	left_portrait = { 	
		character = root
		animation = dismissal
	}
	
	right_portrait = { 	
		character = scope:beggar
		animation = beg
	}
	
	lower_center_portrait = { 	
		character = scope:demoted_consort
	}
	
	trigger = {
		any_consort = {
			harem_politics_demoted_consort_trigger = yes
		}
		OR = {
			any_courtier = {
				is_physically_able_ai = yes
				NOR = {
					has_trait = ill
					has_trait = wounded
					has_character_modifier = recently_tortured
					has_hook = root
					has_strong_hook = root
					has_character_flag = made_a_plea_flag
				}
				age >= 15
				OR = {
					AND = {
						is_travelling = yes
						current_travel_plan ={
							travel_plan_owner = root
						}
					}
					AND = {
						is_travelling = no
						root = {
							is_travelling = no
						}
					}
				}
			}
			any_vassal = {
				OR = {
					AND = {
						is_available_at_peace_ai_adult = yes
						NOR = {
							has_trait = ill
							has_trait = wounded
							has_character_modifier = recently_tortured
							has_hook = root
							has_strong_hook = root
							has_character_flag = made_a_plea_flag
						}
					}
					any_courtier = {
						is_available_at_peace_ai_adult = yes
						NOR = {
							has_trait = ill
							has_trait = wounded
							has_character_modifier = recently_tortured
							has_hook = root
							has_strong_hook = root
							has_character_flag = made_a_plea_flag
						}
					}
				}
			}
		}
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
		NOT = {
			has_character_modifier = mourner_modifier
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.5
			any_consort = {
				has_character_modifier = demoted_primary_spouse_modifier
			}
		}
		modifier = {
			add = -0.15
			any_consort = {
				NOT = { has_character_modifier = demoted_primary_spouse_modifier }
			}
		}
	}
	
	immediate = {
		save_scope_as = actor
		save_scope_as = harem_liege
		every_consort = {
			limit = {
				harem_politics_demoted_consort_trigger = yes
			}
			add_to_list = demoted_consorts_list
		}

		random_in_list = {
			list = demoted_consorts_list
			weight = {
				base = 10
				modifier = { #The main spouse is more important
					has_character_modifier = demoted_primary_spouse_modifier
					add = 100
				}
				modifier = { #Noblewomen are more important
					is_lowborn = no
					add = 10
				}
				modifier = { #Relatives of rulers are more important
					any_close_or_extended_family_member = {
						is_landed = yes
					}
					add = 10
				}
				modifier = { #Child of vassals are more important
					any_close_or_extended_family_member = {
						is_vassal_of = root
					}
					add = 10
				}
				modifier = { #Child of powerful vassals are more important
					any_close_or_extended_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
					}
					add = 20
				}
				modifier = { #If they're related to root, it's even better
					any_close_or_extended_family_member = {
						is_close_family_of = root
					}
					add = 20
				}
				modifier = { #If they're related to root, it's even better
					exists = dynasty
					exists = root.dynasty
					dynasty = root.dynasty
					add = 10
				}
				modifier = { #If they're related to root, it's even better
					exists = house
					exists = root.house
					house = root.house
					add = 10
				}
				modifier = { #Having kids make people pity you
					any_child = {
						count >= 1
					}
					add = 5
				}
				modifier = { #Sharing root faith is even better
					faith = root.faith
					add = 15
				}
			}
			save_scope_as = demoted_consort
		}
		scope:demoted_consort = {
			every_close_or_extended_family_member = {
				limit = {
					AND = {	
						is_available_at_peace_ai_adult = yes
						NOR = {
							has_trait = ill
							has_trait = wounded
							has_character_modifier = recently_tortured
							has_hook = root
							has_strong_hook = root
							has_character_flag = made_a_plea_flag
							this = root
							is_courtier_of = root
						}
						any_liege_or_above = {
							this = root
						}
					}
				}
				add_to_list = pleaders_list
			}
			every_relation = {
				type = friend
				limit = {
					AND = {	
						is_available_at_peace_ai_adult = yes
						NOR = {
							has_trait = ill
							has_trait = wounded
							has_character_modifier = recently_tortured
							has_hook = root
							has_strong_hook = root
							has_character_flag = made_a_plea_flag
							this = root
							is_courtier_of = root
						}
						any_liege_or_above = {
							this = root
						}
					}
				}
				add_to_list = pleaders_list
			}
			if = {
				limit = {
					exists = scope:demoted_consort.dynasty
				}
				scope:demoted_consort.dynasty = {
					if = {
						limit = {
							any_dynasty_member = {
								is_available_at_peace_ai_adult = yes
								NOR = {
									has_trait = ill
									has_trait = wounded
									has_character_modifier = recently_tortured
									has_hook = root
									has_strong_hook = root
									has_character_flag = made_a_plea_flag
									this = root
									is_courtier_of = root
								}
								any_liege_or_above = {
									this = root
								}
							}
						}
						every_dynasty_member = {
							limit = {
								AND = {	
									is_available_at_peace_ai_adult = yes
									NOR = {
										has_trait = ill
										has_trait = wounded
										has_character_modifier = recently_tortured
										has_hook = root
										has_strong_hook = root
										has_character_flag = made_a_plea_flag
										this = root
										is_courtier_of = root
									}
									any_liege_or_above = {
										this = root
									}
								}
							}
							add_to_list = pleaders_list
						}
					}
				}
			}
		}
		every_vassal = {
			limit = {
				AND = {	
					is_available_at_peace_ai_adult = yes
					NOR = {
						has_trait = ill
						has_trait = wounded
						has_character_modifier = recently_tortured
						has_hook = root
						has_strong_hook = root
						has_character_flag = made_a_plea_flag
					}
				}
			}
			add_to_list = pleaders_list
		}
		every_courtier = {
			limit = {
				AND = {	
					is_physically_able_ai = yes
					NOR = {
						has_trait = ill
						has_trait = wounded
						has_character_modifier = recently_tortured
						has_hook = root
						has_strong_hook = root
						has_character_flag = made_a_plea_flag
						this = scope:demoted_consort
					}
					age >= 15
					OR = {
						AND = {
							is_travelling = yes
							current_travel_plan ={
								travel_plan_owner = root
							}
						}
						AND = {
							is_travelling = no
							root = {
								is_travelling = no
							}
						}
					}
				}
			}
			add_to_list = pleaders_list
		}

		random_in_list = {
			list = pleaders_list
			limit = {
				NOR = {
					has_hook = root
					has_strong_hook = root
					has_character_flag = made_a_plea_flag
					is_liege_or_above_of = root
				}
			}
			weight = { 
				base = 30
				modifier = { #Relatives are concerned
					is_extended_family_of = scope:demoted_consort
					add = 10
				}
				modifier = { #Close relatives are even more concerned
					is_close_family_of = scope:demoted_consort
					add = 20
				}
				modifier = { #More if they're recipient's parents
					is_parent_of = scope:demoted_consort
					add = 15
				}
				modifier = { #Children listen to their parents
					is_parent_of = root
					is_landed = no
					add = 10
				}
				modifier = { #Dynasty members are concernced
					exists = dynasty
					exists = scope:demoted_consort.dynasty
					dynasty = scope:demoted_consort.dynasty
					add = 10
				}
				modifier = { #House members are concernced
					exists = house
					exists = scope:demoted_consort.house
					house = scope:demoted_consort.house
					add = 20
				}
				modifier = { #Vassals are more concerned
					is_vassal_of = root
					add = 10
				}
				modifier = { #Powerful characters are more concerned
					OR = {
						is_councillor_of = root
						is_powerful_vassal_of = root
					}
					add = 5
				}
				modifier = { #Barons are ignored
					highest_held_title_tier = tier_barony
					add = -30
				}
				modifier = { #Someone with a high opinion is very likely to plea
					add = 20
					opinion = {
						target = scope:demoted_consort
						value >= high_positive_opinion
					}
				}
				modifier = { #Children listen to their parents
					AND = {
						OR = {
							root.faith = { has_doctrine = tenet_ancestor_worship }
							root.culture = { has_cultural_tradition = tradition_mystical_ancestors }
						}
						is_parent_of = root
						is_landed = no
						OR = {
							opinion = {
								target = scope:demoted_consort
								value >= low_positive_opinion
							}
							AND = {
								exists = dynasty
								exists = scope:demoted_consort.dynasty
								dynasty = scope:demoted_consort.dynasty
							}
							any_close_or_extended_family_member = {
								this = scope:demoted_consort
							}
						}
					}
					add = 100
				}
				modifier = { #Zealous characters are more likely if they have virtuous traits
					scope:demoted_consort.num_virtuous_traits > 0
					scope:demoted_consort.num_sinful_traits < 1
					OR = {
						ai_zeal >= high_positive_ai_value
						has_trait = zealous
					}
					add = 15
				}
				modifier = { #The court chaplain might intervine if the recipient doesn't have sinful traits
					is_councillor_of = root
					has_council_position = councillor_court_chaplain
					scope:demoted_consort.num_sinful_traits < 1
					add = 10
				}
				modifier = { #Zealous characters are less likely if they have sinful traits
					scope:demoted_consort.num_sinful_traits >= 1
					OR = {
						ai_zeal >= high_positive_ai_value
						has_trait = zealous
						has_council_position = councillor_court_chaplain
					}
					add = -15
				}
				modifier = { #Same culture is more likely
					culture = root.culture
					add = 5
				}
				modifier = { #Different recipient faith makes them less likely. Although cynicals don't care about this.
					NOR = { 
						faith = scope:demoted_consort.faith
						has_trait = cynical
					}
					add = -15
				}
				modifier = { #More likely if they don't approve of concubinage
					scope:demoted_consort = {
						is_concubine = yes
					}
					NOR = { 
						accepts_concubinage = yes
					}
					add = 10
				}
				modifier = { #House heads are more concerned
					exists = house
					exists = scope:demoted_consort.house
					house = scope:demoted_consort.house
					is_house_head = yes
					add = 10
				}
				modifier = { #Dynasty heads are more concerned
					exists = dynasty
					exists = scope:demoted_consort.dynasty
					dynasty = scope:demoted_consort.dynasty
					is_dynast = yes
					add = 10
				}
				modifier = { #Just characters are more likely to jump if the recipient isn't a criminal.
					AND = {
						has_trait = just
						root = { 
							NOT = { has_imprisonment_reason = scope:demoted_consort }
						}
					}
					add = 10
				}
				modifier = { #Just characters are less likely to jump if the recipient is a criminal.
					AND = {
						has_trait = just
						root = { 
							has_imprisonment_reason = scope:demoted_consort 
						}
					}
					add = -10
				}
				modifier = { #Traits considerations
					OR = {
						has_trait = brave
						has_trait = stubborn
						has_trait = ambitious
					}
					NOR = {
						has_trait = craven
						has_trait = fickle
						has_trait = shy
					}
					add = 10
				}
				modifier = { #Traits considerations
					OR = {
						has_trait = craven
						has_trait = fickle
						has_trait = shy
					}
					NOR = {
						has_trait = brave
						has_trait = stubborn
						has_trait = ambitious
					}
					add = -15
				}
				modifier = { #Evil consorts are not likely to participate
					AND = {
						harem_politics_evil_consort_trigger = yes
						is_consort_of = root
					}
					add = -30
				}
				modifier = { #Children of the marriage are likely to make a plea
					AND = {
						is_child_of = root
						is_child_of = scope:demoted_consort
					}
					add = 20
				}
				modifier = { #Demoted consorts
					is_demoted_consort_trigger = yes
					add = -40
				}
			}
			save_scope_as = beggar
		}
		if = {
			limit = {
				is_married = yes
				allowed_more_spouses = no
			}
			every_spouse = {
				limit = {
					AND = {
						NOT = {
							this = scope:demoted_consort
						}
					}
				}
				add_to_list = demoted_recipient_list
			}

			random_in_list = {
				list = demoted_recipient_list
				weight = {
					base = 200
					modifier = { #The Primary Spouse is too important
						this = root.primary_spouse
						add = -75
					}
					modifier = { #The Grand Consort is too important
						is_grand_consort_trigger = yes
						add = -50
					}
					modifier = { #Noblewomen are more important
						is_lowborn = yes
						add = 20
					}
					modifier = { #Relatives of rulers are more important
						any_close_or_extended_family_member = {
							is_landed = yes
						}
						add = -10
					}
					modifier = { #Child of vassals are more important
						any_close_or_extended_family_member = {
							is_vassal_of = root
						}
						add = -10
					}
					modifier = { #Child of powerful vassals are more important
						any_close_or_extended_family_member = {
							OR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
							}
						}
						add = -50
					}
					modifier = {
						any_close_or_extended_family_member = {
							is_close_family_of = root
						}
						add = -20
					}
					modifier = { 
						any_child = {
							count >= 1
						}
						add = -10
					}
					modifier = { 
						any_child = {
							count >= 3
						}
						add = -20
					}
					modifier = { 
						any_child = {
							this = root.player_heir
						}
						add = -50
					}
					modifier = { #Sharing root faith is even better
						faith = root.faith
						add = -20
					}
					modifier = { #Lovers and friends
						OR = {
							has_character_modifier = favored_consort_modifier
							has_relation_best_friend = root
							has_relation_friend = root
							has_relation_lover = root
							has_relation_soulmate = root
						}
						add = -50
					}
					modifier = { #Enemies and unfavored consorts
						OR = {
							has_character_modifier = unfavored_consort_modifier
							has_relation_nemesis = root
							has_relation_rival = root
						}
						add = 50
					}
				}
				save_scope_as = possible_recipient
			}
		}
	}
	
	option = { # Restore their position
		name = harem_politics.0001.a
		if = {
			limit = { #Restore the PS
				scope:demoted_consort = {
					has_character_modifier = demoted_primary_spouse_modifier
				}
			}
			custom_tooltip = harem_politics.0001.a.tt.ps
		}
		else_if = { #Restore the Grand Consort
			limit = {
				scope:demoted_consort = {
					has_character_flag = flag_demoted_grand_consort
				}
			}
			custom_tooltip = harem_politics.0001.a.tt.gc
		}
		else = { #Restore a SS
			custom_tooltip = harem_politics.0001.a.tt.ss
		}
		custom_tooltip = harem_politics.0001.a.tt.demotion
		trigger = {
			scope:demoted_consort = {
				OR = {
					AND = { #Former PS
						has_character_modifier = demoted_primary_spouse_modifier
						OR = {
							is_spouse_of = root
							AND = {
								is_concubine_of = root
								root = {
									allowed_more_spouses = yes
								}
							}
						}
					}
					AND = { #Former GC
						has_character_flag = flag_demoted_grand_consort
						root.highest_held_title_tier >= tier_kingdom
						OR = {	
							AND = {	
								is_concubine_of = root
								root = {
									OR = {	
										AND = {
											accepts_polygamy = yes
											allowed_more_spouses = yes
										}
										accepts_polygamy = no
									}
								}
							}
							is_spouse_of = root
						}
					}
					AND = { #Former SS
						has_character_flag = flag_demoted_spouse
						is_concubine_of = root
						root = {
							allowed_more_spouses = yes
						}
					}
				}
				NOT = {
					this = root.primary_spouse
				}
			}
		}
		scope:beggar = {
			add_opinion = {
				target = root
				modifier = plea_heard_opinion
			}
			add_character_flag = {
				flag = made_a_plea_flag
				days = 540
			}
		}
		scope:demoted_consort = {
			add_opinion = {
				target = root
				modifier = reinstated_me_opinion
			}
			add_opinion = {
				target = scope:beggar
				modifier = plead_for_me_opinion
			}
			if = {
				limit = {
					NOR = {
						has_relation_best_friend = scope:beggar
						has_relation_friend = scope:beggar
						has_relation_potential_friend = scope:beggar
					}
				}
				progress_towards_friend_effect = {
					CHARACTER = scope:beggar
					REASON = plead_for_me_reason
					OPINION = 0
				}
			}
			calyver_favor_huge_gain_effect = yes
		}
		hidden_effect = {
			if = { # Former primary spouse is a secondary spouse
				limit = {
					scope:demoted_consort = {
						AND = {
							has_character_modifier = demoted_primary_spouse_modifier
							is_spouse_of = root
							NOT = {
								this = root.primary_spouse
							}
						}
					}
				}
				scope:demoted_consort = {
					save_scope_as = recipient
				}
				set_primary_spouse_effect = yes
			}
			if = { # Former primary spouse is a concubine
				limit = {
					scope:demoted_consort = {
						AND = {
							has_character_modifier = demoted_primary_spouse_modifier
							is_concubine_of = root
						}
					}
				}
				if = { # Root is NOT allowed to have more spouses. A spouse must be demoted
					limit = {
						allowed_more_spouses = no
						exists = scope:possible_recipient
					}
					scope:possible_recipient = {
						save_scope_as = recipient
					}
					spouse_demotion_effect = yes
					clear_saved_scope = recipient
				}
				if = {
					limit = {
						is_female = yes
					}
					marry_matrilineal = scope:demoted_consort
				}
				else = {
					marry = scope:demoted_consort
				}
				scope:demoted_consort = {
					save_scope_as = secondary_recipient
				}
				save_scope_as = secondary_actor
				save_scope_as = recipient
				calyver_marriage_interaction_on_accept_effect = yes
				clear_saved_scope = recipient
				if = {
					limit = {
						exists = primary_spouse
						primary_spouse = {
							NOT = {
								this = scope:demoted_consort
							}
						}
					}
					scope:demoted_consort = {
						save_scope_as = recipient
					}
					set_primary_spouse_effect = yes
				}
			}
			
			if = { # Former Grand Consort
				limit = {
					scope:demoted_consort = {
						AND = {
							has_character_flag = flag_demoted_grand_consort
							root.highest_held_title_tier >= tier_kingdom
						}
					}
				}
				if = { #Is a concubine
					limit = {
						scope:demoted_consort = {
							is_concubine_of = root
						}
					}
					if = { # Root accepts polygamy
						limit = {
							accepts_polygamy = yes
						}
						if = { # Root is NOT allowed to have more spouses. A spouse must be demoted
							limit = {
								allowed_more_spouses = no
								exists = scope:possible_recipient
							}
							scope:possible_recipient = {
								save_scope_as = recipient
							}
							spouse_demotion_effect = yes
							clear_saved_scope = recipient
						}
						if = {
							limit = {
								is_female = yes
							}
							marry_matrilineal = scope:demoted_consort
						}
						else = {
							marry = scope:demoted_consort
						}
						scope:demoted_consort = {
							save_scope_as = secondary_recipient
						}
						save_scope_as = secondary_actor
						save_scope_as = recipient
						calyver_marriage_interaction_on_accept_effect = yes
					}
				}
				if = { #If there is a Grand Consort, they are demoted too
					limit = {
						any_consort = {
							is_grand_consort_trigger = yes
						}
					}
					random_consort = {
						limit = {
							is_grand_consort_trigger = yes
						}
						save_scope_as = current_grand_consort
					}
					revoke_court_position = {
						recipient = scope:current_grand_consort
						court_position = grand_consort_court_position
					}
				}
				appoint_court_position = {
					recipient = scope:demoted_consort
					court_position = grand_consort_court_position
				}
			}
			if = { # Former SS is a concubine
				limit = {
					scope:demoted_consort = {
						AND = {
							has_character_flag = flag_demoted_spouse
							is_concubine_of = root
						}
					}
				}
				save_scope_as = secondary_actor
				if = { # Root is NOT allowed to have more spouses. A spouse must be demoted
					limit = {
						allowed_more_spouses = no
						exists = scope:possible_recipient
					}
					scope:possible_recipient = {
						save_scope_as = recipient
					}
					spouse_demotion_effect = yes
					clear_saved_scope = recipient
				}
				if = {
					limit = {
						is_female = yes
					}
					marry_matrilineal = scope:demoted_consort
				}
				else = {
					marry = scope:demoted_consort
				}
				scope:demoted_consort = {
					save_scope_as = secondary_recipient
				}
				save_scope_as = recipient
				calyver_marriage_interaction_on_accept_effect = yes
			}
		}
		
		if = {
			limit = {
				OR = {
					AND = {
						has_imprisonment_reason = scope:demoted_consort
						has_trait = just
					}
					AND = {
						scope:demoted_consort.num_virtuous_traits = 0
						scope:demoted_consort.num_sinful_traits >= 1
						has_trait = zealous
					}
				}
			}
			stress_impact = {
				just = minor_stress_impact_gain
				zealous = minor_stress_impact_gain
			}
		}
		stress_impact = {
			stubborn = minor_stress_impact_gain
			fickle = minor_stress_impact_loss
		}
		ai_chance = {
			base = 0
			modifier = { #Stress management
				add = -30
				OR = {
					AND = {
						has_imprisonment_reason = scope:demoted_consort
						has_trait = just
					}
					AND = {
						scope:demoted_consort.num_virtuous_traits = 0
						scope:demoted_consort.num_sinful_traits >= 1
						has_trait = zealous
					}
				}
			}
			modifier = { #Less likely if stubborn
				add = -30
				has_trait = stubborn
			}
			modifier = { #More likely if fickle
				add = 35
				OR = {
					has_trait = fickle
					has_trait = compassionate
					has_trait = forgiving
				}
			}
			modifier = { #More likely if spouse comes from a prominent family
				add = 20
				scope:demoted_consort = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
					}
				}
			}
			modifier = { #More likely if primary spouse does not come from a prominent family
				add = 10
				exists = primary_spouse
				primary_spouse = {
					OR = {
						any_close_family_member = {
							NOR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
							}
						}
						is_lowborn = yes
					}
				}
			}
			modifier = { #More likely if beggar comes from a prominent family
				add = 10
				scope:beggar = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_close_family_of = root
							is_liege_or_above_of = root
						}
					}
				}
			}
			modifier = { #More likely if zealous
				add = 10
				AND = {
					scope:demoted_consort.num_virtuous_traits >= 1
					scope:demoted_consort.num_sinful_traits = 0
					has_trait = zealous
				}
			}
			modifier = { #More likely if just
				add = 20
				AND = {
					has_trait = just
					NOT = { has_imprisonment_reason = scope:demoted_consort }
				}
			}
			modifier = { #More likely if high opinion of recipient
				add = 10
				opinion = {
					target = scope:demoted_consort
					value >= medium_positive_opinion
				}
			}
			modifier = { #More likely if high opinion of recipient
				add = 15
				opinion = {
					target = scope:demoted_consort
					value >= high_positive_opinion
				}
			}
			modifier = { #More likely if soulmate
				add = 30
				has_relation_soulmate = scope:demoted_consort
			}
			modifier = { #More likely if BFF
				add = 20
				OR = {
					has_relation_best_friend = scope:demoted_consort
					has_relation_lover = scope:demoted_consort
				}
			}
			modifier = { #More likely if friends
				add = 15
				has_relation_friend = scope:demoted_consort
			}
			modifier = { #More likely if high opinion of beggar
				add = 10
				opinion = {
					target = scope:beggar
					value >= medium_positive_opinion
				}
			}
			modifier = { #More likely if low opinion of primary spouse
				add = 15
				exists = primary_spouse
				opinion = {
					target = root.primary_spouse
					value <= low_negative_opinion
				}
			}
			modifier = { #More likely if they have many children
				add = 15
				scope:demoted_consort = {
					any_child = {
						even_if_dead = yes
						count >= 4
					}
				}
			}
			modifier = { #More likely if they have many children
				add = 5
				scope:demoted_consort = {
					any_child = {
						even_if_dead = yes
						count >= 5
					}
				}
			}
			modifier = { #More likely if the player heir is their child
				add = 30
				scope:demoted_consort = {
					any_child = {
						this = root.player_heir
					}
				}
			}
			modifier = { #Demoted consorts
				scope:beggar = {
					is_demoted_consort_trigger = yes
				}
				add = -15
			}
		}
	}
	
	option = { # Compromise - don't reinstate. The consort gets a better position
		name = harem_politics.0001.b
		if = {
			limit = { #PS
				scope:demoted_consort = {
					has_character_modifier = demoted_primary_spouse_modifier
				}
			}
			if = {
				limit = { #Can be a GC
					root.highest_held_title_tier >= tier_kingdom
				}
				custom_tooltip = harem_politics.0001.b.tt.ps_gc
			}
			else_if = {
				limit = { #Can remarry
					root.highest_held_title_tier < tier_kingdom
				}
				custom_tooltip = harem_politics.0001.b.tt.ps_ss
			}
		}
		else_if = { #Restore the Grand Consort
			limit = {
				scope:demoted_consort = {
					has_character_flag = flag_demoted_grand_consort
				}
			}
			custom_tooltip = harem_politics.0001.b.tt.ps_ss
		}
		custom_tooltip = harem_politics.0001.a.tt.demotion
		trigger = {
			scope:demoted_consort = {
				OR = {
					AND = { #Former PS
						has_character_modifier = demoted_primary_spouse_modifier
						NOT = {
							is_grand_consort_trigger = yes
						}
						OR = {	
							AND = {	
								is_concubine_of = root
								root = {
									highest_held_title_tier >= tier_kingdom
									OR = {	
										AND = {
											accepts_polygamy = yes
											any_spouse = {	
												count > 0
											}
											OR = {
												allowed_more_spouses = yes
												AND = {
													allowed_more_spouses = no
													faith = {
														# We are not required to seek approval of a spiritual HoF
														NAND = {
															has_doctrine = doctrine_divorce_approval
															has_doctrine = doctrine_spiritual_head
															exists = religious_head
														}
														# We are not required to seek approval of a house head
														NAND = {
															has_doctrine = doctrine_divorce_approval
															exists = scope:actor.house
															exists = scope:actor.house.house_head
															scope:actor = { is_house_head = no }
														}
													}
												}
											}
										}
										accepts_polygamy = no
									}
								}
							}
							AND = {
								is_spouse_of = root
								root.highest_held_title_tier >= tier_kingdom
							}
						}
					}
					AND = { #Former GC
						has_character_flag = flag_demoted_grand_consort
						is_concubine_of = root
						root = {
							AND = {
								accepts_polygamy = yes
								any_spouse = {	
									count > 0
								}
								OR = {	
									allowed_more_spouses = yes
									AND = {
										allowed_more_spouses = no
										faith = {
											# We are not required to seek approval of a spiritual HoF
											NAND = {
												has_doctrine = doctrine_divorce_approval
												has_doctrine = doctrine_spiritual_head
												exists = religious_head
											}
											# We are not required to seek approval of a house head
											NAND = {
												has_doctrine = doctrine_divorce_approval
												exists = scope:actor.house
												exists = scope:actor.house.house_head
												scope:actor = { is_house_head = no }
											}
										}
									}
								}
							}
						}
					}
				}
				NOT = {
					this = root.primary_spouse
				}
			}
		}
		scope:beggar = {
			add_opinion = {
				target = root
				modifier = reached_compromise_opinion
			}
			add_character_flag = {
				flag = made_a_plea_flag
				days = 540
			}
		}
		scope:demoted_consort = {
			add_opinion = {
				target = scope:beggar
				modifier = plead_for_me_opinion
			}
			if = {
				limit = {
					NOR = {
						has_relation_best_friend = scope:beggar
						has_relation_friend = scope:beggar
						has_relation_potential_friend = scope:beggar
					}
				}
				progress_towards_friend_effect = {
					CHARACTER = scope:beggar
					REASON = plead_for_me_reason
					OPINION = 0
				}
			}
			add_character_flag = {
				flag = flag_pleaded_for
			}
			calyver_favor_moderate_gain_effect = yes
		}
		hidden_effect = {
			#A compromise for a former PS is to remarry them
			if = {
				limit = {
					scope:demoted_consort = {
						AND = {
							has_character_modifier = demoted_primary_spouse_modifier
							NOR = { 
								this = root.primary_spouse 
								is_grand_consort_trigger = yes
							}
						}
					}
				}
				if = { #Is a concubine
					limit = {
						scope:demoted_consort = {
							is_concubine_of = root
						}
					}
					if = { # Root accepts polygamy
						limit = {
							accepts_polygamy = yes
						}
						if = { # Root is NOT allowed to have more spouses. A spouse must be demoted
							limit = {
								allowed_more_spouses = no
								exists = scope:possible_recipient
							}
							scope:possible_recipient = {
								save_scope_as = recipient
							}
							spouse_demotion_effect = yes
							clear_saved_scope = recipient
						}
						if = {
							limit = {
								is_female = yes
							}
							marry_matrilineal = scope:demoted_consort
						}
						else = {
							marry = scope:demoted_consort
						}
						scope:demoted_consort = {
							save_scope_as = secondary_recipient
						}
						save_scope_as = secondary_actor
						save_scope_as = recipient
						calyver_marriage_interaction_on_accept_effect = yes
					}
				}
				if = { #If root can have a GC, the only compromise is to make former PS a GC
					limit = {
						root.highest_held_title_tier >= tier_kingdom
					}
					if = { #If there is a Grand Consort, they are demoted too
						limit = {
							any_consort = {
								is_grand_consort_trigger = yes
							}
						}
						random_consort = {
							limit = {
								is_grand_consort_trigger = yes
							}
							save_scope_as = current_grand_consort
						}
						revoke_court_position = {
							recipient = scope:current_grand_consort
							court_position = grand_consort_court_position
						}
					}
					appoint_court_position = {
						recipient = scope:demoted_consort
						court_position = grand_consort_court_position
					}
				}
			}
			#The compromise for a former GC is to marry them if faith accepts polygamy
			if = { # Former SS is a concubine
				limit = {
					scope:demoted_consort = {
						AND = {
							has_character_flag = flag_demoted_grand_consort
							is_concubine_of = root
							root = {
								AND = {
									accepts_polygamy = yes
									any_spouse = {	
										count > 0
									}
								}
							}
						}
					}
				}
				if = { # Root is NOT allowed to have more spouses. A spouse must be demoted
					limit = {
						allowed_more_spouses = no
						exists = scope:possible_recipient
					}
					scope:possible_recipient = {
						save_scope_as = recipient
					}
					spouse_demotion_effect = yes
					clear_saved_scope = recipient
				}
				if = {
					limit = {
						is_female = yes
					}
					marry_matrilineal = scope:demoted_consort
				}
				else = {
					marry = scope:demoted_consort
				}
				scope:demoted_consort = {
					save_scope_as = secondary_recipient
				}
				save_scope_as = secondary_actor
				save_scope_as = recipient
				calyver_marriage_interaction_on_accept_effect = yes
			}
		}
		
		stress_impact = {
			stubborn = minor_stress_impact_gain
			fickle = minor_stress_impact_loss
		}
		ai_chance = {
			base = 0
			modifier = { #Stress management
				add = -30
				OR = {
					AND = {
						has_imprisonment_reason = scope:demoted_consort
						has_trait = just
					}
					AND = {
						scope:demoted_consort.num_virtuous_traits = 0
						scope:demoted_consort.num_sinful_traits >= 1
						has_trait = zealous
					}
				}
			}
			modifier = { #More likely if fickle
				add = 30
				OR = {
					has_trait = fickle
					has_trait = compassionate
					has_trait = forgiving
				}
			}
			modifier = { #Less likely if stubborn
				add = -30
				has_trait = stubborn
			}
			modifier = { #More likely if spouse comes from a prominent family
				add = 15
				scope:demoted_consort = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
					}
				}
			}
			modifier = { #More likely if beggar comes from a prominent family
				add = 5
				scope:beggar = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_close_family_of = root
						}
					}
				}
			}
			modifier = { #More likely if primary spouse comes from a prominent family
				add = 10
				exists = primary_spouse
				primary_spouse = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_close_family_of = root
						}
					}
				}
			}
			modifier = { #More likely if zealous
				add = 15
				AND = {
					scope:demoted_consort.num_virtuous_traits >= 1
					scope:demoted_consort.num_sinful_traits = 0
					has_trait = zealous
				}
			}
			modifier = { #More likely if just
				add = 15
				AND = {
					has_trait = just
					has_imprisonment_reason = scope:demoted_consort
				}
			}
			modifier = { #More likely if high opinion of primary spouse
				add = 15
				exists = primary_spouse
				opinion = {
					target = primary_spouse
					value >= medium_positive_opinion
				}
			}
			modifier = { #More likely if high opinion of recipient
				add = 10
				opinion = {
					target = scope:demoted_consort
					value >= low_positive_opinion
				}
			}
			modifier = { #More likely if BFF
				add = 25
				has_relation_best_friend = scope:demoted_consort
			}
			modifier = { #More likely if friends
				add = 20
				has_relation_friend = scope:demoted_consort
			}
			modifier = { #More likely if high opinion of beggar
				add = 10
				opinion = {
					target = scope:beggar
					value >= medium_positive_opinion
				}
			}
			modifier = { #More likely if they have many children
				add = 15
				scope:demoted_consort = {
					any_child = {
						even_if_dead = yes
						count >= 4
					}
				}
			}
			modifier = { #More likely if they have many children
				add = 5
				scope:demoted_consort = {
					any_child = {
						even_if_dead = yes
						count >= 5
					}
				}
			}
			modifier = { #Demoted consorts
				scope:beggar = {
					OR = {
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_flag = flag_demoted_spouse
					}
				}
				add = -15
			}
		}
	}
	
	option = { # I disagree
		name = harem_politics.0001.c
		scope:beggar = {
			add_opinion = {
				target = root
				modifier = rejected_plea_opinion
			}
			add_character_flag = {
				flag = made_a_plea_flag
				days = 540
			}
		}
		scope:demoted_consort = {
			add_character_flag = {
				flag = flag_pleaded_for
			}
			add_opinion = {
				target = scope:beggar
				modifier = plead_for_me_opinion
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						NOT = { has_imprisonment_reason = scope:demoted_consort }
						has_trait = just
					}
					AND = {
						scope:demoted_consort.num_virtuous_traits > 0
						scope:demoted_consort.num_sinful_traits < 1
						has_trait = zealous
					}
					has_trait = forgiving
					has_trait = compassionate
				}
			}
			stress_impact = {
				forgiving = minor_stress_impact_gain
				compassionate = minor_stress_impact_gain
				just = minor_stress_impact_gain
				zealous = minor_stress_impact_gain
			}
		}
		if = {
			limit = {
				AND = {
					scope:beggar = {
						is_parent_of = root
					}
					OR = {
						faith = { has_doctrine = tenet_ancestor_worship }
						culture = { has_cultural_tradition = tradition_mystical_ancestors }
					}
				}
			}
			add_character_modifier = {
				modifier = unfilial_opinion_modifier
				years = 3
			}
		}
		stress_impact = {
			fickle = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = { #Less likely if fickle
				add = -35
				OR = {
					has_trait = fickle
					has_trait = compassionate
					has_trait = forgiving
				}
			}
			modifier = { #More likely if stubborn
				add = 30
				has_trait = stubborn
			}
			modifier = { #Stress management
				add = -30
				OR = {
					AND = {
						NOT = { has_imprisonment_reason = scope:demoted_consort }
						has_trait = just
					}
					AND = {
						scope:demoted_consort.num_virtuous_traits > 0
						scope:demoted_consort.num_sinful_traits < 1
						has_trait = zealous
					}
				}
			}
			modifier = { #More likely if spouse is lowborn
				add = 20
				scope:demoted_consort = {
					is_lowborn = yes
				}
			}
			modifier = { #More likely if beggar is lowborn
				add = 10
				scope:beggar = {
					is_lowborn = yes
				}
			}
			modifier = { #More likely if zealous
				add = 10
				AND = {
					scope:demoted_consort.num_virtuous_traits = 0
					scope:demoted_consort.num_sinful_traits >= 1
					has_trait = zealous
				}
			}
			modifier = { #More likely if just
				add = 20
				AND = {
					has_trait = just
					has_imprisonment_reason = scope:demoted_consort
				}
			}
			modifier = { #More likely if low opinion of recipient
				add = 10
				opinion = {
					target = scope:demoted_consort
					value <= low_negative_opinion
				}
			}
			modifier = { #More likely if low opinion of recipient
				add = 10
				opinion = {
					target = scope:demoted_consort
					value <= medium_negative_opinion
				}
			}
			modifier = { #More likely if low opinion of beggar
				add = 10
				opinion = {
					target = scope:beggar
					value <= low_negative_opinion
				}
			}
			modifier = { #More likely if low opinion of beggar
				add = 10
				opinion = {
					target = scope:beggar
					value <= medium_negative_opinion
				}
			}
			modifier = { #More likely if they have few children
				add = 5
				scope:demoted_consort = {
					any_child = {
						even_if_dead = yes
						count <= 2
					}
				}
			}
			modifier = { #More likely if they have no children
				add = 15
				scope:demoted_consort = {
					any_child = {
						even_if_dead = yes
						count = 0
					}
				}
			}
			modifier = { #Demoted consorts
				scope:beggar = {
					OR = {
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_flag = flag_demoted_spouse
					}
				}
				add = -15
			}
		}
	}
}

################
##Ruyi's event##
################
scripted_trigger harem_politics_hailan_trigger = {
	is_physically_able_ai_adult = yes
	NOT = {
		any_close_or_extended_family_member = {
			OR = {
				AND = {	
					exists = root.primary_spouse
					this = root.primary_spouse
				}
				is_powerful_vassal_of = root
				is_councillor_of = root
				is_parent_of = root
				is_liege_or_above_of = root
			}
		}
	}
	is_grand_consort_trigger = no
	NOR = {	
		has_relation_best_friend = root
		has_relation_friend = root
		has_relation_soulmate = root
		has_relation_lover = root
		has_character_modifier = favored_consort_modifier
		has_trait = pregnant
		has_trait = wounded
		has_character_flag = flag_scolded_consort
		has_character_modifier = demoted_primary_spouse_modifier
		has_character_modifier = demoted_spouse_modifier
	}
	is_courtier_of = root
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger harem_politics_ruyi_trigger = {
	is_physically_able_ai_adult = yes
	opinion = {
		target = $HAI$
		value > -16
	}
	NOR = {
		this = root.primary_spouse
		this = $HAI$
		has_relation_nemesis = $HAI$
		has_relation_rival = $HAI$
		has_relation_potential_rival = $HAI$
		has_relation_nemesis = root
		has_relation_rival = root
		has_relation_potential_rival = root
		has_trait = pregnant
		has_trait = ill
		has_trait = wounded
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
		has_character_modifier = recently_tortured
		has_character_modifier = demoted_primary_spouse_modifier
		has_character_modifier = demoted_spouse_modifier
	}
	is_grand_consort_trigger = no
	is_courtier_of = root
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger harem_politics_hui_trigger = {
	is_physically_able_ai_adult = yes
	NOR = {
		this = root.primary_spouse
		this = $XIAN$
		this = $HAI$
		has_relation_best_friend = $HAI$
		has_relation_friend = $HAI$
		has_relation_soulmate = $HAI$
		has_relation_lover = $HAI$
		has_relation_potential_friend = $HAI$
		has_relation_potential_lover = $HAI$
		has_relation_best_friend = $XIAN$
		has_relation_friend = $XIAN$
		has_relation_soulmate = $XIAN$
		has_relation_lover = $XIAN$
		has_relation_potential_friend = $XIAN$
		has_relation_potential_lover = $XIAN$
		has_trait = honest
		has_trait = calm
		has_trait = pregnant
		has_trait = wounded
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
		has_character_modifier = recently_tortured
		has_character_flag = flag_scolded_consort
		has_character_modifier = unfavored_consort_modifier
		has_character_modifier = demoted_primary_spouse_modifier
		has_character_modifier = demoted_spouse_modifier
	}
	harem_politics_evil_consort_trigger = yes
	is_courtier_of = root
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_effect close_relations_opinion_effect = {
	# If we're a clan this interaction affects unity
	add_clan_unity_interaction_effect = {
		CHARACTER = $EXECUTIONER$ 
		TARGET = $VICTIM$
		VALUE = medium_unity_loss
		DESC = clan_unity_execute.desc
		REVERSE_NON_HOUSE_TARGET = no
	}
	# Victim's family & spouse hates executioner
	every_close_family_member = {
		limit = { 
			NOR = { 
				this = $EXECUTIONER$ 
				this = root
			} 
		}
		add_to_temporary_list = victim_family_list
	}
	every_spouse = {
		limit = {
			AND = {
				NOR = {
					this = $EXECUTIONER$
					this = root
					is_in_list = victim_family_list
				}
			}
		}
		add_to_temporary_list = victim_family_list
	}
	
	if = {
		limit = {
			any_in_list = {
				list = victim_family_list
				count > 0
			}
		}
		if = {
			limit = {
				$EXECUTIONER$ = {
					has_execute_reason = $VICTIM$
				}
			}
			every_in_list = {
				list = victim_family_list
				custom = all_close_family_and_spouses
				add_opinion = {
					target = $EXECUTIONER$
					modifier = executed_close_family
				}
			}
		}
		else = {
			every_in_list = {
				list = victim_family_list
				custom = all_close_family_and_spouses
				add_opinion = {
					target = $EXECUTIONER$
					modifier = executed_close_family_crime
				}
			}
		}
	}

	# Victim's dynasty hates executioner
	if = {
		limit = {
			exists = dynasty
			OR = {
				AND = {
					exists = $EXECUTIONER$.dynasty
					NOT = { dynasty = $EXECUTIONER$.dynasty }
				}
				NOT = {
					exists = $EXECUTIONER$.dynasty
				}
			}
			NOT = {
				$EXECUTIONER$ = {
					has_execute_reason = $VICTIM$
				}
			}
		}
		dynasty = {
			every_dynasty_member = {
				limit = {
					NOR = {
						this = $VICTIM$
						is_in_list = victim_family_list
					}
					OR = {
						AND = {
							is_spouse_of = $VICTIM$
							opinion = {
								target = $VICTIM$
								value >= 15
							}
						}
						NOT = { is_spouse_of = $VICTIM$ } 
					}
				}
				custom = all_dynasty_members
				add_to_temporary_list = victim_dynasty_list
				add_opinion = {
					target = $EXECUTIONER$
					modifier = executed_dynasty_member
				}
			}
		}
	}
	
	# Victim's friends and lovers
	every_relation = {
		type = friend
		limit = {
			NOR = {
				this = $EXECUTIONER$ 
				this = $VICTIM$
				is_in_list = victim_family_list
				is_in_list = victim_dynasty_list
			}
		}
		add_to_list = victim_close_relations_list
	}
	every_relation = {
		type = lover
		limit = {
			NOR = {
				this = $EXECUTIONER$ 
				this = $VICTIM$
				is_in_list = victim_family_list
				is_in_list = victim_dynasty_list
				is_in_list = victim_close_relations_list
			}
		}
		add_to_list = victim_close_relations_list
	}
	every_relation = {
		type = best_friend
		limit = {
			NOR = {
				this = $EXECUTIONER$ 
				this = $VICTIM$
				is_in_list = victim_family_list
				is_in_list = victim_dynasty_list
				is_in_list = victim_close_relations_list
			}
		}
		add_to_list = victim_close_relations_list
	}
	every_relation = {
		type = soulmate
		limit = {
			NOR = {
				this = $EXECUTIONER$ 
				this = $VICTIM$
				is_in_list = victim_family_list
				is_in_list = victim_dynasty_list
				is_in_list = victim_close_relations_list
			}
		}
		add_to_list = victim_close_relations_list
	}
	if = {
		limit = {
			any_in_list = {
				list = victim_close_relations_list
				always = yes
			}
		}
		every_in_list = {
			list = victim_close_relations_list
			custom = all_friends_and_lovers
			add_opinion = {
				target = $EXECUTIONER$
				modifier = executed_close_relation_opinion
			}
		}
	}
}

harem_politics.0002 = {
	type = character_event
	title = harem_politics.0002.t
	desc = harem_politics.0002.desc
	theme = unfriendly
	override_background = {
		reference = bedchamber
	}
	
	left_portrait = { 	
		character = root
		animation = dismissal
	}
	
	right_portrait = { 	
		character = scope:ruyi
		animation = beg
	}
	trigger = {
		is_married = yes
		OR = {
			AND = {
				accepts_concubinage = yes
				accepts_polygamy = yes
				any_concubine = { #Hailan is a low-ranked consort
					harem_politics_hailan_trigger = yes
					save_temporary_scope_as = hai_changzai
				}
				any_consort = { #Consort Xian is a mid-ranked consort
					harem_politics_ruyi_trigger = { HAI = scope:hai_changzai }
					save_temporary_scope_as = xian_fei
				}
				OR = {
					AND = {
						NOT = { employs_court_position = grand_consort_court_position }
						any_spouse = { #Noble Consort Gao was the second highest consort and evil
							harem_politics_hui_trigger = { HAI = scope:hai_changzai XIAN = scope:xian_fei }
						}
					}
					AND = {
						employs_court_position = grand_consort_court_position
						any_spouse = { #Noble Consort Gao was the second highest consort and evil
							has_court_position = grand_consort_court_position
							harem_politics_hui_trigger = { HAI = scope:hai_changzai XIAN = scope:xian_fei }
						}
					}
				}
			}
			AND = {
				accepts_concubinage = yes
				accepts_polygamy = no
				any_concubine = { #Hailan is a low-ranked consort
					harem_politics_hailan_trigger = yes
					save_temporary_scope_as = hai_changzai
				}
				any_concubine = { #Consort Xian is a mid-ranked consort
					harem_politics_ruyi_trigger = { HAI = scope:hai_changzai }
					save_temporary_scope_as = xian_fei
				}
				employs_court_position = grand_consort_court_position
				any_concubine = { #Noble Consort Gao was the second highest consort and evil
					has_court_position = grand_consort_court_position
					harem_politics_hui_trigger = { HAI = scope:hai_changzai XIAN = scope:xian_fei }
				}
			}
			AND = {
				accepts_concubinage = no
				accepts_polygamy = yes
				any_spouse = { #Hailan is a low-ranked consort
					harem_politics_hailan_trigger = yes
					save_temporary_scope_as = hai_changzai
				}
				any_spouse = { #Consort Xian is a mid-ranked consort
					harem_politics_ruyi_trigger = { HAI = scope:hai_changzai }
					save_temporary_scope_as = xian_fei
				}
				employs_court_position = grand_consort_court_position
				any_spouse = { #Noble Consort Gao was the second highest consort and evil
					has_court_position = grand_consort_court_position
					harem_politics_hui_trigger = { HAI = scope:hai_changzai XIAN = scope:xian_fei }
				}
			}
		}
		NOT = { has_character_flag = had_hailan_event_flag }
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
	}
	
	immediate = {
		save_scope_as = harem_liege
		every_consort = {
			limit = {
				is_landed = no
				is_physically_able_ai_adult = yes
				NOT = { this = root.primary_spouse }
			}
			add_to_list = consorts_list
		}
		#Hailan
		random_in_list = {
			list = consorts_list
			limit = {
				harem_politics_hailan_trigger = yes
				OR = {
					is_concubine = yes
					AND = {
						root = {
							accepts_concubinage = no
						}
						is_married = yes
					}
				}
			}
			weight = {
				base = 1
				modifier = { #Lowly concubines are more likely to attract bullying
					is_lowborn = yes
					add = 20
				}
				modifier = { #Lowly concubines are more likely to attract bullying
					any_close_or_extended_family_member = {
						NOR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_parent_of = root
							is_liege_or_above_of = root
						}
					}
					add = 30
				}
				modifier = { #If she doesn't have kids, even better
					any_child = {
						even_if_dead = yes
						count >= 1
					}
					add = 20
				}
				modifier = { #Craven characters are easier to target
					OR = {
						has_trait = craven
						has_trait = shy
					}
					add = 40
				}
				modifier = { #Weak characters are easier to target
					has_character_modifier = unfavored_consort_modifier
					add = 10
				}
			}
			save_scope_as = hailan
		}
		#Ruyi
		random_in_list = {
			list = consorts_list
			limit = {
				harem_politics_ruyi_trigger = { HAI = scope:hailan }
			}
			weight = {
				base = 1
				modifier = { #Spouses are more likely to intervene
					is_spouse_of = root
					add = 25
				}
				modifier = { #Powerful consorts are more likely to intervene
					is_lowborn = no
					add = 10
				}
				modifier = { #Powerful consorts are more likely to intervene
					any_close_or_extended_family_member = {
						is_vassal_of = root
					}
					add = 10
				}
				modifier = { #Powerful consorts will take part in harem politics
					any_close_or_extended_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_parent_of = root
							is_liege_or_above_of = root
						}
					}
					add = 20
				}
				modifier = { #If this consorts is just, even better
					has_trait = just
					add = 20
				}
				modifier = { #Evil consorts won't help a helpless concubine
					harem_politics_evil_consort_trigger = no
					add = 20
				}
				modifier = { #Ruyi is Hailan's friend
					opinion = {
						target = scope:hailan
						value >= low_positive_opinion
					}
					add = 40
				}
				modifier = { #Favored consorts are more confident
					has_character_modifier = favored_consort_modifier
					add = 20
				}
			}
			save_scope_as = ruyi
		}
		#Hui
		random_in_list = {
			list = consorts_list
			limit = {
				AND = {
					OR = {
						has_court_position = grand_consort_court_position
						AND = {
							NOT = { has_court_position = grand_consort_court_position }
							ROOT = {
								NOT = { employs_court_position = grand_consort_court_position }
								accepts_concubinage = yes
								accepts_polygamy = yes
							}
						}
					}
					OR = {
						AND = {
							ROOT = {
								accepts_polygamy = no
							}
							is_concubine = yes
						}
						AND = {
							ROOT = {
								accepts_polygamy = yes
							}
							is_married = yes
						}
					}
					harem_politics_hui_trigger = { HAI = scope:hailan XIAN = scope:ruyi }
					
				}
			}
			weight = {
				base = 50
				modifier = { #Noble Consort Gao is the second highest-ranked consort
					has_court_position = grand_consort_court_position
					add = 100
				}
				modifier = { #Noble Consort Gao is the second highest-ranked consort
					is_married = yes
					add = 100
				}
				modifier = { #Powerful spouses are more likely to cause havok
					is_lowborn = no
					add = 10
				}
				modifier = { #Powerful spouses are more likely to cause havok
					any_close_or_extended_family_member = {
						is_vassal_of = root
					}
					add = 10
				}
				modifier = { #Powerful spouses are more likely to cause havok
					any_close_or_extended_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_parent_of = root
							is_liege_or_above_of = root
						}
					}
					add = 20
				}
				modifier = { #If this spouse isn't just, even better
					NOT = { has_trait = just }
					add = 30
				}
				modifier = { #If this spouse is arrogant or callous, better
					OR = {
						has_trait = arrogant
						has_trait = callous
						has_trait = sadistic
						has_trait = arbitrary
					}
					add = 30
				}
				modifier = { #Hui isn't shy
					OR = {
						has_trait = shy
						has_trait = humble
						has_trait = trusting
						has_trait = content
					}
					add = -30
				}
				modifier = { #If this spouse is friends with the main spouse
					opinion = {
						target = root.primary_spouse
						value >= low_positive_opinion
					}
					add = 10
				}
				modifier = {
					opinion = {
						target = scope:ruyi
						value <= 10
					}
					add = 10
				}
				modifier = {
					opinion = {
						target = scope:hailan
						value <= 10
					}
					add = 10
				}
				modifier = { #If this spouse doesn't like Ruyi, better
					OR = {
						has_relation_rival = scope:ruyi
						has_relation_nemesis = scope:ruyi
					}
					add = 40
				}
				modifier = { #If this spouse doesn't like Hailan, better
					OR = {
						has_relation_rival = scope:hailan
						has_relation_nemesis = scope:hailan
					}
					add = 40
				}
				modifier = { #Favored consorts are more confident
					has_character_modifier = favored_consort_modifier
					add = 20
				}
			}
			save_scope_as = hui
		}
		hidden_effect = {
			scope:hailan = {
				if = {
					limit = {
						NOT = {
							has_trait = ill
						}
					}
					contract_disease_effect = { 
						DISEASE = ill 
						TREATMENT_EVENT = yes 
					} 
				}
			}
			scope:hui = {
				if = {
					limit = {
						NOT = {
							has_trait = ill
						}
					}
					contract_disease_effect = { 
						DISEASE = ill 
						TREATMENT_EVENT = yes 
					} 
				}
			}
		}
	}
	
	option = { # I go to see what's happening
		name = harem_politics.0002.a
		custom_tooltip = harem_politics.0002.a.tt
		trigger_event = harem_politics.0003
		if = { #If the character is lazy, paranoid or craven, add stress.
			limit = {
				OR = {
					has_trait = lazy
					has_trait = paranoid
					has_trait = craven
				}
			}
			stress_impact = {
				lazy = minor_stress_impact_gain
				paranoid = minor_stress_impact_gain
				craven = minor_stress_impact_gain
			}
		}
		hidden_effect = {
			scope:hailan = {
				add_opinion = {
					target = scope:hui
					modifier = cruelty_opinion
					opinion = -30
				}
			}
			scope:ruyi = {
				add_opinion = {
					target = scope:hui
					modifier = cruelty_opinion
					opinion = -20
				}
			}
		}
		ai_chance = {
			base = 5
			ai_value_modifier = {
				ai_energy = 0.1
				ai_honor = 0.2
			}
			modifier = {
				add = 30
				OR = {
					has_trait = diligent
					has_trait = just
				}
			}
			modifier = {
				add = -30
				OR = {
					has_trait = lazy
					has_trait = paranoid
					has_trait = craven
				}
			}
			modifier = { #AI's opinion on Ruyi
				add = 5
				opinion = {
					target = scope:ruyi
					value >= low_positive_opinion
				}
			}
			modifier = { #AI's opinion on Ruyi
				add = 10
				opinion = {
					target = scope:ruyi
					value >= medium_positive_opinion
				}
			}
		}
	}
	option = { # I stay in bed
		name = harem_politics.0002.b
		stress_impact = {
			lazy = minor_stress_impact_loss
			just = minor_stress_impact_gain
			diligent = minor_stress_impact_gain
		}
		scope:ruyi = {
			add_opinion = {
				target = root
				modifier = cruelty_opinion
				opinion = -30
			}
			add_opinion = {
				target = scope:hui
				modifier = cruelty_opinion
				opinion = -30
			}
			if = {
				limit = { 
					NOR = {
						has_relation_rival = scope:hui
						has_relation_nemesis = scope:hui
						has_relation_friend = scope:hui
						has_relation_best_friend = scope:hui
					}
				}
				set_relation_rival = {
					target = scope:hui
					reason = killed_friend_harem_reason
				}
			}
			if = {
				limit = { 
					NOR = {
						has_relation_rival = root
						has_relation_nemesis = root
						has_relation_friend = root
						has_relation_best_friend = root
					}
				}
				set_relation_rival = {
					target = root
					reason = killed_friend_harem_reason
				}
			}
			calyver_favor_big_loss_effect = yes
			hidden_effect = {
				if = {
					limit = { 
						has_character_modifier = favored_consort_modifier
					}
					remove_character_modifier = favored_consort_modifier
				}
			}
			if = {
				limit = {
					NOR = {
						has_trait = forgiving
						has_trait = vengeful
					}
				}
				random = {
					chance = 10
					modifier = {
						add = 20
						NOR = {
							has_trait = compassionate
							has_trait = temperate
						}
					}
					modifier = {
						add = 40
						opinion = {
							target = scope:hailan
							value >= low_positive_opinion
						}
					}
					modifier = {
						add = 60
						opinion = {
							target = scope:hailan
							value >= medium_positive_opinion
						}
					}
					add_trait = vengeful
				}
			}
		}
		hidden_effect = {
			scope:hailan = {
				save_scope_as = secondary_recipient
				death = {
					death_reason = death_punishment
					killer = scope:hui
				}
				close_relations_opinion_effect = { VICTIM = scope:hailan EXECUTIONER = scope:hui }
			}
			scope:hui = {
				save_scope_as = secondary_actor
				add_character_modifier = { 
					modifier = safe_disease_treatment_success_high_modifier 
					days = disease_treatment_short_duration 
				}
				calyver_favor_minor_gain_effect = yes
			}
		}
		send_interface_toast = {
			type = event_generic_bad
			title = punished_consort_t
			right_icon = scope:secondary_recipient
			left_icon = scope:secondary_actor
			custom_tooltip = punished_consort_severe_desc
		}
		ai_chance = {
			base = 5
			ai_value_modifier = {
				ai_sociability = 1
				ai_energy = -0.1
				ai_honor = -0.2
			}
			modifier = {
				add = 30
				OR = {
					has_trait = lazy
					has_trait = paranoid
					has_trait = craven
				}
			}
			modifier = {
				add = -30
				OR = {
					has_trait = diligent
					has_trait = just
				}
			}
			modifier = { #AI's opinion on Ruyi
				add = 5
				opinion = {
					target = scope:ruyi
					value <= low_negative_opinion
				}
			}
			modifier = { #AI's opinion on Ruyi
				add = 10
				opinion = {
					target = scope:ruyi
					value <= medium_negative_opinion
				}
			}
		}
	}
	after = {
		add_character_flag = had_hailan_event_flag
	}
}

harem_politics.0003 = {
	type = character_event
	title = harem_politics.0002.t
	desc = harem_politics.0003.desc
	theme = unfriendly
	override_background = {
		reference = corridor_night
	}
	
	left_portrait = { 	
		character = scope:hui
		animation = beg
	}
	
	right_portrait = { 	
		character = scope:hailan
		animation = fear
	}
	trigger = {
		
	}
	
	immediate = {
		
	}
	
	option = { # Side with Hailan
		name = harem_politics.0003.a
		scope:hailan = {
			add_opinion = {
				target = root
				modifier = thankful_consort_opinion
			}
			add_opinion = {
				target = scope:ruyi
				modifier = grateful_opinion
				opinion = 20
			}
			if = {
				limit = { 
					NOR = {
						has_relation_friend = scope:ruyi
						has_relation_best_friend = scope:ruyi
					}
				}
				set_relation_friend = { 
					reason = consort_friendship_reason
					target = scope:ruyi 
				}
			}
			calyver_favor_minor_gain_effect = yes
			hidden_effect = {
				if = {
					limit = { 
						has_character_modifier = unfavored_consort_modifier
					}
					remove_character_modifier = unfavored_consort_modifier
				}
				add_character_modifier = { 
					modifier = safe_disease_treatment_success_high_modifier 
					days = disease_treatment_short_duration 
				}
			}
		}
		scope:ruyi = {
			hidden_effect = {
				if = {
					limit = { 
						has_character_modifier = unfavored_consort_modifier
					}
					remove_character_modifier = unfavored_consort_modifier
				}
			}
			add_opinion = {
				target = root
				modifier = thankful_consort_opinion
			}
			if = {
				limit = { 
					NOR = { 
						has_relation_lover = root
						has_relation_soulmate = root
						has_relation_potential_lover = root
					} 
				}
				set_relation_potential_lover = root
			}
			calyver_favor_moderate_gain_effect = yes
		}
		scope:hui = {
			if = {
				limit = {
					can_set_relation_rival_trigger = { CHARACTER = scope:ruyi }
				}
				set_relation_rival = { 
					reason = consort_rival_reason
					target = scope:ruyi
				}
			}
			if = {
				limit = {
					can_set_relation_rival_trigger = { CHARACTER = scope:hailan }
				}
				set_relation_rival = { 
					reason = consort_rival_reason
					target = scope:hailan
				}
			}
			
			add_opinion = {
				target = scope:ruyi
				modifier = meddling_consort_opinion
			}
			add_opinion = {
				target = scope:hailan
				modifier = hatred_spouse_opinion
			}
			add_opinion = {
				target = root
				modifier = ignored_consort_opinion
				opinion = -10
			}
			calyver_favor_medium_loss_effect = yes
			hidden_effect = {
				if = {
					limit = { 
						has_character_modifier = favored_consort_modifier
					}
					remove_character_modifier = favored_consort_modifier
				}
				add_character_modifier = { 
					modifier = safe_disease_treatment_success_high_modifier 
					days = disease_treatment_short_duration 
				}
			}
			add_character_modifier = {
				modifier = unfavored_consort_modifier
				years = 3
			}
		}
		hidden_effect = {
			add_opinion = {
				target = scope:hui
				modifier = cruelty_opinion
				opinion = -20
			}
		}
		stress_impact = {
			temperate = minor_stress_impact_loss
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = 0.2
			}
			modifier = {
				add = 20
				OR = {
					has_trait = intellect_good
					has_trait = diligent
					has_trait = just
					has_trait = temperate
				}
			}
			modifier = { #AI's opinion on Hui
				add = 5
				opinion = {
					target = scope:hui
					value >= low_positive_opinion
				}
			}
			modifier = { #AI's opinion on Hui
				add = 20
				opinion = {
					target = scope:hui
					value >= medium_positive_opinion
				}
			}
			modifier = { #AI's opinion on Ruyi
				add = 5
				opinion = {
					target = scope:ruyi
					value >= low_positive_opinion
				}
			}
			modifier = { #AI's opinion on Ruyi
				add = 15
				opinion = {
					target = scope:ruyi
					value >= medium_positive_opinion
				}
			}
			modifier = { #AI's opinion on Hailan
				add = 5
				opinion = {
					target = scope:hailan
					value >= low_positive_opinion
				}
			}
			modifier = { #AI's opinion on Hailan
				add = 15
				opinion = {
					target = scope:hailan
					value >= medium_positive_opinion
				}
			}
			modifier = { #More likely if Hui is a powerful vassal's relative
				add = 20
				scope:hui = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_parent_of = root
							is_liege_or_above_of = root
						}
					}
				}
			}
			modifier = { #More likely if Ruyi is a powerful vassal's relative
				add = 20
				scope:ruyi = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_parent_of = root
							is_liege_or_above_of = root
						}
					}
				}
			}
			modifier = { #More likely if Hailan is a powerful vassal's relative
				add = 20
				scope:hailan = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_parent_of = root
							is_liege_or_above_of = root
						}
					}
				}
			}
		}
	}
	option = { # Side with Hui
		name = harem_politics.0003.b
		stress_impact = {
			just = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			sadistic = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			arbitrary = minor_stress_impact_loss
		}
		save_scope_as = secondary_actor
		scope:hailan = {
			save_scope_as = secondary_recipient
			death = {
				death_reason = death_punishment
				killer = root
			}
			close_relations_opinion_effect = { VICTIM = scope:hailan EXECUTIONER = root }
		}
		scope:hui = {
			hidden_effect  = {
				if = {
					limit = { 
						has_character_modifier = unfavored_consort_modifier
					}
					remove_character_modifier = unfavored_consort_modifier
				}
				add_character_modifier = { 
					modifier = safe_disease_treatment_success_high_modifier 
					days = disease_treatment_short_duration 
				}
			}
			add_opinion = {
				target = root
				modifier = thankful_consort_opinion
			}
			calyver_favor_big_gain_effect = yes
			if = {
				limit = { 
					NOR = { 
						has_relation_lover = root
						has_relation_soulmate = root
						has_relation_potential_lover = root
					} 
				}
				set_relation_potential_lover = root
			}
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 3
			}
		}
		scope:ruyi = {
			add_opinion = {
				target = root
				modifier = cruelty_opinion
				opinion = -30
			}
			add_opinion = {
				target = scope:hui
				modifier = cruelty_opinion
				opinion = -30
			}
			if = {
				limit = { 
					NOR = {
						has_relation_rival = scope:hui
						has_relation_nemesis = scope:hui
					}
				}
				set_relation_rival = {
					target = scope:hui
					reason = killed_friend_harem_reason
				}
			}
			if = {
				limit = { 
					NOR = {
						has_relation_rival = root
						has_relation_nemesis = root
					}
				}
				set_relation_rival = {
					target = root
					reason = killed_friend_harem_reason
				}
			}
			hidden_effect = {
				if = {
					limit = { 
						has_character_modifier = favored_consort_modifier
					}
					remove_character_modifier = favored_consort_modifier
				}
			}
			add_character_modifier = {
				modifier = unfavored_consort_modifier
				years = 3
			}
			calyver_favor_big_loss_effect = yes
			if = {
				limit = {
					NOR = {
						has_trait = forgiving 
						has_trait = vengeful 
					}
				}
				random = {
					chance = 10
					modifier = {
						add = 20
						NOR = {
							has_trait = compassionate
							has_trait = temperate
						}
					}
					modifier = {
						add = 40
						opinion = {
							target = scope:hailan
							value >= low_positive_opinion
						}
					}
					modifier = {
						add = 60
						opinion = {
							target = scope:hailan
							value >= medium_positive_opinion
						}
					}
					add_trait = vengeful
				}
			}
		}
		send_interface_toast = {
			type = event_generic_bad
			title = punished_consort_t
			right_icon = scope:secondary_recipient
			left_icon = scope:secondary_actor
			custom_tooltip = punished_consort_severe_desc
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = -0.2
			}
			modifier = {
				add = 30
				OR = {
					has_trait = callous
					has_trait = sadistic
					has_trait = arbitrary
				}
			}
			modifier = {
				add = -30
				OR = {
					has_trait = just
					has_trait = forgiving
					has_trait = compassionate
					has_trait = temperate
					has_trait = generous
				}
			}
			modifier = { #AI's opinion on Hui
				add = 15
				opinion = {
					target = scope:hui
					value >= medium_positive_opinion
				}
			}
			modifier = { #AI's opinion on Ruyi
				add = 5
				opinion = {
					target = scope:ruyi
					value <= low_negative_opinion
				}
			}
			modifier = { #AI's opinion on Ruyi
				add = 15
				opinion = {
					target = scope:ruyi
					value <= medium_negative_opinion
				}
			}
			modifier = { #AI's opinion on Hailan
				add = 15
				opinion = {
					target = scope:hailan
					value <= medium_negative_opinion
				}
			}
			modifier = { #More likely if Hui is a powerful vassal's relative
				add = 15
				scope:hui = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_parent_of = root
							is_liege_or_above_of = root
						}
					}
				}
			}
			modifier = { #More likely if Hailan is not powerful vassal's relative
				add = 10
				scope:hailan = {
					OR = {
						is_lowborn = yes
						any_close_family_member = {
							NOR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								is_parent_of = root
								is_liege_or_above_of = root
							}
						}
					}
				}
			}
			modifier = { #More likely if Ruyi not a powerful vassal's relative
				add = 10
				scope:ruyi = {
					OR = {
						is_lowborn = yes
						any_close_family_member = {
							NOR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								is_parent_of = root
								is_liege_or_above_of = root
							}
						}
					}
				}
			}
		}
	}
	option = { # Arrest Hui
		name = harem_politics.0003.c
		scope:hailan = {
			hidden_effect  = { 
				if = {
					limit = { 
						has_character_modifier = unfavored_consort_modifier
					}
					remove_character_modifier = unfavored_consort_modifier
				}
				add_character_modifier = { 
					modifier = safe_disease_treatment_success_high_modifier 
					days = disease_treatment_short_duration 
				}
			}
			add_opinion = {
				target = root
				modifier = thankful_consort_opinion
			}
			if = {
				limit = { 
					NOR = { 
						has_relation_lover = root
						has_relation_soulmate = root
						has_relation_potential_lover = root
					} 
				}
				set_relation_potential_lover = root
			}
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 3
			}
			add_opinion = {
				target = scope:ruyi
				modifier = grateful_opinion
				opinion = 20
			}
			if = {
				limit = { 
					NOR = {
						has_relation_friend = scope:ruyi
						has_relation_best_friend = scope:ruyi
					}
				}
				set_relation_friend = { 
					reason = consort_friendship_reason
					target = scope:ruyi 
				}
			}
			calyver_favor_medium_gain_effect = yes
		}
		scope:ruyi = {
			hidden_effect  = {
				if = {
					limit = { 
						has_character_modifier = unfavored_consort_modifier
					}
					remove_character_modifier = unfavored_consort_modifier
				}
			}
			add_opinion = {
				target = root
				modifier = thankful_consort_opinion
			}
			calyver_favor_big_gain_effect = yes
		}
		scope:hui = {
			calyver_favor_medium_loss_effect = yes
			if = {
				limit = {
					can_set_relation_rival_trigger = { CHARACTER = scope:ruyi }
				}
				set_relation_rival = { 
					reason = consort_rival_reason
					target = scope:ruyi
				}
			}
			if = {
				limit = {
					can_set_relation_rival_trigger = { CHARACTER = scope:hailan }
				}
				set_relation_rival = { 
					reason = consort_rival_reason
					target = scope:hailan
				}
			}
			add_opinion = {
				target = scope:ruyi
				modifier = hatred_spouse_opinion
			}
			add_opinion = {
				target = scope:hailan
				modifier = hatred_spouse_opinion
			}
			add_opinion = {
				target = root
				modifier = cruelty_opinion
				opinion = -20
			}
			hidden_effect = {
				if = {
					limit = { 
						has_character_modifier = favored_consort_modifier
					}
					remove_character_modifier = favored_consort_modifier
				}
			}
			if = { #If they're a GC, demote them
				limit = {
					has_court_position = grand_consort_court_position
				}
				save_scope_as = employee
				root = {
					save_scope_as = liege
				}
				grand_consort_revoked_court_position_effect = yes
			}
			else_if = {
				limit = {
					NOT = { has_court_position = grand_consort_court_position }
				}
				add_character_modifier = {
					modifier = unfavored_consort_modifier
					years = 3
				}
			}
			save_scope_as = recipient
		}
		hidden_effect = {
	        rightfully_imprison_character_effect = {
				TARGET = scope:hui
				IMPRISONER = root
			}
			add_opinion = {
				target = scope:hui
				modifier = cruelty_opinion
				opinion = -20
			}
		}
		show_as_tooltip = {
			imprison = { target = scope:hui type = house_arrest }
		}
		stress_impact = {
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = -0.2
			}
			modifier = {
				add = 20
				OR = {
					has_trait = just
					has_trait = diligent
					has_trait = vengeful
				}
			}
			modifier = {
				add = -20
				OR = {
					has_trait = forgiving
					has_trait = compassionate
				}
			}
			modifier = { #AI's opinion on Hui
				add = 20
				opinion = {
					target = scope:hui
					value <= medium_negative_opinion
				}
			}
			modifier = { #AI's opinion on Ruyi
				add = 5
				opinion = {
					target = scope:ruyi
					value >= low_positive_opinion
				}
			}
			modifier = { #AI's opinion on Ruyi
				add = 15
				opinion = {
					target = scope:ruyi
					value >= medium_positive_opinion
				}
			}
			modifier = { #AI's opinion on Hailan
				add = 15
				opinion = {
					target = scope:hailan
					value >= medium_positive_opinion
				}
			}
			modifier = { #More likely if Hui is not a powerful vassal's relative
				add = 15
				scope:hui = {
					OR = {
						is_lowborn = yes
						any_close_family_member = {
							NOR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								is_parent_of = root
								is_liege_or_above_of = root
							}
						}
					}
				}
			}
			modifier = { #More likely if Hailan is a powerful vassal's relative
				add = 15
				scope:hailan = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_parent_of = root
							is_liege_or_above_of = root
						}
					}
				}
			}
			modifier = { #More likely if Ruyi is a powerful vassal's relative
				add = 15
				scope:ruyi = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_parent_of = root
							is_liege_or_above_of = root
						}
					}
				}
			}
		}
		trigger_event = char_interaction.0231
	}
}

###################################
##Considering promoting a consort##
###################################
scripted_trigger harem_politics_valid_promotion_consort_trigger = {
	is_physically_able_ai_adult = yes
	is_courtier_of = root
	is_demoted_consort_trigger = no
	NOR = { 
		has_character_flag = flag_considered_consort
		this = root.primary_spouse
		has_opinion_modifier = {
			target = root
			modifier = forced_me_concubine_marriage_opinion
		}
		has_relation_rival = root
		has_relation_nemesis = root
		has_court_position = grand_consort_court_position
	}
	OR = {
		any_child = {
			is_child_of = root
			even_if_dead = yes
			count >= 3
		}
		any_child = {
			AND = {
				this = root.player_heir
				root.player_heir = {
					age > 8
				}
			}
		}
		any_child = {
			even_if_dead = yes
			has_trait = twin
			is_child_of = root
			count >= 1
		}
		AND = {
			root.faith = { has_doctrine = tenet_reincarnation }
			any_child = {
				has_trait = reincarnation
				is_child_of = root
				even_if_dead = yes
				count >= 1
			}
		}
		any_child = {
			any_spouse = {
				OR = {
					is_councillor_of = root
					is_powerful_vassal_of = root
					highest_held_title_tier >= tier_kingdom
					is_liege_or_above_of = root
				}
			}
			is_child_of = root
			count >= 1
		}
		any_close_family_member = {
			is_liege_or_above_of = root
		}
		AND = {
			OR = {
				any_close_family_member = {
					OR = {
						is_powerful_vassal_of = root
						is_councillor_of = root
						highest_held_title_tier >= tier_kingdom
					}
				}
				has_relation_soulmate = root
				has_relation_lover = root
				has_relation_best_friend = root
				has_relation_friend = root
				has_character_modifier = favored_consort_modifier
				AND = {
					root.faith = { has_doctrine = tenet_reincarnation }
					has_trait = reincarnation
				}
			}
			any_child = {
				even_if_dead = yes
				is_child_of = root
				count >= 1
			}
		}
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

harem_politics.0004 = {
	type = character_event
	title = harem_politics.0004.t
	desc = {
		desc = harem_politics.0004.start.desc
		first_valid = {
			triggered_desc = { #Is soulmate
				trigger = {
					scope:loved_consort = {
						has_relation_soulmate = root
					}
				}
				desc = harem_politics.0004.soulmate.desc
			}
			triggered_desc = { #Is lover
				trigger = {
					scope:loved_consort = {
						has_relation_lover = root
					}
				}
				desc = harem_politics.0004.lover.desc
			}
			triggered_desc = { #Is BFF
				trigger = {
					scope:loved_consort = {
						has_relation_best_friend = root
					}
				}
				desc = harem_politics.0004.bff.desc
			}
			triggered_desc = { #Is friend
				trigger = {
					scope:loved_consort = {
						has_relation_friend = root
					}
				}
				desc = harem_politics.0004.friend.desc
			}
			triggered_desc = {
				desc = harem_politics.0004.generic_1.desc
			}
		}
		#Promotion reasons
		first_valid = {
		
			#Player heir
			triggered_desc = { #Is mother of heir
				trigger = {
					scope:loved_consort = {
						is_female = yes
						any_child = {
							this = root.player_heir
						}
					}
				}
				desc = harem_politics.0004.heirmother.desc
			}
			triggered_desc = { #Is father of heir
				trigger = {
					scope:loved_consort = {
						is_male = yes
						any_child = {
							this = root.player_heir
						}
					}
				}
				desc = harem_politics.0004.heirfather.desc
			}
			
			#Liege's relative
			triggered_desc = { 
				trigger = {
					exists = scope:consort_relative
					scope:consort_relative = {
						is_liege_or_above_of = root
					}
				}
				desc = harem_politics.0004.liegerelative.desc
			}
			
			triggered_desc = { #Reincarnated child
				trigger = {
					scope:loved_consort = {
						is_female = yes
						any_child = {
							even_if_dead = yes
							has_trait = reincarnation
						}
					}
				}
				desc = harem_politics.0004.sacredmother.desc
			}
			triggered_desc = { #Reincarnated child
				trigger = {
					scope:loved_consort = {
						is_female = no
						any_child = {
							even_if_dead = yes
							has_trait = reincarnation
						}
					}
				}
				desc = harem_politics.0004.sacredfather.desc
			}
			
			#Influential child
			triggered_desc = { 
				trigger = {
					scope:loved_consort = {
						AND = {
							is_female = yes
							any_child = {
								OR = {
									is_councillor_of = root
									is_powerful_vassal_of = root
									highest_held_title_tier >= tier_kingdom
									is_liege_or_above_of = root
									any_spouse = {
										OR = {
											is_councillor_of = root
											is_powerful_vassal_of = root
											highest_held_title_tier >= tier_kingdom
											is_liege_or_above_of = root
										}
									}
								}
							}
						}
					}
				}
				desc = harem_politics.0004.motherpowerfulchild.desc
			}
			triggered_desc = { #Is father of an influential child
				trigger = {
					scope:loved_consort = {
						AND = {
							is_male = yes
							any_child = {
								OR = {
									is_councillor_of = root
									is_powerful_vassal_of = root
									highest_held_title_tier >= tier_kingdom
									is_liege_or_above_of = root
									any_spouse = {
										OR = {
											is_councillor_of = root
											is_powerful_vassal_of = root
											highest_held_title_tier >= tier_kingdom
											is_liege_or_above_of = root
										}
									}
								}
							}
						}
					}
				}
				desc = harem_politics.0004.fatherpowerfulchild.desc
			}
			
			#Councillor
			triggered_desc = {
				trigger = {
					exists = scope:consort_relative
					scope:consort_relative = {
						is_councillor_of = root
					}
				}
				desc = harem_politics.0004.councillor.desc
			}
			
			#Powerful vassal
			triggered_desc = {
				trigger = {
					exists = scope:consort_relative
					scope:consort_relative = {
						is_powerful_vassal_of = root
					}
				}
				desc = harem_politics.0004.powerfulrelative.desc
			}
			
			#Reincarnation
			triggered_desc = { #Reincarnated mother
				trigger = {
					scope:loved_consort = {
						is_female = yes
						has_trait = reincarnation
					}
				}
				desc = harem_politics.0004.sacredwife.desc
			}
			triggered_desc = { #Reincarnated father
				trigger = {
					scope:loved_consort = {
						is_female = no
						has_trait = reincarnation
					}
				}
				desc = harem_politics.0004.sacredhusband.desc
			}

			#Lineage
			triggered_desc = { #Relative of a King or Queen
				trigger = {
					exists = scope:consort_relative
					scope:consort_relative = {
						highest_held_title_tier >= tier_kingdom
					}
				}
				desc = harem_politics.0004.kingqueen.desc
			}
			
			#Fertile
			triggered_desc = {
				trigger = {
					scope:loved_consort = {
						is_female = yes
						OR = {
							any_child = {
								is_child_of = root
								count >= 3
							}
							any_child = {
								even_if_dead = yes
								is_child_of = root
								has_trait = twin
							}
						}
					}
				}
				desc = harem_politics.0004.fertilemother.desc
			}
			triggered_desc = {
				trigger = {
					scope:loved_consort = {
						is_female = no
						OR = {
							any_child = {
								is_child_of = root
								count >= 3
							}
							any_child = {
								even_if_dead = yes
								is_child_of = root
								has_trait = twin
							}
						}
					}
				}
				desc = harem_politics.0004.fertilefather.desc
			}
			triggered_desc = {
				desc = harem_politics.0004.generic_2.desc
			}
		}
		#Current position
		first_valid = {
			#Concubine
			triggered_desc = {
				trigger = {
					scope:loved_consort = {
						is_concubine = yes
					}
				}
				desc = harem_politics.0004.conc.desc
			}
			#S. husband
			triggered_desc = {
				trigger = {
					scope:loved_consort = {
						is_spouse_of = root
						is_male = yes
					}
				}
				desc = harem_politics.0004.sh.desc
			}
			#S. wife
			triggered_desc = {
				trigger = {
					scope:loved_consort = {
						is_spouse_of = root
						is_female = yes
					}
				}
				desc = harem_politics.0004.sw.desc
			}
		}
		desc = harem_politics.0004.end.desc
	}
	theme = family
	
	lower_center_portrait = { 	
		character = scope:loved_consort
	}
	right_portrait = { 	
		character = root
		animation = personality_rational
	}
	trigger = {
		OR = {		
			AND = { #Promote a consort to Grand Consort
				gold >= minor_gold_value
				highest_held_title_tier >= tier_kingdom
				NOT = { employs_court_position = grand_consort_court_position }
				OR = {	
					AND = {
						accepts_polygamy = no
						any_concubine = {
							harem_politics_valid_promotion_consort_trigger = yes
						}
					}
					AND = {
						accepts_polygamy = yes
						any_spouse = {
							harem_politics_valid_promotion_consort_trigger = yes
						}
					}
				}
			}
			AND = { #Promote a concubine to spouse
				allowed_more_spouses = yes
				any_concubine = {
					harem_politics_valid_promotion_consort_trigger = yes
				}
			}
		}
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
		NOR = { 
			has_character_flag = flag_had_promote_consort_event 
			has_character_modifier = mourner_modifier
		}
	}
	
	immediate = {
		save_scope_as = harem_liege
		if = {
			limit = {
				AND = {
					highest_held_title_tier >= tier_kingdom
					NOT = { employs_court_position = grand_consort_court_position }
					accepts_polygamy = yes
					any_spouse = {
						harem_politics_valid_promotion_consort_trigger = yes
					}
				}
			}
			every_spouse = {
				limit = {
					harem_politics_valid_promotion_consort_trigger = yes
				}
				add_to_list = potential_consorts_list
			}
		}
		
		if = {
			limit = {
				OR = {
					AND = {
						allowed_more_spouses = yes
						any_concubine = {
							harem_politics_valid_promotion_consort_trigger = yes
						}
					}
					AND = {
						highest_held_title_tier >= tier_kingdom
						NOT = { employs_court_position = grand_consort_court_position }
						accepts_polygamy = no
						accepts_concubinage = yes
						any_concubine = {
							harem_politics_valid_promotion_consort_trigger = yes
						}
					}
				}
			}
			every_concubine = {
				limit = {
					harem_politics_valid_promotion_consort_trigger = yes
				}
				add_to_list = potential_consorts_list
			}
		}
		
		random_in_list = {
			list = potential_consorts_list
			limit = {
				is_consort_of = root
			}
			weight = {
				base = 10
				modifier = { #Lowborn
					is_lowborn = no
					add = 15
				}
				modifier = { #Soulmate
					has_relation_soulmate = root
					add = 60
				}
				modifier = { #Lover or friend
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
					add = 15
				}
				modifier = { #BFF
					has_relation_best_friend = root
					add = 20
				}
				modifier = { #Valuable heir
					OR = {
						AND = {
							root = {
								OR = {
									has_realm_law = female_only_law
									has_realm_law = female_preference_law
								}
							}
							any_child = {
								is_male = no
							}
						}
						AND = {
							root = {
								OR = {
									has_realm_law = male_only_law
									has_realm_law = male_preference_law
								}
							}
							any_child = {
								is_male = yes
							}
						}
					}
					add = 20
				}
				modifier = { #Many kids!
					any_child = {
						is_child_of = root
						count >= 3
					}
					add = 50
				}
				modifier = { #Special kids
					any_child = {
						even_if_dead = yes
						is_child_of = root
						OR = {
							has_trait = twin
							has_trait = reincarnation
						}
					}
					add = 50
				}
				modifier = { #Player heir's parent
					any_child = {
						AND = {
							this = root.player_heir
							root.player_heir = {
								age > 8
							}
						}
					}
					add = 50
				}
				modifier = { #Rencarnation
					has_trait = reincarnation
					add = 50
				}
				modifier = { #Powerful children
					any_child = {
						any_spouse = {
							OR = {
								is_councillor_of = root
								is_powerful_vassal_of = root
								highest_held_title_tier >= tier_kingdom
								is_liege_or_above_of = root
							}
						}
					}
					add = 30
				}
				modifier = { #Powerful relatives with at least one child
					AND = {
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								highest_held_title_tier >= tier_kingdom
								is_liege_or_above_of = root
							}
						}
						any_child = {
							even_if_dead = yes
							count >= 1
						}
					}
					add = 30
				}
				modifier = { #Favored consort
					has_character_modifier = favored_consort_modifier
					add = 20
				}
			}
			save_scope_as = loved_consort
		}
		scope:loved_consort = {
			if = {
				limit = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
							this = root.player_heir
							is_child_of = root
							is_liege_or_above_of = root
						}
					}
				}
				every_close_family_member = {
					limit = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
							this = root.player_heir
							is_child_of = root
							is_liege_or_above_of = root
						}
					}
					add_to_list = consort_relatives_list
				}
			}
		}
		if = {
			limit = {
				any_in_list = {
					list = consort_relatives_list
					count >= 1
				}
			}
			random_in_list = {
				list = consort_relatives_list
				weight = {
					base = 1
					modifier = { #Player heir
						OR = {
							this = root.player_heir
							is_liege_or_above_of = root
						}
						add = 150
					}
					modifier = {
						any_spouse = {
							OR = {
								is_councillor_of = root
								is_powerful_vassal_of = root
								highest_held_title_tier >= tier_kingdom
								is_liege_or_above_of = root
							}
						}
						add = 120
					}
					modifier = { #Powerful vassals
						is_powerful_vassal_of = root
						add = 100
					}
					modifier = { #Councillors
						is_councillor_of = root
						add = 50
					}
					modifier = { #Kings and Queens
						highest_held_title_tier >= tier_kingdom
						add = 25
					}
					modifier = { #Kids
						is_child_of = root
						add = 5
					}
				}
				save_scope_as = consort_relative
			}
		}
	}
	
	option = { # Promote them to spouse
		name = harem_politics.0004.a
		trigger = {
			allowed_more_spouses = yes
			scope:loved_consort = {
				is_concubine = yes
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						has_trait = just
						OR = {
							has_imprisonment_reason = scope:loved_consort
							scope:loved_consort = {
								any_secret = {
									exists = secret_owner
									is_known_by = root
									is_criminal_for = secret_owner
								}
							}
						}
					}
					AND = {
						has_trait = zealous
						scope:loved_consort = {
							AND = {
								num_sinful_traits >= 1
								num_virtuous_traits = 0
							}
						}
					}
				}
			}
			stress_impact = {
				just = minor_stress_impact_gain
				zealous = minor_stress_impact_gain
			}
		}
		if = {
			limit = {
				is_female = yes
			}
			marry_matrilineal = scope:loved_consort
		}
		else = {
			marry = scope:loved_consort
		}
		scope:loved_consort = {
			calyver_favor_medium_gain_effect = yes
			save_scope_as = secondary_recipient
			add_character_flag = {
				flag = flag_considered_consort
				days = 1825
			}
			if = {
				limit = {
					NOT = {
						has_character_modifier = favored_consort_modifier
					}
				}
				add_character_modifier = {
					modifier = favored_consort_modifier
					years = 1
				}
			}
		}
		save_scope_as = actor
		save_scope_as = secondary_actor
		save_scope_as = recipient
		calyver_marriage_interaction_on_accept_effect = yes
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = 0.1
			}
			modifier = { #More likely if zealous
				add = 15
				AND = {
					scope:loved_consort = {
						num_virtuous_traits >= 1
						num_sinful_traits = 0
					}
					has_trait = zealous
				}
			}
			modifier = { #More likely if just
				add = 15
				AND = {
					has_trait = just
					NOT = { has_imprisonment_reason = scope:loved_consort }
				}
			}
			modifier = { #More likely if high opinion of the concubine
				add = 10
				opinion = {
					target = scope:loved_consort
					value >= high_positive_opinion
				}
			}
			modifier = { #More likely if the concubine is the player heir's parent
				add = 30
				scope:loved_consort = {
					OR = {
						any_child = {
							OR = {
								this = root.player_heir
								any_spouse = {
									OR = {
										is_powerful_vassal_of = root
										is_councillor_of = root
										highest_held_title_tier >= tier_kingdom
										is_liege_or_above_of = root
									}
								}
							}
						}
						any_close_family_member = {
							is_liege_or_above_of = root
						}
					}
				}
			}
			modifier = { #Soulmate
				has_relation_soulmate = scope:loved_consort
				add = 20
			}
			modifier = { #Lover
				has_relation_lover = scope:loved_consort
				add = 10
			}
			modifier = { #BFF
				has_relation_best_friend = scope:loved_consort
				add = 15
			}
			modifier = { #Friend
				has_relation_friend = scope:loved_consort
				add = 10
			}
			modifier = { #Many kids!
				scope:loved_consort = {
					any_child = {
						even_if_dead = yes
						count >= 3
					}
				}
				add = 20
			}
			modifier = { #Special kids!
				scope:loved_consort = {
					any_child = {
						OR = {
							has_trait = twin
							has_trait = reincarnation
						}
					}
				}
				add = 20
			}
			modifier = { #Reincarnation
				scope:loved_consort = {
					has_trait = reincarnation
				}
				add = 20
			}
			modifier = { #Powerful relatives with at least one child
				scope:loved_consort = {
					AND = {
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								highest_held_title_tier >= tier_kingdom
							}
						}
						any_child = {
							even_if_dead = yes
							count >= 1
						}
					}
				}
				add = 20
			}
			modifier = { #Favored consort
				scope:loved_consort = {
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
			modifier = { #Lowborns
				scope:loved_consort = {
					is_lowborn = yes
				}
				add = -10
			}
			modifier = { #Less likely if the candidate is lowborn and low legitimacy
				add = -35
				OR = {
					AND = {
						highest_held_title_tier = tier_empire
						legitimacy_level <= 3
					}
					AND = {
						highest_held_title_tier = tier_kingdom
						legitimacy_level <= 2
					}
					AND = {
						highest_held_title_tier = tier_duchy
						legitimacy_level <= 1
					}
				}
				scope:loved_consort = {
					is_lowborn = yes
				}
			}
			modifier = { #Culture
				culture = scope:loved_consort.culture
				add = 10
			}
			modifier = { #Valuable heir
				OR = {
					AND = {
						OR = {
							has_realm_law = female_only_law
							has_realm_law = female_preference_law
						}
						scope:loved_consort = {
							any_child = {
								AND = {
									is_male = no
									is_child_of = root
								}
							}
						}
					}
					AND = {
						OR = {
							has_realm_law = male_only_law
							has_realm_law = male_preference_law
						}
						scope:loved_consort = {
							any_child = {
								AND = {
									is_male = yes
									is_child_of = root
								}
							}
						}
					}
				}
				add = 20
			}
		}
	}
	
	option = { # Promote them to Grand Consort
		name = harem_politics.0004.b
		trigger = {
			gold >= minor_gold_value
			highest_held_title_tier >= tier_kingdom
			OR = {	
				AND = { #If polygamy is not accepted, consort must be a conc
					accepts_polygamy = no
					scope:loved_consort = {
						is_concubine = yes
					}
				}
				AND = { #If accepted polygamy, consort must be a secondary spouse
					accepts_polygamy = yes
					scope:loved_consort = {
						is_spouse_of = root
					}
				}
			}
			NOT = { employs_court_position = grand_consort_court_position }
		}
		appoint_court_position = {
			recipient = scope:loved_consort
			court_position = grand_consort_court_position
		}
		scope:loved_consort = {
			calyver_favor_medium_gain_effect = yes
			add_character_flag = {
				flag = flag_considered_consort
				days = 1825
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						has_trait = just
						OR = {
							has_imprisonment_reason = scope:loved_consort
							scope:loved_consort = {
								any_secret = {
									exists = secret_owner
									is_known_by = root
									is_criminal_for = secret_owner
								}
							}
						}
					}
					AND = {
						has_trait = zealous
						scope:loved_consort = {
							AND = {
								num_sinful_traits >= 1
								num_virtuous_traits = 0
							}
						}
					}
				}
			}
			stress_impact = {
				just = minor_stress_impact_gain
				zealous = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 0
			ai_value_modifier = {
				ai_honor = 0.1
			}
			modifier = { #More likely if zealous
				add = 15
				AND = {
					scope:loved_consort = {
						num_virtuous_traits >= 1
						num_sinful_traits = 0
					}
					has_trait = zealous
				}
			}
			modifier = { #More likely if just
				add = 15
				AND = {
					has_trait = just
					NOT = { has_imprisonment_reason = scope:loved_consort }
				}
			}
			modifier = { #More likely if high opinion of the concubine
				add = 10
				opinion = {
					target = scope:loved_consort
					value >= high_positive_opinion
				}
			}
			modifier = { #More likely if the concubine is the player heir's parent
				add = 30
				scope:loved_consort = {
					OR = {
						any_child = {
							OR = {
								this = root.player_heir
								any_spouse = {
									OR = {
										is_powerful_vassal_of = root
										is_councillor_of = root
										highest_held_title_tier >= tier_kingdom
										is_liege_or_above_of = root
									}
								}
							}
						}
						any_close_family_member = {
							is_liege_or_above_of = root
						}
					}
				}
			}
			modifier = { #Soulmate
				has_relation_soulmate = scope:loved_consort
				add = 20
			}
			modifier = { #Lover
				has_relation_lover = scope:loved_consort
				add = 10
			}
			modifier = { #BFF
				has_relation_best_friend = scope:loved_consort
				add = 15
			}
			modifier = { #Friend
				has_relation_friend = scope:loved_consort
				add = 10
			}
			modifier = { #Many kids!
				scope:loved_consort = {
					any_child = {
						even_if_dead = yes
						count >= 3
					}
				}
				add = 20
			}
			modifier = { #Special kids!
				scope:loved_consort = {
					any_child = {
						OR = {
							has_trait = twin
							has_trait = reincarnation
						}
					}
				}
				add = 20
			}
			modifier = { #Reincarnation
				scope:loved_consort = {
					has_trait = reincarnation
				}
				add = 20
			}
			modifier = { #Powerful relatives with at least one child
				scope:loved_consort = {
					AND = {
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								highest_held_title_tier >= tier_kingdom
							}
						}
						any_child = {
							even_if_dead = yes
							count >= 1
						}
					}
				}
				add = 20
			}
			modifier = { #Favored consort
				has_character_modifier = favored_consort_modifier
				add = 5
			}
			modifier = { #Culture
				culture = scope:loved_consort.culture
				add = 10
			}
			modifier = { #Aptitude
				scope:loved_consort.aptitude:grand_consort_court_position >= 3
				add = 10
			}
			modifier = { #Aptitude
				scope:loved_consort.aptitude:grand_consort_court_position >= 4
				add = 10
			}
			modifier = { #Aptitude
				scope:loved_consort.aptitude:grand_consort_court_position <= 2
				add = -20
			}
			modifier = { #Valuable heir
				OR = {
					AND = {
						OR = {
							has_realm_law = female_only_law
							has_realm_law = female_preference_law
						}
						scope:loved_consort = {
							any_child = {
								AND = {
									is_male = no
									is_child_of = root
								}
							}
						}
					}
					AND = {
						OR = {
							has_realm_law = male_only_law
							has_realm_law = male_preference_law
						}
						scope:loved_consort = {
							any_child = {
								AND = {
									is_male = yes
									is_child_of = root
								}
							}
						}
					}
				}
				add = 20
			}
		}
	}
	
	option = { # Another time
		name = harem_politics.0004.c
		stress_impact = {
			generous = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		if = {
			limit = {
				OR = {
					AND = {
						has_trait = just
						NOR = {
							has_imprisonment_reason = scope:loved_consort
							scope:loved_consort = {
								any_secret = {
									exists = secret_owner
									is_known_by = root
									is_criminal_for = secret_owner
								}
							}
						}
					}
					AND = {
						has_trait = zealous
						scope:loved_consort = {
							AND = {
								num_sinful_traits = 0
								num_virtuous_traits >= 1
							}
						}
					}
				}
			}
			stress_impact = {
				just = minor_stress_impact_gain
				zealous = minor_stress_impact_gain
			}
		}
		if = {
			limit = {
				scope:loved_consort = {
					OR = {
						has_trait = ambitious
						has_trait = arrogant
						has_trait = greedy
						has_trait = impatient
					}
				}
			}
			scope:loved_consort = {
				add_opinion = {
					target = root
					modifier = impatiently_waiting_opinion
				}
			}
		}
		scope:loved_consort = {
			add_character_flag = {
				flag = flag_considered_consort
				days = 1825
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = -0.2
			}
			modifier = { #More likely if they have sinful traits
				add = 20
				AND = {
					scope:loved_consort = {
						num_virtuous_traits = 0
						num_sinful_traits >= 1
					}
					has_trait = zealous
				}
			}
			modifier = { #More likely if just
				add = 20
				AND = {
					has_trait = just
					has_imprisonment_reason = scope:loved_consort
				}
			}
			modifier = { #More likely if generous
				add = -30
				OR = {
					has_trait = generous
					has_trait = forgiving
					has_trait = compassionate
				}
			}
			modifier = { #More likely if low opinion of the concubine
				add = 15
				opinion = {
					target = scope:loved_consort
					value <= low_negative_opinion
				}
			}
			modifier = { #More likely if enemy
				add = 100
				OR = {
					has_relation_nemesis = scope:loved_consort
					has_relation_rival = scope:loved_consort
				}
			}
			modifier = { #Lowborn
				scope:loved_consort = {
					is_lowborn = yes
				}
				add = 15
			}
			modifier = { #Faith considerations
				NOT = { faith = scope:loved_consort.faith }				
				add = 20
			}
			modifier = { #Valuable heir
				OR = {
					AND = {
						OR = {
							has_realm_law = female_only_law
							has_realm_law = female_preference_law
						}
						scope:loved_consort = {
							any_child = {
								AND = {
									is_male = no
									is_child_of = root
								}
							}
						}
					}
					AND = {
						OR = {
							has_realm_law = male_only_law
							has_realm_law = male_preference_law
						}
						scope:loved_consort = {
							any_child = {
								AND = {
									is_male = yes
									is_child_of = root
								}
							}
						}
					}
				}
				add = -10
			}
		}
	}
	after = {
		add_character_flag = {
			flag = flag_had_promote_consort_event
			days = 540
		}
	}
}

##################################
##Considering demoting a consort##
##################################
scripted_trigger harem_politics_valid_demotion_consort_trigger = {
	is_physically_able_ai_adult = yes
	NOR = {
		has_character_flag = flag_considered_consort
		has_strong_hook = root
		has_character_flag = flag_pleaded_for
		has_relation_best_friend = root
		has_relation_friend = root
		has_relation_lover = root
		has_relation_soulmate = root
		any_close_family_member = {
			is_liege_or_above_of = root
		}
	}
	is_courtier_of = root
	save_temporary_scope_as = criminal_consort
	OR = {
		has_relation_rival = root
		has_relation_nemesis = root
		any_secret = {
			is_criminal_for = secret_owner
			is_known_by = root
		}
		AND = {
			num_sinful_traits >= 2
			num_virtuous_traits = 0
		}
		AND = {
			has_trait = witch
			trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:criminal_consort }
		}
		AND = {
			has_trait = deviant
			trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:criminal_consort }
		}
		AND = {
			has_trait = sodomite
			trait_is_criminal_in_faith_trigger = { TRAIT = sodomite FAITH = root.faith GENDER_CHARACTER = scope:criminal_consort }
		}
		AND = {
			has_trait = fornicator
			trait_is_criminal_in_faith_trigger = { TRAIT = fornicator FAITH = root.faith GENDER_CHARACTER = scope:criminal_consort }
		}
		AND = {
			has_trait = adulterer
			trait_is_criminal_in_faith_trigger = { TRAIT = adulterer FAITH = root.faith GENDER_CHARACTER = scope:criminal_consort }
		}
		AND = {
			has_trait = incestuous
			trait_is_criminal_in_faith_trigger = { TRAIT = incestuous FAITH = root.faith GENDER_CHARACTER = scope:criminal_consort }
		}
		AND = {
			has_trait = kinslayer_1
			trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_1 FAITH = root.faith GENDER_CHARACTER = scope:sinful_spouse }
		}
		AND = {
			has_trait = kinslayer_2
			trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_2 FAITH = root.faith GENDER_CHARACTER = scope:sinful_spouse }
		}
		AND = {
			has_trait = kinslayer_3
			trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_3 FAITH = root.faith GENDER_CHARACTER = scope:sinful_spouse }
		}
		AND = {
			has_trait = deviant
			trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:criminal_consort }
		}
		AND = {
			has_trait = cannibal
			trait_is_criminal_in_faith_trigger = { TRAIT = cannibal FAITH = root.faith GENDER_CHARACTER = scope:criminal_consort }
		}
	}
}

harem_politics.0005 = {
	type = character_event
	title = harem_politics.0004.t
	desc = {
		desc = harem_politics.0005.start.desc
		first_valid = {
			triggered_desc = { #Main husband
				trigger = {
					any_spouse = {
						count >= 2
					}
					primary_spouse = {
						is_male = yes
						this = scope:sinful_spouse
					}
				}
				desc = harem_politics.0005.main_spouse_m.desc
			}
			triggered_desc = { #Main wife
				trigger = {
					any_spouse = {
						count >= 2
					}
					primary_spouse = {
						is_male = no
						this = scope:sinful_spouse
					}
				}
				desc = harem_politics.0005.main_spouse_f.desc
			}
			triggered_desc = { #Grand Consort
				trigger = {
					scope:sinful_spouse = {
						has_court_position = grand_consort_court_position
					}
				}
				desc = harem_politics.0005.gc.desc
			}
			triggered_desc = {
				desc = harem_politics.0005.generic.desc
			}
		}
		desc = harem_politics.0005.end.desc
	}
	theme = family
	
	lower_center_portrait = { 	
		character = scope:sinful_spouse
	}
	right_portrait = { 	
		character = root
		animation = personality_rational
	}
	trigger = {
		OR = {
			AND = {
				allowed_more_concubines = yes
				any_spouse = {
					harem_politics_valid_demotion_consort_trigger = yes
				}
			}
			AND = {
				any_consort = {
					has_court_position = grand_consort_court_position
					harem_politics_valid_demotion_consort_trigger = yes
				}
			}
		}
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
		NOT = {
			has_character_flag = flag_had_demote_consort_event
		}
	}
	
	immediate = {
		save_scope_as = harem_liege
		every_consort = {
			limit = {
				harem_politics_valid_demotion_consort_trigger = yes
			}
			add_to_list = potential_concubines_list
		}
		
		random_in_list = {
			list = potential_concubines_list
			weight = {
				base = 30
				modifier = { #Rival
					has_relation_rival = root
					add = 20
				}
				modifier = { #Nemesis
					has_relation_nemesis = root
					add = 50
				}
				modifier = { #Secret
					any_secret = {
						exists = secret_owner
						is_known_by = root
						is_criminal_for = secret_owner
					}
					add = 20
				}
				modifier = { #Sinner
					AND = {
						num_sinful_traits >= 2
						num_virtuous_traits = 0
					}
					add = 15
				}
				modifier = { #Unfavored consort
					has_character_modifier = unfavored_consort_modifier
					add = 10
				}
				modifier = { #No kids
					any_child = {
						even_if_dead = yes
						count = 0
					}
					add = 10
				}
				modifier = { #More likely if the consort is not the player heir's parent
					add = 20
					any_child = {
						NOR = {
							this = root.player_heir
							any_spouse = {
								OR = {
									is_powerful_vassal_of = root
									is_councillor_of = root
									highest_held_title_tier >= tier_kingdom
								}
							}
						}
					}
				}
				modifier = { #Weak relatives
					any_close_family_member = {
						NOR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
						}
					}
					add = 30
				}
				modifier = { #No connections
					any_close_family_member = {
						NOT = {
							is_vassal_of = root
						}
					}
					add = 10
				}
				modifier = { #No connections
					is_lowborn = yes
					add = 10
				}
				modifier = { #The PS is more important
					this = root.primary_spouse
					add = -20
				}
				modifier = { #The GC is more important
					has_court_position = grand_consort_court_position
					add = -10
				}
				modifier = { #They were already demoted
					OR = {
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_modifier = demoted_spouse_modifier
					}
					add = -25
				}
				modifier = { #Known criminal
					OR = {
						AND = {
							has_trait = witch
							trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = this }
						}
						AND = {
							has_trait = deviant
							trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = this }
						}
						AND = {
							has_trait = sodomite
							trait_is_criminal_in_faith_trigger = { TRAIT = sodomite FAITH = root.faith GENDER_CHARACTER = this }
						}
						AND = {
							has_trait = fornicator
							trait_is_criminal_in_faith_trigger = { TRAIT = fornicator FAITH = root.faith GENDER_CHARACTER = this }
						}
						AND = {
							has_trait = adulterer
							trait_is_criminal_in_faith_trigger = { TRAIT = adulterer FAITH = root.faith GENDER_CHARACTER = this }
						}
						AND = {
							has_trait = incestuous
							trait_is_criminal_in_faith_trigger = { TRAIT = incestuous FAITH = root.faith GENDER_CHARACTER = this }
						}
						AND = {
							has_trait = kinslayer_1
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_1 FAITH = root.faith GENDER_CHARACTER = this }
						}
						AND = {
							has_trait = kinslayer_2
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_2 FAITH = root.faith GENDER_CHARACTER = this }
						}
						AND = {
							has_trait = kinslayer_3
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_3 FAITH = root.faith GENDER_CHARACTER = this }
						}
						AND = {
							has_trait = deviant
							trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = this }
						}
						AND = {
							has_trait = cannibal
							trait_is_criminal_in_faith_trigger = { TRAIT = cannibal FAITH = root.faith GENDER_CHARACTER = this }
						}
					}
					add = 20
				}
			}
			save_scope_as = sinful_spouse
		}
	}
	
	option = { # Dismiss GC
		name = harem_politics.0005.a
		trigger = {
			scope:sinful_spouse = {
				has_court_position = grand_consort_court_position
				harem_politics_valid_demotion_consort_trigger = yes
			}
		}
		revoke_court_position = {
			recipient = scope:sinful_spouse
			court_position = grand_consort_court_position
		}
		scope:sinful_spouse = {
			calyver_favor_medium_loss_effect = yes
			add_character_flag = {
				flag = flag_considered_consort
				days = 1825
			}
		}
		if = {
			limit = {
				AND = {
					has_trait = zealous
					scope:sinful_spouse = {
						AND = {
							num_sinful_traits >= 2
							num_virtuous_traits = 0
						}
					}
				}
			}
			stress_impact = {
				zealous = minor_stress_impact_loss
			}
		}
		stress_impact = {
			vengeful = minor_stress_impact_loss
			callous = minor_stress_impact_loss
		}
		add_character_flag = {
			flag = flag_had_demote_consort_event
			days = 540
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = 0.1
			}
			modifier = { #More likely if criminal
				add = 30
				has_imprisonment_reason = scope:sinful_spouse
			}
			modifier = { #They were already demoted
				scope:sinful_spouse = {
					OR = {
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_modifier = demoted_spouse_modifier
					}
				}
				add = -10
			}
			modifier = { #Just and criminal
				AND = {
					has_trait = just
					has_imprisonment_reason = scope:sinful_spouse
				}
				add = 15
			}
			modifier = { #Zealous
				AND = {
					has_trait = zealous
					scope:sinful_spouse = {
						AND = {
							num_sinful_traits >= 2
							num_virtuous_traits = 0
						}
					}
				}
				add = 15
			}
			modifier = { #Stress management
				add = -30
				OR = {
					has_trait = forgiving
					has_trait = compassionate
				}
			}
			modifier = { #More likely if low opinion
				add = 15
				opinion = {
					target = scope:sinful_spouse
					value <= low_negative_opinion
				}
			}
			modifier = { #Culture
				NOT = { culture = scope:sinful_spouse.culture }
				add = 10
			}
			modifier = { #Faith
				NOT = { faith = scope:sinful_spouse.faith }
				add = 15
			}
			
			modifier = { #Rival
				has_relation_rival = scope:sinful_spouse
				add = 30
			}
			modifier = { #Nemesis
				has_relation_nemesis = scope:sinful_spouse
				add = 60
			}
			modifier = { #Secret
				scope:sinful_spouse = {
					any_secret = {
						exists = secret_owner
						is_known_by = root
						is_criminal_for = secret_owner
					}
				}
				add = 20
			}
			modifier = { #Unfavored consort
				scope:sinful_spouse = {
					has_character_modifier = unfavored_consort_modifier
				}
				add = 15
			}
			
			modifier = { #No kids
				scope:sinful_spouse = {
					any_child = {
						even_if_dead = yes
						count = 0
					}
				}
				add = 15
			}
			modifier = { #No connections
				any_close_family_member = {
					NOT = {
						is_vassal_of = root
					}
				}
				add = 10
			}
			modifier = { #Lowborn
				scope:sinful_spouse = {
					is_lowborn = yes
				}
				add = 10
			}
			modifier = { #Scolded consort
				scope:sinful_spouse = {
					has_character_flag = flag_scolded_consort
				}
				add = 10
			}
			modifier = { #Less if they come from a prominent family and innocent
				scope:sinful_spouse = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
						}
					}
				}
				add = -30
			}
			modifier = { #Aptitude
				scope:sinful_spouse.aptitude:grand_consort_court_position >= 3
				add = -10
			}
			modifier = { #Aptitude
				scope:sinful_spouse.aptitude:grand_consort_court_position >= 4
				add = -10
			}
			modifier = { #Aptitude
				scope:sinful_spouse.aptitude:grand_consort_court_position <= 2
				add = 20
			}
			modifier = { #Alliances
				any_close_family_member = {
					is_landed = yes
				}
				add = -25
			}
			modifier = { #Valuable heir
				OR = {
					AND = {
						OR = {
							has_realm_law = female_only_law
							has_realm_law = female_preference_law
						}
						scope:sinful_spouse = {
							any_child = {
								AND = {
									is_male = no
									is_child_of = root
								}
							}
						}
					}
					AND = {
						OR = {
							has_realm_law = male_only_law
							has_realm_law = male_preference_law
						}
						scope:sinful_spouse = {
							any_child = {
								AND = {
									is_male = yes
									is_child_of = root
								}
							}
						}
					}
				}
				add = -20
			}
		}
	}
	
	option = { # Demote them
		name = harem_politics.0005.b
		trigger = {
			scope:sinful_spouse = {
				is_spouse_of = root
			}
			allowed_more_concubines = yes
		}
		save_scope_as = actor
		scope:actor = {
			save_scope_as = secondary_actor
		}
		scope:sinful_spouse = {
			calyver_favor_medium_loss_effect = yes
			save_scope_as = recipient
			save_scope_as = secondary_recipient
			add_character_flag = {
				flag = flag_considered_consort
				days = 1825
			}
		}
		spouse_demotion_effect = yes
		stress_impact = {
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			vengeful = minor_stress_impact_loss
			callous = minor_stress_impact_loss
		}
		add_character_flag = {
			flag = flag_had_demote_consort_event
			days = 540
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = -0.1
			}
			modifier = { #Alliance
				scope:sinful_spouse = {
					any_close_family_member = {
						is_allied_to = root
					}
				}
				add = -30
			}
			modifier = { #Just and criminal
				AND = {
					has_trait = just
					has_imprisonment_reason = scope:sinful_spouse
				}
				add = 25
			}
			modifier = { #Zealous
				AND = {
					has_trait = zealous
					scope:sinful_spouse = {
						AND = {
							num_sinful_traits >= 2
							num_virtuous_traits = 0
						}
					}
				}
				add = 25
			}
			modifier = { #Stress management
				add = -30
				OR = {
					has_trait = forgiving
					has_trait = compassionate
				}
			}
			modifier = { #More likely if low opinion
				add = 25
				opinion = {
					target = scope:sinful_spouse
					value <= medium_negative_opinion
				}
			}
			modifier = { #Culture
				NOT = { culture = scope:sinful_spouse.culture }
				add = 10
			}
			modifier = { #Faith
				NOT = { faith = scope:sinful_spouse.faith }
				add = 15
			}
			
			modifier = { #Rival
				has_relation_rival = scope:sinful_spouse
				add = 30
			}
			modifier = { #Nemesis
				has_relation_nemesis = scope:sinful_spouse
				add = 60
			}
			modifier = { #Secret
				AND = {
					scope:sinful_spouse = {
						any_secret = {
							exists = secret_owner
							is_known_by = root
							is_criminal_for = secret_owner
						}
					}
					has_trait = just
				}
				add = 20
			}
			modifier = { #Unfavored consort
				scope:sinful_spouse = {
					has_character_modifier = unfavored_consort_modifier
				}
				add = 15
			}
			
			modifier = { #No kids
				scope:sinful_spouse = {
					any_child = {
						even_if_dead = yes
						count = 0
					}
				}
				add = 15
			}
			modifier = { #No connections
				any_close_family_member = {
					NOT = {
						is_vassal_of = root
					}
				}
				add = 10
			}
			modifier = { #Lowborn
				scope:sinful_spouse = {
					is_lowborn = yes
				}
				add = 10
			}
			modifier = { #Less if they come from a prominent family and innocent
				scope:sinful_spouse = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
						}
					}
				}
				add = -40
			}
			modifier = { #Primary spouse considerations
				scope:sinful_spouse = {
					this = root.primary_spouse
				}
				add = -50
			}
			modifier = { #GC considerations
				scope:sinful_spouse = {
					has_court_position = grand_consort_court_position
				}
				add = -25
			}
			modifier = { #They were already demoted
				scope:sinful_spouse = {
					OR = {
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_modifier = demoted_spouse_modifier
					}
				}
				add = -10
			}
			modifier = { #Scolded consort
				scope:sinful_spouse = {
					has_character_flag = flag_scolded_consort
				}
				add = 10
			}
			modifier = { #Valuable heir
				OR = {
					AND = {
						OR = {
							has_realm_law = female_only_law
							has_realm_law = female_preference_law
						}
						scope:sinful_spouse = {
							any_child = {
								AND = {
									is_male = no
									is_child_of = root
								}
							}
						}
					}
					AND = {
						OR = {
							has_realm_law = male_only_law
							has_realm_law = male_preference_law
						}
						scope:sinful_spouse = {
							any_child = {
								AND = {
									is_male = yes
									is_child_of = root
								}
							}
						}
					}
				}
				add = -20
			}
		}
	}
	
	option = { # Arrest them
		name = harem_politics.0005.c
		show_as_tooltip = {
			imprison = { target = scope:sinful_spouse type = house_arrest }
		}
		scope:sinful_spouse = {
			calyver_favor_big_loss_effect = yes
			if = {
				limit = { 
					NOR = { 
						has_relation_potential_rival = root
						has_relation_rival = root
						has_relation_nemesis = root
					} 
				}
				set_relation_potential_rival = root
			}
			add_opinion = {
				target = root
				modifier = cruelty_opinion
				opinion = -20
			}
			hidden_effect = {
				if = {
					limit = {
						has_character_modifier = favored_consort_modifier
					}
					remove_character_modifier = favored_consort_modifier
				}
			}
			add_character_flag = {
				flag = flag_considered_consort
				days = 1825
			}
			if = { #If they're a GC, demote them
				limit = {
					has_court_position = grand_consort_court_position
				}
				save_scope_as = employee
				root = {
					save_scope_as = liege
				}
				grand_consort_revoked_court_position_effect = yes
			}
			else_if = {
				limit = {
					NOT = { has_court_position = grand_consort_court_position }
				}
				add_character_modifier = {
					modifier = unfavored_consort_modifier
					years = 3
				}
				root = {
					if = {
						limit = {
							OR = {
								AND = {
									has_trait = just
									OR = {
										has_imprisonment_reason = scope:sinful_spouse
										scope:sinful_spouse = {
											any_secret = {
												exists = secret_owner
												is_known_by = root
												is_criminal_for = secret_owner
											}
										}
									}
								}
								AND = {
									has_trait = zealous
									scope:sinful_spouse = {
										AND = {
											num_sinful_traits >= 2
											num_virtuous_traits = 0
										}
									}
								}
							}
						}
						stress_impact = {
							just = minor_stress_impact_loss
							zealous = minor_stress_impact_loss
						}
					}
					stress_impact = {
						forgiving = minor_stress_impact_gain
						compassionate = minor_stress_impact_gain
					}
				}
			}
			save_scope_as = recipient
		}
		hidden_effect = {
	        rightfully_imprison_character_effect = {
				TARGET = scope:sinful_spouse
				IMPRISONER = root
			}
		}
		stress_impact = {
			vengeful = minor_stress_impact_loss
			callous = minor_stress_impact_loss
		}
		add_character_flag = {
			flag = flag_had_demote_consort_event
			days = 540
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = -0.1
			}
			modifier = { #More likely if criminal
				add = 15
				has_imprisonment_reason = scope:sinful_spouse
			}
			modifier = { #GC considerations
				scope:sinful_spouse = {
					has_court_position = grand_consort_court_position
				}
				add = -15
			}
			modifier = { #More likely if vengeful
				add = 20
				OR = {
					has_trait = vengeful
					has_trait = callous
				}
			}
			modifier = { #Known criminal
				AND = {
					has_trait = just
					has_imprisonment_reason = scope:sinful_spouse
				}
				add = 20
			}
			
			modifier = { #Zealous
				AND = {
					has_trait = zealous
					scope:sinful_spouse = {
						AND = {
							num_sinful_traits >= 2
							num_virtuous_traits = 0
						}
					}
				}
				add = 20
			}
			modifier = { #Stress management
				add = -30
				OR = {
					has_trait = forgiving
					has_trait = compassionate
				}
			}
			
			modifier = { #More if they come from a prominent family and are criminals
				scope:sinful_spouse = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
						}
					}
				}
				add = 30
			}
			modifier = { #Less if they come from a prominent family and innocent
				AND = {
					scope:sinful_spouse = {
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								highest_held_title_tier >= tier_kingdom
							}
						}
					}
					NOR = {
						has_imprisonment_reason = scope:sinful_spouse
						has_relation_rival = scope:sinful_spouse
						has_relation_nemesis = scope:sinful_spouse
						scope:sinful_spouse = {
							OR = {
								any_child = {
									even_if_dead = yes
									count >= 4
								}
								AND = {
									num_sinful_traits >= 2
									num_virtuous_traits = 0
								}
								any_child = {
									this = root.player_heir
								}
								any_secret = {
									exists = secret_owner
									is_known_by = root
									is_criminal_for = secret_owner
								}
							}
						}
					}
				}
				add = -30
			}
			modifier = { #More likely if low opinion
				add = 15
				opinion = {
					target = scope:sinful_spouse
					value <= low_negative_opinion
				}
			}
			modifier = { #Culture
				culture = scope:sinful_spouse.culture
				add = 10
			}
			modifier = { #Faith
				faith = scope:sinful_spouse.faith
				add = 15
			}
			modifier = { #Primary spouse considerations
				scope:sinful_spouse = {
					this = root.primary_spouse
				}
				add = -20
			}
			modifier = { #They were already demoted
				scope:sinful_spouse = {
					OR = {
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_modifier = demoted_spouse_modifier
					}
				}
				add = -10
			}
			modifier = { #Scolded consort
				scope:sinful_spouse = {
					has_character_flag = flag_scolded_consort
				}
				add = 10
			}
			modifier = { #Valuable heir
				OR = {
					AND = {
						OR = {
							has_realm_law = female_only_law
							has_realm_law = female_preference_law
						}
						scope:sinful_spouse = {
							any_child = {
								AND = {
									is_male = no
									is_child_of = root
								}
							}
						}
					}
					AND = {
						OR = {
							has_realm_law = male_only_law
							has_realm_law = male_preference_law
						}
						scope:sinful_spouse = {
							any_child = {
								AND = {
									is_male = yes
									is_child_of = root
								}
							}
						}
					}
				}
				add = -10
			}
			
		}
		trigger_event = char_interaction.0231
	}
	
	option = { # Another time
		name = harem_politics.0004.c
		if = {
			limit = {
				OR = {
					AND = {
						has_trait = just
						OR = {
							has_imprisonment_reason = scope:sinful_spouse
							scope:sinful_spouse = {
								any_secret = {
									exists = secret_owner
									is_known_by = root
									is_criminal_for = secret_owner
								}
							}
						}
					}
					AND = {
						has_trait = zealous
						scope:sinful_spouse = {
							AND = {
								num_sinful_traits >= 2
								num_virtuous_traits = 0
							}
						}
					}
				}
			}
			stress_impact = {
				just = minor_stress_impact_gain
				zealous = minor_stress_impact_gain
			}
		}
		scope:sinful_spouse = {
			add_character_flag = {
				flag = flag_considered_consort
				days = 1825
			}
		}
		stress_impact = {
			vengeful = minor_stress_impact_gain
			callous = minor_stress_impact_gain
		}
		add_character_flag = {
			flag = flag_had_demote_consort_event
			days = 540
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = -0.1
			}
			modifier = { #Alliances
				any_close_family_member = {
					is_landed = yes
				}
				add = 15
			}
			modifier = { #They were already demoted
				scope:sinful_spouse = {
					OR = {
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_modifier = demoted_spouse_modifier
					}
				}
				add = 10
			}
			modifier = { #Favored consort
				scope:sinful_spouse = {
					has_character_modifier = favored_consort_modifier
				}
				add = 15
			}
			modifier = { #Compassionate
				OR = {
					has_trait = compassionate
					has_trait = forgiving
				}
				add = 20
			}
			modifier = { #Vengeful
				OR = {
					has_trait = vengeful
					has_trait = callous
				}
				add = -20
			}
			modifier = { #Known criminal
				AND = {
					has_trait = just
					has_imprisonment_reason = scope:sinful_spouse
				}
				add = -20
			}
			
			modifier = { #Zealous
				AND = {
					has_trait = zealous
					scope:sinful_spouse = {
						AND = {
							num_sinful_traits >= 2
							num_virtuous_traits = 0
						}
					}
				}
				add = -15
			}
			modifier = { #More likely if not criminal
				add = 20
				NOT = {
					has_imprisonment_reason = scope:sinful_spouse
				}
			}
			modifier = { #More likely if high opinion
				add = 10
				opinion = {
					target = scope:sinful_spouse
					value >= low_positive_opinion
				}
			}
			
			modifier = { #Important children
				add = 20
				scope:sinful_spouse = {
					any_child = {
						this = root.player_heir
					}
				}
			}
			modifier = { #Many children
				add = 20
				scope:sinful_spouse = {
					any_child = {
						even_if_dead = yes
						count >= 4
					}
				}
			}
			modifier = { #Strong relatives
				scope:sinful_spouse = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
						}
					}
				}
				add = 25
			}
			modifier = { #Connections
				scope:sinful_spouse = {
					any_close_family_member = {
						is_vassal_of = root
					}
				}
				add = 10
			}
			modifier = { #Primary spouse
				scope:sinful_spouse = {
					this = root.primary_spouse
				}
				add = 25
			}
			modifier = { #GC
				scope:sinful_spouse = {
					has_court_position = grand_consort_court_position
				}
				add = 15
			}
			modifier = { #Soulmate
				has_relation_soulmate = scope:sinful_spouse
				add = 30
			}
			modifier = { #Lover
				has_relation_lover = scope:sinful_spouse
				add = 20
			}
			modifier = { #Friend
				has_relation_friend = scope:sinful_spouse
				add = 10
			}
			modifier = { #BFF
				has_relation_best_friend = scope:sinful_spouse
				add = 15
			}
			modifier = { #Valuable heir
				OR = {
					AND = {
						OR = {
							has_realm_law = female_only_law
							has_realm_law = female_preference_law
						}
						scope:sinful_spouse = {
							any_child = {
								AND = {
									is_male = no
									is_child_of = root
								}
							}
						}
					}
					AND = {
						OR = {
							has_realm_law = male_only_law
							has_realm_law = male_preference_law
						}
						scope:sinful_spouse = {
							any_child = {
								AND = {
									is_male = yes
									is_child_of = root
								}
							}
						}
					}
				}
				add = 10
			}
		}
	}
}

################
##Orphan child##
################
scripted_trigger harem_politics_valid_orphan_child_trigger = {
	OR = {
		NOT = { exists = mother }
		NOT = { exists = father }
		mother = {
			is_alive = no
		}
		father = {
			is_alive = no
		}
		has_any_bastard_trait_trigger = yes
	}
	is_landed = no
	is_courtier_of = root
	is_physically_able = yes
	is_adult = no
	age >= 9
	NOR = { 
		has_character_flag = considered_child_flag
		has_relation_guardian = root
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
	is_hostage = no
}

scripted_trigger harem_politics_valid_mother_trigger = {
	is_physically_able_ai_adult = yes
	is_courtier_of = root
	NOR = {
		sex_same_as = root 
		has_trait = ill
		has_trait = wounded
		has_character_modifier = recently_tortured
		has_character_flag = flag_scolded_consort
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_effect non_parent_effect = {
	random_list = {
		50 = { #Progress towards rivals
			modifier = {
				add = 15
				OR = {
					accepts_concubinage = yes
					accepts_polygamy = yes
				}
			}
			modifier = { #Traits
				add = 10
				harem_politics_evil_consort_trigger = yes
			}
			modifier = { #Traits
				add = 10
				has_trait = vengeful
			}
			modifier = { #Traits
				add = 10
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 10
				has_trait = greedy
			}
			modifier = { #Traits
				add = 10
				has_trait = infertile
			}
			modifier = { #Age
				add = 10
				age >= 40
			}
			modifier = { #Childless
				add = 10
				any_child = {
					count = 0
				}
			}
			opinion_modifier = {
				opinion_target = scope:new_parent
				multiplier = -0.30
			}
			opinion_modifier = { #If they don't like the player, they don't want a child
				opinion_target = root
				multiplier = 0.50
			}
			if = {
				limit = { 
					NOR = { 
						has_relation_rival = scope:new_parent
						has_relation_nemesis = scope:new_parent
						has_relation_potential_rival = scope:new_parent
					} 
				}
				set_relation_potential_rival = scope:new_parent
			}
			add_opinion = {
				target = scope:new_parent
				modifier = stole_my_child_opinion
			}
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -15
			}
		}
		50 = { #Nothing
			modifier = {
				add = 15
				NOR = {
					accepts_concubinage = yes
					accepts_polygamy = yes
				}
			}
			modifier = { #Traits
				add = 10
				harem_politics_evil_consort_trigger = no
			}
			modifier = { #Traits
				add = 10
				has_trait = compassionate
			}
			modifier = { #Traits
				add = 10
				has_trait = forgiving
			}
			modifier = { #Traits
				add = 10
				has_trait = temperate
			}
			modifier = { #Traits
				add = 10
				has_trait = generous
			}
			modifier = { #Traits
				add = 10
				has_trait = calm
			}
			modifier = { #Child
				add = 10
				any_child = {
					count >= 1
				}
			}
			opinion_modifier = {
				opinion_target = scope:new_parent
				multiplier = 0.30
			}
			opinion_modifier = { #If they don't like player, then they're happy to not raise their child
				opinion_target = root
				multiplier = -0.50
			}
		}
	}
}

scripted_effect set_mother_consort_effect = {
	send_interface_toast = {
		left_icon = scope:new_parent
		right_icon = scope:motherless_child
		title = harem_politics.0007.tt
		scope:motherless_child = {
			if = {
				limit = { 
					scope:new_parent = {
						is_female = yes 
					}
				}
				set_mother = scope:new_parent
			}
			else = {
				set_father = scope:new_parent
			}
		}
		stress_impact = {
			paranoid = minor_stress_impact_gain
		}
	}
	scope:motherless_child = {
		add_opinion = {
			modifier = thankful_consort_opinion
			target = root
		}
		add_character_modifier = { 
			modifier = safe_disease_treatment_success_high_modifier 
			days = disease_treatment_short_duration 
		}
		if = {
			limit = { 
				NOR = { 
					has_relation_best_friend = root
					has_relation_friend = root
				} 
			}
			set_relation_potential_friend = root
		}
		if = {
			limit = { 
				NOR = { 
					has_relation_best_friend = scope:new_parent
					has_relation_friend = scope:new_parent
				} 
			}
			set_relation_potential_friend = scope:new_parent
		}
		hidden_effect = {
			change_current_weight = 15
			if = {
				limit = {
					has_any_bastard_trait_trigger = yes
				}
				remove_all_bastard_traits = yes
			}
			if = {
				limit = {
					has_trait = child_of_concubine_female
				}
				remove_trait = child_of_concubine_female
			}
			if = {
				limit = {
					has_trait = child_of_concubine_male
				}
				remove_trait = child_of_concubine_male
			}
			add_character_modifier = {
				modifier = favored_child_modifier
				years = 3
			}
		}
		if = {
			limit = { 
				scope:new_parent = {
					AND = {
						is_concubine_of = root 
						is_female = yes
						scope:motherless_child = {
							NOT = { has_trait = child_of_concubine_female }
						}
					}
				}
			}
			add_trait = child_of_concubine_female
		}
		if = {
			limit = { 
				scope:new_parent = {
					AND = {
						is_concubine_of = root 
						is_male = yes
						scope:motherless_child = {
							NOT = { has_trait = child_of_concubine_male }
						}
					}
				}
			}
			add_trait = child_of_concubine_male
		}
	}
	scope:new_parent = {
		calyver_favor_medium_gain_effect = yes
		add_opinion = {
			target = root
			modifier = thankful_consort_opinion
		}
		if = {
			limit = { 
				NOR = { 
					has_relation_lover = root
					has_relation_soulmate = root
					has_relation_potential_lover = root
				} 
			}
			set_relation_potential_lover = root
		}
		hidden_effect = {
			if = {
				limit = {
					has_character_modifier = unfavored_consort_modifier
				}
				remove_character_modifier = unfavored_consort_modifier
			}
			if = {
				limit = {
					NOR = {	
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_modifier = demoted_spouse_modifier
					}
				}
				add_character_modifier = {
					modifier = favored_consort_modifier
					years = 3
				}
			}
		}
	}
	hidden_effect = {
		scope:non_parent_1 = {
			non_parent_effect = yes
		}
		scope:non_parent_2 = {
			non_parent_effect = yes
		}
	}
}

harem_politics.0006 = {
	type = character_event
	title = harem_politics.0006.t
	desc = {
		desc = harem_politics.0006.start.desc
		first_valid = {
			triggered_desc = { #Man
				trigger = {
					is_male = yes
				}
				desc = harem_politics.0006.mother.desc
			}
			triggered_desc = { #Woman
				trigger = {
					is_female = yes
				}
				desc = harem_politics.0006.father.desc
			}
		}
		desc = harem_politics.0006.end.desc
	}
	theme = family
	override_background = {
		reference = corridor_night
	}
	
	left_portrait  = {
		character = scope:motherless_child
		animation = sick
	}
	right_portrait = {
		character = root
		animation = worry
	}
	
	trigger = {
		any_child = {
			harem_politics_valid_orphan_child_trigger = yes
		}
		any_consort = {
			harem_politics_valid_mother_trigger = yes
			count >= 3
		}
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
		NOT = { has_character_flag = had_motherless_child_event_flag }
	}
	
	immediate = {
		save_scope_as = harem_liege
		every_child = {
			limit = {
				harem_politics_valid_orphan_child_trigger = yes
			}
			add_to_list = motherless_children_list
		}
		
		random_in_list = {
			list = motherless_children_list
			limit = {
				NOR = { 
					has_character_flag = considered_child_flag
					has_relation_ward = root
				}
			}
			weight = {
				base = 10
				modifier = { #Low-ranking children
					OR = {
						has_trait = child_of_concubine_female
						has_trait = child_of_concubine_male
						has_any_bastard_trait_trigger = yes
					}
					add = 50
				}
				modifier = { #The heir will attract bullying from other consorts
					this = root.player_heir
					add = 50
				}
			}
			save_scope_as = motherless_child
			scope:motherless_child = {
				if = {
					limit = {
						NOT = {
							has_trait = ill
						}
					}
					contract_disease_effect = { 
						DISEASE = ill 
						TREATMENT_EVENT = no 
					} 
				}
				hidden_effect = {
					change_current_weight = -20
				}
			}
		}
		
		#Court tutor
		if = {
			limit = {
				any_court_position_holder = {
					type = court_tutor_court_position
				}
			}
			random_court_position_holder = {
				type = court_tutor_court_position
				save_scope_as = neglecting_tutor
			}
		}
		#Wet nurse
		if = {
			limit = {
				any_court_position_holder = {
					type = wet_nurse_court_position
				}
			}
			random_court_position_holder = {
				type = wet_nurse_court_position
				save_scope_as = neglecting_wet_nurse
			}
		}
	}
	
	option = { # Find a new mom
		name = harem_politics.0006.a
		trigger = { 
			any_consort = {
				harem_politics_valid_mother_trigger = yes
				count >= 3
			}
		}
		custom_tooltip = harem_politics.0006.a.tt
		trigger_event = harem_politics.0007
		stress_impact = {
			cynical = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
			base = 30
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_energy = 0.25
				ai_greed = -0.25
			}
			modifier = {	#Weight up.
				add = 30
				scope:motherless_child = {
					root = { save_temporary_scope_as = compare_character }
					has_ward_guardian_education_match_compare_character_trigger = yes # same education interest
				}
			}
			modifier = {	#Weight up.
				add = 30
				scope:motherless_child = {
					age >= 12
				}
			}
			modifier = {	#Weight down for stress.
				add = -35
				OR = {
					has_trait = cynical
					has_trait = callous
					has_trait = lazy
					has_trait = paranoid
				}
			}
			modifier = {	#Diligent
				add = 30
				OR = {
					has_trait = diligent
					has_trait = just
					has_trait = compassionate
				}
			}
			
			modifier = {	#Weight down opinion
				add = -25
				opinion = {
					target = scope:motherless_child
					value <= medium_negative_opinion
				}
			}
			modifier = {	#Weight down opinion
				add = 15
				opinion = {
					target = scope:motherless_child
					value >= low_positive_opinion
				}
			}
		}
	}
	
	option = { # Become the child's guardian
		name = harem_politics.0006.b
		trigger = { 
			num_of_relation_ward < 2 
			scope:motherless_child = {
				NOT = {
					has_relation_guardian = root
				}
			}
		}
		scope:motherless_child = {
			hidden_effect = {
				if = {
					limit = {
						any_relation = {
							type = guardian
							count > 0
						}
					}
					random_relation = {
						type = guardian
						save_scope_as = old_guardian
					}
					remove_relation_guardian = scope:old_guardian
				}
			}
			set_relation_guardian = root
			add_opinion = {
				modifier = thankful_consort_opinion
				target = root
			}
			hidden_effect = {
				change_current_weight = 15
				add_character_modifier = {
					modifier = favored_child_modifier
					years = 3
				}
			}
			add_character_modifier = { 
				modifier = safe_disease_treatment_success_high_modifier 
				days = disease_treatment_short_duration 
			}
			if = {
				limit = { 
					NOR = {
						has_relation_friend = root
						has_relation_best_friend = root
					}
				}
				set_relation_friend = { 
					reason = friend_motherless_child_ward_reason
					target = root 
				}
			}
		}
		
		stress_impact = {
			cynical = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 5
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_energy = 0.25
				ai_greed = -0.25
			}
			modifier = {
				add = 15
				has_trait = trusting
			}
			modifier = { #Filial
				add = 250
				OR = {
					faith = { has_doctrine = tenet_ancestor_worship }
					culture = { has_cultural_tradition = tradition_mystical_ancestors }
				}
			}
			modifier = {	#Weight up.
				add = 30
				scope:motherless_child = {
					root = { save_temporary_scope_as = compare_character }
					has_ward_guardian_education_match_compare_character_trigger = yes # same education interest
				}
			}
			modifier = {	#Weight down for stress.
				add = -30
				OR = {
					has_trait = cynical
					has_trait = callous
					has_trait = lazy
				}
			}
			modifier = {	#Diligent
				add = 30
				OR = {
					has_trait = diligent
					has_trait = just
				}
			}
			modifier = {	#Weight down opinion
				add = -20
				opinion = {
					target = scope:motherless_child
					value <= low_negative_opinion
				}
			}
			modifier = {	#Weight up opinion
				add = 20
				opinion = {
					target = scope:motherless_child
					value >= medium_positive_opinion
				}
			}
			modifier = {
				add = 25
				scope:motherless_child = root.player_heir
			}
			modifier = {
				add = 25
				OR = {
					AND = {
						scope:motherless_child  = {
							is_male = yes
						}
						is_male = yes
					}
					AND = {
						scope:motherless_child  = {
							is_female = yes
						}
						is_female = yes
					}
				}
			}
		}
	}
	
	option = { # Punish servants and find new ones
		name = harem_politics.0006.c
		scope:motherless_child = {
			add_opinion = {
				modifier = thankful_consort_opinion
				target = root
			}
			hidden_effect = {
				change_current_weight = 10
				add_character_modifier = {
					modifier = favored_child_modifier
					years = 1
				}
			}
			add_character_modifier = { 
				modifier = safe_disease_treatment_success_low_modifier 
				days = disease_treatment_short_duration 
			}
		}
		#Punish court position holders
		if = {
			limit = {
				exists = scope:neglecting_tutor
			}
			scope:neglecting_tutor = {
				add_character_modifier = {
					modifier = hunt_tasted_the_belt_modifier
					years = 2
				}
				add_opinion = {
					target = root
					modifier = cruelty_opinion
					opinion = -15
				}
			}
		}
		if = {
			limit = {
				exists = scope:neglecting_wet_nurse
			}
			scope:neglecting_wet_nurse = {
				add_character_modifier = {
					modifier = hunt_tasted_the_belt_modifier
					years = 2
				}
				add_opinion = {
					target = root
					modifier = cruelty_opinion
					opinion = -15
				}
			}
		}
		stress_impact = {
			diligent = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			just = minor_stress_impact_loss
			forgiving = minor_stress_impact_gain
			vengeful = minor_stress_impact_loss
		}
		ai_chance = {
			base = 5
			ai_value_modifier = {
				ai_compassion = -0.5
				ai_greed = 0.25
			}
			modifier = {	#Weight up.
				add = 30
				scope:motherless_child = {
					root = { save_temporary_scope_as = compare_character }
					has_ward_guardian_education_match_compare_character_trigger = yes # same education interest
				}
			}
			modifier = {	#Weight down for stress.
				add = -25
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = diligent
				}
			}
			modifier = {	#Weight down for stress.
				add = 25
				OR = {
					has_trait = just
					has_trait = vengeful
				}
			}
			modifier = {	#Weight down opinion
				add = 15
				opinion = {
					target = scope:motherless_child
					value <= low_negative_opinion
				}
			}
			modifier = {	#Weight up opinion
				add = 20
				opinion = {
					target = scope:motherless_child
					value <= medium_negative_opinion
				}
			}
			modifier = {	#Weight down opinion
				add = -15
				opinion = {
					target = scope:motherless_child
					value >= low_positive_opinion
				}
			}
			modifier = {	#Player heir
				add = -15
				scope:motherless_child = root.player_heir
			}
			modifier = {	#Toutor
				exists = scope:neglecting_tutor
				scope:neglecting_tutor = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_close_family_of = root
							is_liege_or_above_of = root
							this = root
						}
					}
				}
				add = -30
			}
		}
	}
	after = {
		add_character_flag = {
			flag = had_motherless_child_event_flag
			years = 25
		}
		scope:motherless_child = {
			add_character_flag = {
				flag = considered_child_flag
			}
		}
	}
}

harem_politics.0007 = {
	type = character_event
	title = harem_politics.0007.t
	desc = {
		desc = harem_politics.0007.start.desc
		first_valid = {
			triggered_desc = { #Man
				trigger = {
					is_male = yes
				}
				desc = harem_politics.0007.mother.desc
			}
			triggered_desc = { #Woman
				trigger = {
					is_female = yes
				}
				desc = harem_politics.0007.father.desc
			}
		}
		desc = harem_politics.0007.end.desc
	}
	theme = family
	
	left_portrait  = {
		character = scope:mommy_1
		animation = flirtation_left
	}
	right_portrait = {
		character = scope:motherless_child
		animation = sick
	}
	lower_left_portrait = {
		character = scope:mommy_2
	}
	lower_right_portrait  = {
		character = scope:mommy_3
	}
	
	trigger = {
		
	}
	
	immediate = {
		every_consort = {
			limit = {
				harem_politics_valid_mother_trigger = yes
			}
			add_to_list = mother_candidate_list
		}
		
		random_in_list = {
			list = mother_candidate_list
			weight = {
				base = 10
				modifier = { #The main spouse
					this = root.primary_spouse
					add = 150
				}
				modifier = { #Grand Consort
					has_court_position = grand_consort_court_position
					add = 50
				}
				modifier = { #Spouses rank higher
					is_spouse_of = root
					add = 20
				}
				modifier = { #Soulmate
					has_relation_soulmate = root
					add = 50
				}
				modifier = { #Lover
					has_relation_lover = root
					add = 25
				}
				modifier = { #BFF
					has_relation_best_friend = root
					add = 20
				}
				modifier = { #Friends
					has_relation_friend = root
					add = 10
				}
				modifier = { #Favored consort
					has_character_modifier = favored_consort_modifier
					add = 15
				}
				modifier = { #Haters
					OR = {
						has_character_modifier = unfavored_consort_modifier
						has_relation_rival = root
						has_relation_nemesis = root
					}
					add = -50
				}
				modifier = { #Good background
					is_lowborn = no
					add = 10
				}
				modifier = { #Nice contacts
					any_close_family_member = {
						is_vassal_of = root
					}
					add = 10
				}
				modifier = { #Good contacts
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
							is_liege_or_above_of = root
						}
					}
					add = 20
				}
				modifier = { #Kids
					any_child = {
						even_if_dead = yes
						count >= 1
					}
					add = 20
				}
				modifier = { #Kids
					any_child = {
						even_if_dead = yes
						count >= 2
					}
					add = 5
				}
				modifier = { #Kids
					any_child = {
						even_if_dead = yes
						count >= 4
					}
					add = 5
				}
				modifier = { #Good traits
					OR = {
						has_trait = calm
						has_trait = content
						has_trait = diligent
						has_trait = forgiving
						has_trait = compassionate
						has_trait = honest
						has_trait = humble
						has_trait = just
						has_trait = patient
						has_trait = temperate
					}
					add = 15
				}
				modifier = { #Bad traits
					OR = {
						has_trait = craven
						has_trait = wrathful
						has_trait = ambitious
						has_trait = lazy
						has_trait = vengeful
						has_trait = deceitful
						has_trait = arrogant
						has_trait = arbitrary
						has_trait = impatient
						has_trait = gluttonous
						has_trait = sadistic
						has_trait = callous
					}
					add = -15
				}
				modifier = { #Faith
					faith = root.faith
					add = 25
				}
				modifier = { #Culture
					culture = root.culture
					add = 10
				}
				modifier = { #Skills
					OR = {
						diplomacy >= 13
						stewardship >= 13
						learning >= 13
					}
					add = 20
				}
				modifier = { #Demoted consorts
					OR = {
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_modifier = demoted_spouse_modifier
					}
					add = -100
				}
				modifier = {
					add = 30
					opinion = {
						target = root
						value >= 0
					}
				}
			}
			save_scope_as = mommy_1
		}
		
		random_in_list = {
			list = mother_candidate_list
			limit = {
				NOT = {
					this = scope:mommy_1
				}
			}
			weight = {
				base = 10
				modifier = { #The main spouse
					this = root.primary_spouse
					add = 200
				}
				modifier = { #Grand Consort
					has_court_position = grand_consort_court_position
					add = 100
				}
				modifier = { #Spouses rank higher
					is_spouse_of = root
					add = 40
				}
				modifier = { #Soulmate
					has_relation_soulmate = root
					add = 50
				}
				modifier = { #Lover
					has_relation_lover = root
					add = 25
				}
				modifier = { #BFF
					has_relation_best_friend = root
					add = 20
				}
				modifier = { #Friends
					has_relation_friend = root
					add = 10
				}
				modifier = { #Favored consort
					has_character_modifier = favored_consort_modifier
					add = 15
				}
				modifier = { #Haters
					OR = {
						has_character_modifier = unfavored_consort_modifier
						has_relation_rival = root
						has_relation_nemesis = root
					}
					add = -50
				}
				modifier = { #Good background
					is_lowborn = no
					add = 10
				}
				modifier = { #Nice contacts
					any_close_family_member = {
						is_vassal_of = root
					}
					add = 10
				}
				modifier = { #Good contacts
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
							is_liege_or_above_of = root
						}
					}
					add = 20
				}
				modifier = { #Kids
					any_child = {
						even_if_dead = yes
						count >= 1
					}
					add = 20
				}
				modifier = { #Kids
					any_child = {
						even_if_dead = yes
						count >= 2
					}
					add = 5
				}
				modifier = { #Kids
					any_child = {
						even_if_dead = yes
						count >= 4
					}
					add = 5
				}
				modifier = { #Good traits
					OR = {
						has_trait = calm
						has_trait = content
						has_trait = diligent
						has_trait = forgiving
						has_trait = compassionate
						has_trait = honest
						has_trait = humble
						has_trait = just
						has_trait = patient
						has_trait = temperate
					}
					add = 15
				}
				modifier = { #Bad traits
					OR = {
						has_trait = craven
						has_trait = wrathful
						has_trait = ambitious
						has_trait = lazy
						has_trait = vengeful
						has_trait = deceitful
						has_trait = arrogant
						has_trait = arbitrary
						has_trait = impatient
						has_trait = gluttonous
						has_trait = sadistic
						has_trait = callous
					}
					add = -15
				}
				modifier = { #Faith
					faith = root.faith
					add = 25
				}
				modifier = { #Culture
					culture = root.culture
					add = 10
				}
				modifier = { #Skills
					OR = {
						diplomacy >= 13
						stewardship >= 13
						learning >= 13
					}
					add = 20
				}
				modifier = { #Demoted consorts
					OR = {
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_modifier = demoted_spouse_modifier
					}
					add = -100
				}
				modifier = {
					add = 30
					opinion = {
						target = root
						value >= 0
					}
				}
			}
			save_scope_as = mommy_2
		}
		
		random_in_list = {
			list = mother_candidate_list
			limit = {
				NOR = {
					this = scope:mommy_1
					this = scope:mommy_2
				}
			}
			weight = {
				base = 10
				modifier = { #The main spouse
					this = root.primary_spouse
					add = 200
				}
				modifier = { #Grand Consort
					has_court_position = grand_consort_court_position
					add = 100
				}
				modifier = { #Spouses rank higher
					is_spouse_of = root
					add = 40
				}
				modifier = { #Soulmate
					has_relation_soulmate = root
					add = 50
				}
				modifier = { #Lover
					has_relation_lover = root
					add = 25
				}
				modifier = { #BFF
					has_relation_best_friend = root
					add = 20
				}
				modifier = { #Friends
					has_relation_friend = root
					add = 10
				}
				modifier = { #Favored consort
					has_character_modifier = favored_consort_modifier
					add = 15
				}
				modifier = { #Haters
					OR = {
						has_character_modifier = unfavored_consort_modifier
						has_relation_rival = root
						has_relation_nemesis = root
					}
					add = -50
				}
				modifier = { #Good background
					is_lowborn = no
					add = 10
				}
				modifier = { #Nice contacts
					any_close_family_member = {
						is_vassal_of = root
					}
					add = 10
				}
				modifier = { #Good contacts
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
							is_liege_or_above_of = root
						}
					}
					add = 20
				}
				modifier = { #Kids
					any_child = {
						even_if_dead = yes
						count >= 1
					}
					add = 20
				}
				modifier = { #Kids
					any_child = {
						even_if_dead = yes
						count >= 2
					}
					add = 5
				}
				modifier = { #Kids
					any_child = {
						even_if_dead = yes
						count >= 4
					}
					add = 5
				}
				modifier = { #Good traits
					OR = {
						has_trait = calm
						has_trait = content
						has_trait = diligent
						has_trait = forgiving
						has_trait = compassionate
						has_trait = honest
						has_trait = humble
						has_trait = just
						has_trait = patient
						has_trait = temperate
					}
					add = 15
				}
				modifier = { #Bad traits
					OR = {
						has_trait = craven
						has_trait = wrathful
						has_trait = ambitious
						has_trait = lazy
						has_trait = vengeful
						has_trait = deceitful
						has_trait = arrogant
						has_trait = arbitrary
						has_trait = impatient
						has_trait = gluttonous
						has_trait = sadistic
						has_trait = callous
					}
					add = -15
				}
				modifier = { #Faith
					faith = root.faith
					add = 25
				}
				modifier = { #Culture
					culture = root.culture
					add = 10
				}
				modifier = { #Skills
					OR = {
						diplomacy >= 13
						stewardship >= 13
						learning >= 13
					}
					add = 20
				}
				modifier = { #Demoted consorts
					OR = {
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_modifier = demoted_spouse_modifier
					}
					add = -100
				}
				modifier = {
					add = 30
					opinion = {
						target = root
						value >= 0
					}
				}
			}
			save_scope_as = mommy_3
		}
	}
	
	option = { # Mommy_1 is chosen
		name = harem_politics.0007.a
		scope:mommy_1 = {
			save_scope_as = new_parent
		}
		scope:mommy_2 = {
			save_scope_as = non_parent_1
		}
		scope:mommy_3 = {
			save_scope_as = non_parent_2
		}
		set_mother_consort_effect = yes
		ai_chance = {
			base = 5
			modifier = {
				add = -35
				has_trait = paranoid
			}
			modifier = {
				add = 15
				has_relation_friend = scope:mommy_1
			}
			modifier = {
				add = 25
				has_relation_best_friend = scope:mommy_1
			}
			modifier = {
				add = 20
				has_relation_lover = scope:mommy_1
			}
			modifier = {
				add = 30
				has_relation_soulmate = scope:mommy_1
			}
			modifier = {
				add = -30
				OR = {
					has_relation_nemesis = scope:mommy_1
					has_relation_rival = scope:mommy_1
					scope:mommy_1 = {
						OR = {
							has_character_modifier = demoted_primary_spouse_modifier
							has_character_modifier = demoted_spouse_modifier
							has_character_modifier = unfavored_consort_modifier
						}
					}
				}
			}
			modifier = {
				add = 15
				scope:mommy_1 = {
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = {
				add = 15
				scope:mommy_1 = {
					is_spouse_of = root
				}
			}
			modifier = {
				add = 10
				scope:mommy_1 = root.primary_spouse
			}
			modifier = {
				add = 10
				scope:mommy_1 = {
					any_child = {
						count >= 1
					}
				}
			}
			modifier = {
				add = 5
				scope:mommy_1 = {
					any_child = {
						count >= 2
					}
				}
			}
			modifier = {
				add = 5
				scope:mommy_1 = {
					any_child = {
						count >= 3
					}
				}
			}
			modifier = {
				add = 20
				scope:mommy_1 = {
					OR = {
						diplomacy >= 13
						stewardship >= 13
						learning >= 13
					}
				}
			}
			modifier = {
				add = -30
				scope:mommy_1 = {
					OR = {
						AND = {
							has_trait = witch
							trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
						}
						AND = {
							has_trait = deviant
							trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
						}
						AND = {
							has_trait = sodomite
							trait_is_criminal_in_faith_trigger = { TRAIT = sodomite FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
						}
						AND = {
							has_trait = fornicator
							trait_is_criminal_in_faith_trigger = { TRAIT = fornicator FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
						}
						AND = {
							has_trait = adulterer
							trait_is_criminal_in_faith_trigger = { TRAIT = adulterer FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
						}
						AND = {
							has_trait = incestuous
							trait_is_criminal_in_faith_trigger = { TRAIT = incestuous FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
						}
						AND = {
							has_trait = kinslayer_1
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_1 FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
						}
						AND = {
							has_trait = kinslayer_2
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_2 FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
						}
						AND = {
							has_trait = kinslayer_3
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_3 FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
						}
						AND = {
							has_trait = deviant
							trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
						}
						AND = {
							has_trait = cannibal
							trait_is_criminal_in_faith_trigger = { TRAIT = cannibal FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
						}
					}
				}
			}
			modifier = { #Traits
				add = 20
				scope:mommy_1 = {
					OR = {
						has_trait = forgiving
						has_trait = compassionate
						has_trait = diligent
						has_trait = just
						has_trait = temperate
						has_trait = patient
					}
				}
			}
			modifier = { #Traits
				add = -35
				scope:mommy_1 = {
					NOR = {
						has_trait = craven
						has_trait = wrathful
						has_trait = lazy
						has_trait = vengeful
						has_trait = arrogant
						has_trait = arbitrary
						has_trait = impatient
						has_trait = gluttonous
						has_trait = sadistic
						has_trait = callous
					}
				}
			}
			modifier = { #Background
				add = 15
				scope:mommy_1 = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
							is_liege_or_above_of = root
						}
					}
				}
			}
			modifier = {
				add = -35
				NOT = { faith = scope:mommy_1.faith }
			}
		}
	}
	
	option = { # Mommy_2 is chosen
		name = harem_politics.0007.b
		scope:mommy_1 = {
			save_scope_as = non_parent_1
		}
		scope:mommy_2 = {
			save_scope_as = new_parent
		}
		scope:mommy_3 = {
			save_scope_as = non_parent_2
		}
		set_mother_consort_effect = yes
		ai_chance = {
			base = 5
			modifier = {
				add = -35
				has_trait = paranoid
			}
			modifier = {
				add = -35
				NOT = { faith = scope:mommy_2.faith }
			}
			modifier = {
				add = 15
				has_relation_friend = scope:mommy_2
			}
			modifier = {
				add = 25
				has_relation_best_friend = scope:mommy_2
			}
			modifier = {
				add = 20
				has_relation_lover = scope:mommy_2
			}
			modifier = {
				add = 30
				has_relation_soulmate = scope:mommy_2
			}
			modifier = {
				add = -30
				OR = {
					has_relation_nemesis = scope:mommy_2
					has_relation_rival = scope:mommy_2
					scope:mommy_2 = {
						OR = {
							has_character_modifier = demoted_primary_spouse_modifier
							has_character_modifier = demoted_spouse_modifier
							has_character_modifier = unfavored_consort_modifier
						}
					}
				}
			}
			modifier = {
				add = 15
				scope:mommy_2 = {
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = {
				add = 15
				scope:mommy_2 = {
					is_spouse_of = root
				}
			}
			modifier = {
				add = 10
				scope:mommy_2 = root.primary_spouse
			}
			modifier = {
				add = 10
				scope:mommy_2 = {
					any_child = {
						count >= 1
					}
				}
			}
			modifier = {
				add = 5
				scope:mommy_2 = {
					any_child = {
						count >= 2
					}
				}
			}
			modifier = {
				add = 5
				scope:mommy_2 = {
					any_child = {
						count >= 3
					}
				}
			}
			modifier = {
				add = 20
				scope:mommy_2 = {
					OR = {
						diplomacy >= 13
						stewardship >= 13
						learning >= 13
					}
				}
			}
			modifier = {
				add = -30
				scope:mommy_2 = {
					OR = {
						AND = {
							has_trait = witch
							trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
						}
						AND = {
							has_trait = deviant
							trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
						}
						AND = {
							has_trait = sodomite
							trait_is_criminal_in_faith_trigger = { TRAIT = sodomite FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
						}
						AND = {
							has_trait = fornicator
							trait_is_criminal_in_faith_trigger = { TRAIT = fornicator FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
						}
						AND = {
							has_trait = adulterer
							trait_is_criminal_in_faith_trigger = { TRAIT = adulterer FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
						}
						AND = {
							has_trait = incestuous
							trait_is_criminal_in_faith_trigger = { TRAIT = incestuous FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
						}
						AND = {
							has_trait = kinslayer_1
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_1 FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
						}
						AND = {
							has_trait = kinslayer_2
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_2 FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
						}
						AND = {
							has_trait = kinslayer_3
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_3 FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
						}
						AND = {
							has_trait = deviant
							trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
						}
						AND = {
							has_trait = cannibal
							trait_is_criminal_in_faith_trigger = { TRAIT = cannibal FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
						}
					}
				}
			}
			modifier = { #Traits
				add = 20
				scope:mommy_2 = {
					OR = {
						has_trait = forgiving
						has_trait = compassionate
						has_trait = diligent
						has_trait = just
						has_trait = temperate
						has_trait = patient
					}
				}
			}
			modifier = { #Traits
				add = -35
				scope:mommy_2 = {
					NOR = {
						has_trait = craven
						has_trait = wrathful
						has_trait = lazy
						has_trait = vengeful
						has_trait = arrogant
						has_trait = arbitrary
						has_trait = impatient
						has_trait = gluttonous
						has_trait = sadistic
						has_trait = callous
					}
				}
			}
			modifier = { #Background
				add = 15
				scope:mommy_2 = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
							is_liege_or_above_of = root
						}
					}
				}
			}
		}
	}
	
	option = { # Mommy_3 is chosen
		name = harem_politics.0007.c
		scope:mommy_1 = {
			save_scope_as = non_parent_1
		}
		scope:mommy_2 = {
			save_scope_as = non_parent_2
		}
		scope:mommy_3 = {
			save_scope_as = new_parent
		}
		set_mother_consort_effect = yes
		ai_chance = {
			base = 5
			modifier = {
				add = -35
				has_trait = paranoid
			}
			modifier = {
				add = -35
				NOT = { faith = scope:mommy_3.faith }
			}
			modifier = {
				add = 15
				has_relation_friend = scope:mommy_3
			}
			modifier = {
				add = 25
				has_relation_best_friend = scope:mommy_3
			}
			modifier = {
				add = 20
				has_relation_lover = scope:mommy_3
			}
			modifier = {
				add = 30
				has_relation_soulmate = scope:mommy_3
			}
			modifier = {
				add = -30
				OR = {
					has_relation_nemesis = scope:mommy_3
					has_relation_rival = scope:mommy_3
					scope:mommy_3 = {
						OR = {
							has_character_modifier = demoted_primary_spouse_modifier
							has_character_modifier = demoted_spouse_modifier
							has_character_modifier = unfavored_consort_modifier
						}
					}
				}
			}
			modifier = {
				add = 15
				scope:mommy_3 = {
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = {
				add = 15
				scope:mommy_3 = {
					is_spouse_of = root
				}
			}
			modifier = {
				add = 10
				scope:mommy_3 = root.primary_spouse
			}
			modifier = {
				add = 10
				scope:mommy_3 = {
					any_child = {
						count >= 1
					}
				}
			}
			modifier = {
				add = 5
				scope:mommy_3 = {
					any_child = {
						count >= 2
					}
				}
			}
			modifier = {
				add = 5
				scope:mommy_3 = {
					any_child = {
						count >= 3
					}
				}
			}
			modifier = {
				add = 20
				scope:mommy_3 = {
					OR = {
						diplomacy >= 13
						stewardship >= 13
						learning >= 13
					}
				}
			}
			modifier = {
				add = -30
				scope:mommy_3 = {
					OR = {
						AND = {
							has_trait = witch
							trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
						}
						AND = {
							has_trait = deviant
							trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
						}
						AND = {
							has_trait = sodomite
							trait_is_criminal_in_faith_trigger = { TRAIT = sodomite FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
						}
						AND = {
							has_trait = fornicator
							trait_is_criminal_in_faith_trigger = { TRAIT = fornicator FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
						}
						AND = {
							has_trait = adulterer
							trait_is_criminal_in_faith_trigger = { TRAIT = adulterer FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
						}
						AND = {
							has_trait = incestuous
							trait_is_criminal_in_faith_trigger = { TRAIT = incestuous FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
						}
						AND = {
							has_trait = kinslayer_1
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_1 FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
						}
						AND = {
							has_trait = kinslayer_2
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_2 FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
						}
						AND = {
							has_trait = kinslayer_3
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_3 FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
						}
						AND = {
							has_trait = deviant
							trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
						}
						AND = {
							has_trait = cannibal
							trait_is_criminal_in_faith_trigger = { TRAIT = cannibal FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
						}
					}
				}
			}
			modifier = { #Traits
				add = 20
				scope:mommy_3 = {
					OR = {
						has_trait = forgiving
						has_trait = compassionate
						has_trait = diligent
						has_trait = just
						has_trait = temperate
						has_trait = patient
					}
				}
			}
			modifier = { #Traits
				add = -35
				scope:mommy_3 = {
					NOR = {
						has_trait = craven
						has_trait = wrathful
						has_trait = lazy
						has_trait = vengeful
						has_trait = arrogant
						has_trait = arbitrary
						has_trait = impatient
						has_trait = gluttonous
						has_trait = sadistic
						has_trait = callous
					}
				}
			}
			modifier = { #Background
				add = 15
				scope:mommy_3 = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
							is_liege_or_above_of = root
						}
					}
				}
			}
		}
	}
	
	option = { # Become the child's guardian
		name = harem_politics.0007.d
		trigger = { 
			num_of_relation_ward < 2 
			scope:motherless_child = {
				NOT = {
					has_relation_guardian = root
				}
			}
		}
		scope:motherless_child = {
			hidden_effect = {
				if = {
					limit = {
						any_relation = {
							type = guardian
							count > 0
						}
					}
					random_relation = {
						type = guardian
						save_scope_as = old_guardian
					}
					remove_relation_guardian = scope:old_guardian
				}
			}
			set_relation_guardian = root
			add_opinion = {
				modifier = thankful_consort_opinion
				target = root
			}
			hidden_effect = {
				change_current_weight = 15
				add_character_modifier = {
					modifier = favored_child_modifier
					years = 3
				}
			}
			add_character_modifier = { 
				modifier = safe_disease_treatment_success_high_modifier 
				days = disease_treatment_short_duration 
			}
			if = {
				limit = { 
					NOR = {
						has_relation_friend = root
						has_relation_best_friend = root
					}
				}
				set_relation_friend = { 
					reason = friend_motherless_child_ward_reason
					target = root 
				}
			}
		}
		
		stress_impact = {
			cynical = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 5
			modifier = {
				add = 15
				has_trait = trusting
			}
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_energy = 0.25
				ai_greed = -0.25
			}
			modifier = { #Filial
				add = 250
				OR = {
					faith = { has_doctrine = tenet_ancestor_worship }
					culture = { has_cultural_tradition = tradition_mystical_ancestors }
				}
			}
			modifier = {	#Weight up.
				add = 30
				scope:motherless_child = {
					root = { save_temporary_scope_as = compare_character }
					has_ward_guardian_education_match_compare_character_trigger = yes # same education interest
				}
			}
			modifier = {	#Weight down for stress.
				add = -30
				OR = {
					has_trait = cynical
					has_trait = callous
					has_trait = lazy
				}
			}
			modifier = {	#Diligent
				add = 30
				OR = {
					has_trait = diligent
					has_trait = just
				}
			}
			modifier = {	#Weight down opinion
				add = -20
				opinion = {
					target = scope:motherless_child
					value <= low_negative_opinion
				}
			}
			modifier = {	#Weight down opinion
				add = 20
				opinion = {
					target = scope:motherless_child
					value >= medium_positive_opinion
				}
			}
			modifier = {
				add = 25
				scope:motherless_child = root.player_heir
			}
			modifier = {
				add = 25
				AND = {
					scope:motherless_child  = {
						is_male = yes
					}
					is_male = yes
				}
			}
			modifier = {
				add = 25
				AND = {
					scope:motherless_child  = {
						is_female = yes
					}
					is_female = yes
				}
			}
		}
	}
	
	option = { # Second thoughts
		name = harem_politics.0007.e
		trigger = { 
			num_of_relation_ward = 2 
			scope:motherless_child = {
				NOT = {
					has_relation_guardian = root
				}
			}
		}
		scope:motherless_child = {
			add_opinion = {
				modifier = thankful_consort_opinion
				target = root
			}
			hidden_effect = {
				change_current_weight = 15
				add_character_modifier = {
					modifier = favored_child_modifier
					years = 3
				}
			}
			add_character_modifier = { 
				modifier = safe_disease_treatment_success_high_modifier 
				days = disease_treatment_short_duration 
			}
			if = {
				limit = { 
					NOR = {
						has_relation_friend = root
						has_relation_best_friend = root
					}
				}
				set_relation_friend = { 
					reason = friend_motherless_child_ward_reason
					target = root 
				}
			}
		}
		
		stress_impact = {
			cynical = minor_stress_impact_gain
			callous = minor_stress_impact_gain
		}
		ai_chance = {
			base = 5
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_energy = 0.25
				ai_greed = -0.25
			}
			modifier = {
				add = 15
				has_trait = trusting
			}
			modifier = { #Filial
				add = 250
				OR = {
					faith = { has_doctrine = tenet_ancestor_worship }
					culture = { has_cultural_tradition = tradition_mystical_ancestors }
				}
			}
			modifier = {	#Weight down for stress.
				add = -30
				OR = {
					has_trait = cynical
					has_trait = callous
				}
			}
			modifier = {	#Weight down opinion
				add = -20
				opinion = {
					target = scope:motherless_child
					value <= low_negative_opinion
				}
			}
			modifier = {	#Weight down opinion
				add = 15
				opinion = {
					target = scope:motherless_child
					value >= medium_positive_opinion
				}
			}
		}
	}
	
	option = { # Let the child decide
		name = harem_politics.0007.f
		custom_tooltip = harem_politics.0007.f.tt
		hidden_effect = {
			random = {
				chance = 100
				random_list = {
					1 = { # Mommy_1
						modifier = { #Children of concubines
							add = 20
							AND = {
								scope:motherless_child = {
									OR = {
										has_trait = arrogant
										has_trait = ambitious
										has_trait = bossy
										has_trait = child_of_concubine_female
										has_trait = child_of_concubine_male
										has_any_bastard_trait_trigger = yes
									}
								}
								scope:mommy_1 = {
									OR = {
										is_spouse_of = root
										any_close_family_member = {
											OR = {
												is_powerful_vassal_of = root
												is_councillor_of = root
												highest_held_title_tier >= tier_kingdom
												is_liege_or_above_of = root
											}
										}
										has_character_modifier = favored_consort_modifier
									}
								}
							}
						}
						modifier = { #Spouses
							add = 20
							scope:mommy_1 = {
								is_spouse_of = root
							}
						}
						modifier = { # Primary spouse
							add = 20
							scope:mommy_1 = {
								this = root.primary_spouse
							}
						}
						modifier = { # GC
							add = 10
							scope:mommy_1 = {
								has_court_position = grand_consort_court_position
							}
						}
						modifier = { #Bullies
							add = -100
							scope:mommy_1 = {
								OR = {
									any_child = {
										OR = {
											has_relation_nemesis = scope:motherless_child
											has_relation_rival = scope:motherless_child
											has_relation_bully = scope:motherless_child
										}
									}
									OR = {
										has_relation_nemesis = scope:motherless_child
										has_relation_rival = scope:motherless_child
									}
								}
							}
						}
						modifier = { #Friends
							add = 50
							scope:mommy_1 = {
								any_child = {
									OR = {
										has_relation_friend = scope:motherless_child
										has_relation_best_friend = scope:motherless_child
									}
								}
							}
						}
						modifier = { #Friends
							add = 50
							scope:motherless_child = {
								has_relation_friend = scope:mommy_1
							}
						}
						modifier = { #Child opinion
							add = 10
							scope:motherless_child = {
								opinion = {
									target = scope:mommy_1
									value >= low_positive_opinion
								}
							}
						}
						modifier = { #Child opinion
							add = 10
							scope:motherless_child = {
								opinion = {
									target = scope:mommy_1
									value >= medium_positive_opinion
								}
							}
						}
						compatibility_modifier = { #Trait compatibility
							who = scope:motherless_child
							compatibility_target = scope:mommy_1
							min = -40
							max = 40
							multiplier = 2
						}
						modifier = { #Religion
							NOT = { scope:motherless_child.faith = scope:mommy_1.faith }
							add = {
								value = scope:motherless_child.ai_zeal
								multiply = -0.50
							}
						}
						modifier = { #Sinful traits
							scope:mommy_1 = {
								num_sinful_traits >= 1
							}
							add = {
								value = scope:motherless_child.ai_zeal
								multiply = -0.10
							}
						}
						modifier = { #Virtuous traits
							scope:mommy_1 = {
								num_virtuous_traits >= 1
							}
							add = {
								value = scope:motherless_child.ai_zeal
								multiply = 0.10
							}
						}
						modifier = { #Culture
							add = 10
							scope:mommy_1.culture = scope:motherless_child.culture
						}
						modifier = { #Criminal
							scope:mommy_1 = {
								OR = {
									AND = {
										has_trait = witch
										trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
									}
									AND = {
										has_trait = deviant
										trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
									}
									AND = {
										has_trait = sodomite
										trait_is_criminal_in_faith_trigger = { TRAIT = sodomite FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
									}
									AND = {
										has_trait = fornicator
										trait_is_criminal_in_faith_trigger = { TRAIT = fornicator FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
									}
									AND = {
										has_trait = adulterer
										trait_is_criminal_in_faith_trigger = { TRAIT = adulterer FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
									}
									AND = {
										has_trait = incestuous
										trait_is_criminal_in_faith_trigger = { TRAIT = incestuous FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
									}
									AND = {
										has_trait = kinslayer_1
										trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_1 FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
									}
									AND = {
										has_trait = kinslayer_2
										trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_2 FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
									}
									AND = {
										has_trait = kinslayer_3
										trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_3 FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
									}
									AND = {
										has_trait = deviant
										trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
									}
									AND = {
										has_trait = cannibal
										trait_is_criminal_in_faith_trigger = { TRAIT = cannibal FAITH = root.faith GENDER_CHARACTER = scope:mommy_1 }
									}
								}
							}
							add = -50
						}
						scope:mommy_1 = {
							save_scope_as = new_parent
						}
						scope:mommy_2 = {
							save_scope_as = non_parent_1
						}
						scope:mommy_3 = {
							save_scope_as = non_parent_2
						}
						set_mother_consort_effect = yes
					}
					1 = { # Mommy_2
						modifier = { #Children of concubines
							add = 20
							AND = {
								scope:motherless_child = {
									OR = {
										has_trait = arrogant
										has_trait = ambitious
										has_trait = bossy
										has_trait = child_of_concubine_female
										has_trait = child_of_concubine_male
										has_any_bastard_trait_trigger = yes
									}
								}
								scope:mommy_2 = {
									OR = {
										is_spouse_of = root
										any_close_family_member = {
											OR = {
												is_powerful_vassal_of = root
												is_councillor_of = root
												highest_held_title_tier >= tier_kingdom
												is_liege_or_above_of = root
											}
										}
										has_character_modifier = favored_consort_modifier
									}
								}
							}
						}
						modifier = { #Spouses
							add = 20
							scope:mommy_2 = {
								is_spouse_of = root
							}
						}
						modifier = { # Primary spouse
							add = 20
							scope:mommy_2 = {
								this = root.primary_spouse
							}
						}
						modifier = { # GC
							add = 10
							scope:mommy_2 = {
								has_court_position = grand_consort_court_position
							}
						}
						modifier = { #Bullies
							add = -100
							scope:mommy_2 = {
								OR = {
									any_child = {
										OR = {
											has_relation_nemesis = scope:motherless_child
											has_relation_rival = scope:motherless_child
											has_relation_bully = scope:motherless_child
										}
									}
									OR = {
										has_relation_nemesis = scope:motherless_child
										has_relation_rival = scope:motherless_child
									}
								}
							}
						}
						modifier = { #Friends
							add = 50
							scope:mommy_2 = {
								any_child = {
									OR = {
										has_relation_friend = scope:motherless_child
										has_relation_best_friend = scope:motherless_child
									}
								}
							}
						}
						modifier = { #Friends
							add = 50
							scope:motherless_child = {
								has_relation_friend = scope:mommy_2
							}
						}
						modifier = { #Child opinion
							add = 10
							scope:motherless_child = {
								opinion = {
									target = scope:mommy_2
									value >= low_positive_opinion
								}
							}
						}
						modifier = { #Child opinion
							add = 10
							scope:motherless_child = {
								opinion = {
									target = scope:mommy_2
									value >= medium_positive_opinion
								}
							}
						}
						compatibility_modifier = { #Trait compatibility
							who = scope:motherless_child
							compatibility_target = scope:mommy_2
							min = -40
							max = 40
							multiplier = 2
						}
						modifier = { #Religion
							NOT = { scope:motherless_child.faith = scope:mommy_2.faith }
							add = {
								value = scope:motherless_child.ai_zeal
								multiply = -0.50
							}
						}
						modifier = { #Sinful traits
							scope:mommy_2 = {
								num_sinful_traits >= 1
							}
							add = {
								value = scope:motherless_child.ai_zeal
								multiply = -0.10
							}
						}
						modifier = { #Virtuous traits
							scope:mommy_2 = {
								num_virtuous_traits >= 1
							}
							add = {
								value = scope:motherless_child.ai_zeal
								multiply = 0.10
							}
						}
						modifier = { #Culture
							add = 10
							scope:mommy_2.culture = scope:motherless_child.culture
						}
						modifier = { #Criminal
							scope:mommy_2 = {
								OR = {
									AND = {
										has_trait = witch
										trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
									}
									AND = {
										has_trait = deviant
										trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
									}
									AND = {
										has_trait = sodomite
										trait_is_criminal_in_faith_trigger = { TRAIT = sodomite FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
									}
									AND = {
										has_trait = fornicator
										trait_is_criminal_in_faith_trigger = { TRAIT = fornicator FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
									}
									AND = {
										has_trait = adulterer
										trait_is_criminal_in_faith_trigger = { TRAIT = adulterer FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
									}
									AND = {
										has_trait = incestuous
										trait_is_criminal_in_faith_trigger = { TRAIT = incestuous FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
									}
									AND = {
										has_trait = kinslayer_1
										trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_1 FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
									}
									AND = {
										has_trait = kinslayer_2
										trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_2 FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
									}
									AND = {
										has_trait = kinslayer_3
										trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_3 FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
									}
									AND = {
										has_trait = deviant
										trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
									}
									AND = {
										has_trait = cannibal
										trait_is_criminal_in_faith_trigger = { TRAIT = cannibal FAITH = root.faith GENDER_CHARACTER = scope:mommy_2 }
									}
								}
							}
							add = -50
						}
						scope:mommy_1 = {
							save_scope_as = non_parent_1
						}
						scope:mommy_2 = {
							save_scope_as = new_parent
						}
						scope:mommy_3 = {
							save_scope_as = non_parent_2
						}
						set_mother_consort_effect = yes
					}
					1 = { # Mommy_3
						modifier = { #Children of concubines
							add = 20
							AND = {
								scope:motherless_child = {
									OR = {
										has_trait = arrogant
										has_trait = ambitious
										has_trait = bossy
										has_trait = child_of_concubine_female
										has_trait = child_of_concubine_male
										has_any_bastard_trait_trigger = yes
									}
								}
								scope:mommy_3 = {
									OR = {
										is_spouse_of = root
										any_close_family_member = {
											OR = {
												is_powerful_vassal_of = root
												is_councillor_of = root
												highest_held_title_tier >= tier_kingdom
												is_liege_or_above_of = root
											}
										}
										has_character_modifier = favored_consort_modifier
									}
								}
							}
						}
						modifier = { #Spouses
							add = 20
							scope:mommy_3 = {
								is_spouse_of = root
							}
						}
						modifier = { # GC
							add = 10
							scope:mommy_3 = {
								has_court_position = grand_consort_court_position
							}
						}
						modifier = { # Primary spouse
							add = 20
							scope:mommy_3 = {
								this = root.primary_spouse
							}
						}
						modifier = { #Bullies
							add = -100
							scope:mommy_3 = {
								OR = {
									any_child = {
										OR = {
											has_relation_nemesis = scope:motherless_child
											has_relation_rival = scope:motherless_child
											has_relation_bully = scope:motherless_child
										}
									}
									OR = {
										has_relation_nemesis = scope:motherless_child
										has_relation_rival = scope:motherless_child
									}
								}
							}
						}
						modifier = { #Friends
							add = 50
							scope:mommy_3 = {
								any_child = {
									OR = {
										has_relation_friend = scope:motherless_child
										has_relation_best_friend = scope:motherless_child
									}
								}
							}
						}
						modifier = { #Friends
							add = 50
							scope:motherless_child = {
								has_relation_friend = scope:mommy_3
							}
						}
						modifier = { #Child opinion
							add = 10
							scope:motherless_child = {
								opinion = {
									target = scope:mommy_3
									value >= low_positive_opinion
								}
							}
						}
						modifier = { #Child opinion
							add = 10
							scope:motherless_child = {
								opinion = {
									target = scope:mommy_3
									value >= medium_positive_opinion
								}
							}
						}
						compatibility_modifier = { #Trait compatibility
							who = scope:motherless_child
							compatibility_target = scope:mommy_3
							min = -40
							max = 40
							multiplier = 2
						}
						modifier = { #Religion
							NOT = { scope:motherless_child.faith = scope:mommy_3.faith }
							add = {
								value = scope:motherless_child.ai_zeal
								multiply = -0.50
							}
						}
						modifier = { #Sinful traits
							scope:mommy_3 = {
								num_sinful_traits >= 1
							}
							add = {
								value = scope:motherless_child.ai_zeal
								multiply = -0.10
							}
						}
						modifier = { #Virtuous traits
							scope:mommy_3 = {
								num_virtuous_traits >= 1
							}
							add = {
								value = scope:motherless_child.ai_zeal
								multiply = 0.10
							}
						}
						modifier = { #Culture
							add = 10
							scope:mommy_3.culture = scope:motherless_child.culture
						}
						modifier = { #Criminal
							scope:mommy_3 = {
								OR = {
									AND = {
										has_trait = witch
										trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
									}
									AND = {
										has_trait = deviant
										trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
									}
									AND = {
										has_trait = sodomite
										trait_is_criminal_in_faith_trigger = { TRAIT = sodomite FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
									}
									AND = {
										has_trait = fornicator
										trait_is_criminal_in_faith_trigger = { TRAIT = fornicator FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
									}
									AND = {
										has_trait = adulterer
										trait_is_criminal_in_faith_trigger = { TRAIT = adulterer FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
									}
									AND = {
										has_trait = incestuous
										trait_is_criminal_in_faith_trigger = { TRAIT = incestuous FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
									}
									AND = {
										has_trait = kinslayer_1
										trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_1 FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
									}
									AND = {
										has_trait = kinslayer_2
										trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_2 FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
									}
									AND = {
										has_trait = kinslayer_3
										trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_3 FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
									}
									AND = {
										has_trait = deviant
										trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
									}
									AND = {
										has_trait = cannibal
										trait_is_criminal_in_faith_trigger = { TRAIT = cannibal FAITH = root.faith GENDER_CHARACTER = scope:mommy_3 }
									}
								}
							}
							add = -50
						}
						scope:mommy_1 = {
							save_scope_as = non_parent_1
						}
						scope:mommy_2 = {
							save_scope_as = non_parent_2
						}
						scope:mommy_3 = {
							save_scope_as = new_parent
						}
						set_mother_consort_effect = yes
					}
					1 = { #The child chooses their biological dead mom. They'll be better taken care of
						modifier = { #Filial
							add = 250
							scope:motherless_child = { 
								OR = {
									faith = { has_doctrine = tenet_ancestor_worship }
									culture = { has_cultural_tradition = tradition_mystical_ancestors }
								}
							}
						}
						modifier = { #Depending on their age, they might hold their parents in high regards
							add = 40
							age >= 13
						}
						modifier = {
							add = 15
							AND = {
								scope:motherless_child  = {
									is_male = yes
								}
								is_male = yes
							}
						}
						modifier = {
							add = 15
							AND = {
								scope:motherless_child  = {
									is_female = yes
								}
								is_female = yes
							}
						}
						send_interface_toast = {
							left_icon = root
							right_icon = scope:motherless_child
							title = harem_politics.0007.root.tt
							
							scope:motherless_child = {
								if = { 
									limit = {
										root = { num_of_relation_ward < 2 }
									}
									hidden_effect = {
										if = {
											limit = {
												any_relation = {
													type = guardian
													count > 0
												}
											}
											random_relation = {
												type = guardian
												save_scope_as = old_guardian
											}
											remove_relation_guardian = scope:old_guardian
										}
									}
									set_relation_guardian = root
								}
								add_opinion = {
									modifier = thankful_consort_opinion
									target = root
								}
								if = {
									limit = { 
										NOR = {
											has_relation_friend = root
											has_relation_best_friend = root
										}
									}
									set_relation_friend = { 
										reason = friend_motherless_child_ward_reason
										target = root 
									}
								}
							}
							stress_impact = {
								compassionate = minor_stress_impact_loss
								forgiving = minor_stress_impact_loss
							}
						}
						scope:motherless_child = {
							change_current_weight = 15
							add_character_modifier = {
								modifier = favored_child_modifier
								years = 3
							}
							add_character_modifier = { 
								modifier = safe_disease_treatment_success_high_modifier 
								days = disease_treatment_short_duration 
							}
							add_character_modifier = {
								modifier = filial_opinion_modifier
								years = 5
							}
						}
					}
				}
			}
		}
		ai_chance = {
			base = 35
			modifier = {
				add = 50
				OR = {
					has_trait = compassionate
					has_trait = trusting
				}
			}
			modifier = {
				add = 40
				scope:motherless_child = {
					age >= 12
				}
			}
			modifier = {
				add = 100
				OR = {
					AND = {
						opinion = {
							target = scope:mommy_1
							value <= low_negative_opinion
						}
						opinion = {
							target = scope:mommy_2
							value <= low_negative_opinion
						}
						opinion = {
							target = scope:mommy_3
							value <= low_negative_opinion
						}
					}
					AND = {
						scope:mommy_1 = {
							OR = {
								has_character_modifier = demoted_primary_spouse_modifier
								has_character_modifier = demoted_spouse_modifier
								has_character_modifier = unfavored_consort_modifier
							}
						}
						scope:mommy_2 = {
							OR = {
								has_character_modifier = demoted_primary_spouse_modifier
								has_character_modifier = demoted_spouse_modifier
								has_character_modifier = unfavored_consort_modifier
							}
						}
						scope:mommy_3 = {
							OR = {
								has_character_modifier = demoted_primary_spouse_modifier
								has_character_modifier = demoted_spouse_modifier
								has_character_modifier = unfavored_consort_modifier
							}
						}
					}
				}
			}
		}
	}
}

################################################
##Consort asks you to give titles to relatives##
################################################
scripted_trigger harem_politics_valid_relative_trigger = {
	any_liege_or_above = {
		this = root
	}
	is_available_healthy_ai_adult = yes
	any_held_title = { count = 0 }
	NOR = {
		has_trait = ill
		has_trait = wounded
		has_character_modifier = recently_tortured
		any_consort = {
			this = root
		}
	}
	trigger_if = {
		limit = { is_female = yes }
		ROOT = { faith_dominant_gender_female_or_equal = yes }
	}
	trigger_else = { faith_dominant_gender_male_or_equal = yes }
	NOT = {
		any_heir_title = {} # Not heir to anything
	}
}

scripted_trigger harem_politics_ambitious_consort_trigger = {
	harem_politics_evil_consort_trigger = yes
	is_courtier_of = root
	OR = {
		has_relation_best_friend = root
		has_relation_friend = root
		has_relation_lover = root
		has_relation_soulmate = root
		is_spouse_of = root
		is_parent_of = root
	}
	is_demoted_consort_trigger = no
	is_physically_able_ai = yes
	is_at_war = no
	NOR = { 
		has_character_flag = requested_favor_flag
		has_opinion_modifier = {
			target = root
			modifier = forced_me_concubine_marriage_opinion
		}
		has_trait = ill
		has_trait = wounded
		has_character_modifier = recently_tortured
		has_character_flag = flag_scolded_consort
		has_character_modifier = unfavored_consort_modifier
		has_character_modifier = forgotten_consort_modifier
		AND = {
			has_variable = favor
			var:favor < neutral_consort_lower_limit
		}
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
	OR = {
		AND = {
			any_close_or_extended_family_member = {
				harem_politics_valid_relative_trigger = yes
				count = 0 
			}
			age <= 34
		}
		any_close_or_extended_family_member = {
			harem_politics_valid_relative_trigger = yes
			count >= 1
		}
	}
}

harem_politics.0008 = {
	type = character_event
	title = harem_politics.0008.t
	desc = harem_politics.0008.desc
	theme = realm
	
	left_portrait  = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:meddling_relative
		animation = personality_content
	}
	lower_center_portrait = {
		character = scope:consort_relative
	}
	
	trigger = {
		OR = {
			any_consort = {
				harem_politics_ambitious_consort_trigger = yes
			}
			any_parent = {
				harem_politics_ambitious_consort_trigger = yes
			}
		}
		OR = {
        	any_held_title = {
	        	tier = tier_barony
	        	is_capital_barony = no
	        	is_leased_out = no
	        	NOT = { THIS = ROOT.capital_barony }
	        }
	        any_held_title = {
	        	count >= 4
	        	tier = tier_county
	        }
	    }
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
		NOR = {
        	has_character_flag = had_ambitious_consort_flag
	    }
	}
	
	immediate = {
		save_scope_as = harem_liege
		every_parent = {
			limit = {
				harem_politics_ambitious_consort_trigger = yes
			}
			add_to_list = requester_list
		}
		every_consort = {
			limit = {
				harem_politics_ambitious_consort_trigger = yes
			}
			add_to_list = requester_list
		}
		
		random_in_list = {
			list = requester_list
			weight = {
				base = 10
				modifier = { #The main spouse
					this = root.primary_spouse
					add = 20
				}
				modifier = { #The Empress Dowager
					any_child = {
						this = root
					}
					add = 20
				}
				modifier = { #Grand Consort
					has_court_position = grand_consort_court_position
					add = 15
				}
				modifier = { #Spouses rank higher
					is_spouse_of = root
					add = 10
				}
				modifier = { #Soulmate
					has_relation_soulmate = root
					add = 50
				}
				modifier = { #Lover
					has_relation_lover = root
					add = 25
				}
				modifier = { #BFF
					has_relation_best_friend = root
					add = 20
				}
				modifier = { #Friends
					has_relation_friend = root
					add = 10
				}
				modifier = { #Favored consort
					has_character_modifier = favored_consort_modifier
					add = 15
				}
				modifier = { #Good contacts
					any_child = {
						is_child_of = root
						count >= 3
					}
					add = 10
				}
				modifier = {
					has_trait = ambitious
					add = 15
				}
				modifier = {
					has_trait = arrogant
					add = 15
				}
				modifier = {
					has_trait = deceitful
					add = 15
				}
				modifier = { #Faith
					faith = root.faith
					add = 10
				}
				modifier = { #Culture
					culture = root.culture
					add = 10
				}
			}
			save_scope_as = meddling_relative
		}
		
		scope:meddling_relative = {
			if = {
				limit = {
					any_close_or_extended_family_member = {
						harem_politics_valid_relative_trigger = yes
						count = 0 
					}
					age <= 34
				}
				#Create the relatives
				create_character = {
					location = root.capital_province
					template = consort_relative_template
					gender = male
					age = meddling_relative_parent_age
					save_scope_as = meddling_relative_father
				}
				create_character = {
					location = root.capital_province
					template = consort_relative_template
					gender = female
					age = meddling_relative_parent_age
					save_scope_as = meddling_relative_mother
				}
				scope:meddling_relative_mother = {
					if = {
						limit = {
							ROOT = { faith_dominant_gender_female_or_equal = yes }
						}
						marry_matrilineal = scope:meddling_relative_father
						if = {
							limit = { exists = scope:meddling_relative.house }
							set_house = scope:meddling_relative.house
						}
					}
					else = {
						marry = scope:meddling_relative_father
						scope:meddling_relative_father = {
							if = {
								limit = { exists = scope:meddling_relative.house }
								set_house = scope:meddling_relative.house
							}
						}
					}
				}
				scope:meddling_relative = {
					set_mother = scope:meddling_relative_mother
					set_father = scope:meddling_relative_father
				}
				create_character = { #A sibling
					location = root.capital_province
					template = consort_relative_template
					gender_female_chance = {
						if = { # Higher chance for non-dominant gender
							limit = { root.faith = { has_doctrine = doctrine_gender_male_dominated } }
							add = 0
						}
						else_if = {
							limit = { root.faith = { has_doctrine = doctrine_gender_female_dominated } }
							add = 100
						}
						else = {
							add = 50
						}
					}
					age = meddling_relative_sibling_age
					save_scope_as = meddling_relative_sibling
				}
				scope:meddling_relative_sibling = {
					set_mother = scope:meddling_relative_mother
					set_father = scope:meddling_relative_father
					if = {
						limit = { exists = scope:meddling_relative.house }
						set_house = scope:meddling_relative.house
					}
				}
			}
			every_close_or_extended_family_member = {
				limit = {
					harem_politics_valid_relative_trigger = yes
				}
				add_to_list = valid_relative_list
			}
		}
		
		random_in_list = {
			list = valid_relative_list
			weight = {
				base = 10
				modifier = { #Siblings are priority
					any_close_family_member = { this = scope:meddling_relative }
					add = 25
				}
				modifier = { #Same dynasty
					exists = dynasty
					exists = scope:meddling_relative.dynasty
					dynasty = scope:meddling_relative.dynasty
					add = 20
				}
				modifier = { #Same house
					exists = house
					exists = scope:meddling_relative.house
					house = scope:meddling_relative.house
					add = 15
				}
				modifier = { #Opinion
					opinion = {
						target = scope:meddling_relative
						value >= low_positive_opinion
					}
					add = 20
				}
				modifier = { #Martial
					martial >= very_high_skill_rating
					add = 25
				}
				modifier = { #Stewardship
					stewardship >= very_high_skill_rating
					add = 25
				}
				modifier = { #Martial
					martial >= high_skill_rating
					add = 15
				}
				modifier = { #Stewardship
					stewardship >= high_skill_rating
					add = 15
				}
				modifier = { #Martial
					martial >= decent_skill_rating
					add = 5
				}
				modifier = { #stewardship
					stewardship >= decent_skill_rating
					add = 5
				}
			}
			save_scope_as = consort_relative
		}
		if = { # Find a valid barony to give away
        	limit = {
        		any_held_title = {
        			tier = tier_barony
        			is_capital_barony = no
        			is_leased_out = no
        			NOT = { THIS = ROOT.capital_barony }
        		}
        	}
        	ordered_held_title = {
	        	limit = {
	        		tier = tier_barony
	        		is_capital_barony = no
        			is_leased_out = no
        			NOT = { THIS = ROOT.capital_barony }
	        	}
	        	order_by = {
	        		value = 0
	        		subtract = title_province.combined_building_level
	        	}
	        	save_scope_as = worst_title
	        }
        }
        else = { # Find a valid county to give away
	        ordered_held_title = {
	        	limit = {
	        		tier = tier_county
	        		NOT = { THIS = ROOT.capital_county }
	        	}
	        	order_by = {
	        		value = 0
	        		subtract = development_level
	        	}
	        	save_scope_as = worst_title
	        }
	    }
	}
	
	option = { #Give title away
        name = harem_politics.0008.a
		scope:meddling_relative = {
			calyver_favor_big_gain_effect = yes
        	add_opinion = {
        		target = ROOT
        		modifier = thankful_consort_opinion
        	}
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 2
			}
			add_character_flag = {
				flag = requested_favor_flag
				years = 2
			}
        }
		hidden_effect = {
			every_consort = {
				limit = {
					AND = {
						NOR = {
							this = scope:meddling_relative
							any_close_or_extended_family_member = {
								this = scope:meddling_relative
							}
							has_relation_best_friend = scope:meddling_relative
							has_relation_friend = scope:meddling_relative
							has_relation_lover = scope:meddling_relative
							has_relation_soulmate = scope:meddling_relative
						}
						harem_politics_evil_consort_trigger = yes
					}
				}
				add_opinion = {
					target = scope:meddling_relative
					modifier = envy_consort_opinion
				}
			}
			scope:consort_relative = {
				add_opinion = {
					target = scope:meddling_relative
					modifier = grateful_opinion
					opinion = 20
				}
			}
		}
		send_interface_toast = {
			left_icon = scope:consort_relative
			title = harem_politics.0008.a.tt
			ROOT = {
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
					add_claim_on_loss = no
				}
				scope:worst_title = {
					change_title_holder = {
						holder = scope:consort_relative
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
				scope:consort_relative = {
					if = {
						limit = { scope:worst_title.tier = tier_barony }
						add_opinion = {
							target = ROOT
							modifier = received_title_barony
							opinion = 30
						}
					}
					else = {
						add_opinion = {
							target = ROOT
							modifier = received_title_county
							opinion = 50
						}
					}
				}
				if = {
					limit = {
						can_add_hook = {
							target = scope:consort_relative
							type = indebted_hook
						}
					}
					add_hook = {
						target = scope:consort_relative
						type = indebted_hook
					}
				}
			}
		}
		stress_impact = {
			greedy = medium_stress_impact_gain # But, titles
			diligent = medium_stress_impact_gain # But, I like managing stuff
			arrogant = medium_stress_impact_gain # But, my titles
			lazy = minor_stress_impact_loss
			generous = minor_stress_impact_loss
		}
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = 0.5
   				ai_greed = -1
   			}
            modifier = { # Weight up for family members.
            	add = 15
            	scope:consort_relative = { is_close_or_extended_family_of = ROOT }
            }
            modifier = { # Weight up for dynasty members.
            	add = 15
            	scope:consort_relative.dynasty = ROOT.dynasty
            }
			modifier = { # Weight up for opinion.
            	add = 10
            	opinion = {
            		target = scope:meddling_relative
            		value >= low_positive_opinion
            	}
            }
            modifier = { # Weight up for opinion.
            	add = 20
            	opinion = {
            		target = scope:meddling_relative
            		value >= 50
            	}
            }
			modifier = { # Weight up for opinion.
            	add = 10
            	opinion = {
            		target = scope:consort_relative
            		value >= 50
            	}
            }
			modifier = { #Fertile consort
				scope:meddling_relative = {
					any_child = {
						is_child_of = root
						count >= 3
					}
				}
				add = 10
			}
			modifier = { #Influential consort
				scope:meddling_relative = {
					any_close_or_extended_family_member = {
						OR = {
							this = root.primary_spouse
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_parent_of = root
							is_liege_or_above_of = root
						}
					}
				}
				add = 10
			}
			modifier = { #Influential consort
				scope:meddling_relative = {
					this = root.primary_spouse
				}
				add = 15
			}
			modifier = { #Influential consort
				scope:meddling_relative = {
					has_court_position = grand_consort_court_position
				}
				add = 7
			}
			modifier = { #Martial
				scope:consort_relative = {
					martial >= very_high_skill_rating
				}
				add = 5
			}
			modifier = { #Stewardship
				scope:consort_relative = {
					stewardship >= very_high_skill_rating
				}
				add = 5
			}
			modifier = { #Martial
				scope:consort_relative = {
					martial >= high_skill_rating
				}
				add = 5
			}
			modifier = { #Stewardship
				scope:consort_relative = {
					stewardship >= high_skill_rating
				}
				add = 5
			}
			modifier = { #Martial
				scope:consort_relative = {
					martial >= decent_skill_rating
				}
				add = 5
			}
			modifier = { #stewardship
				scope:consort_relative = {
					stewardship >= decent_skill_rating
				}
				add = 5
			}
            modifier = {	#Weight down for stress.
				add = -25
				has_trait = greedy
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = diligent
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = humble
			}
			modifier = {	#Weight down for stress.
				add = 25
				has_trait = lazy
			}
			modifier = {	#Weight down for stress.
				add = 25
				has_trait = generous
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = arrogant
			}
			modifier = { #Influential consort
				scope:meddling_relative = {
					is_married = yes
				}
				add = 5
			}
			modifier = { #Influential consort
				scope:meddling_relative = {
					has_character_modifier = favored_consort_modifier
				}
				add = 5
			}
			modifier = { #Influential consort
				scope:meddling_relative = {
					any_child = {
						this = root
					}
				}
				add = 10
			}
			modifier = { #Influential consort
				scope:meddling_relative = {
					any_child = {
						this = root.primary_heir
					}
				}
				add = 10
			}
        }
    }
	
	option = { # You get nothing!
        name = harem_politics.0008.b
        scope:meddling_relative = {
        	add_opinion = {
        		target = ROOT
        		modifier = annoyed_opinion
        		opinion = -15
        	}
			add_character_flag = {
				flag = requested_favor_flag
				years = 10
			}
        }
        stress_impact = {
        	generous = medium_stress_impact_gain # But I have so much to give
        	lazy = medium_stress_impact_gain # I would rather have someone else do it
        	humble = medium_stress_impact_gain # Who am I to deny them?
        }
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_boldness = 1
   				ai_greed = 1
				ai_honor = 0.1
   			}
            modifier = { # Weight up for NO family members.
            	add = 15
            	NOT = {
            		scope:consort_relative = { is_close_or_extended_family_of = ROOT }
            	}
            }
            modifier = { # Weight up for NO dynasty members.
            	factor = 2
            	NOT = {
            		scope:consort_relative.dynasty = ROOT.dynasty
            	}
            }
           modifier = { # Weight up for opinion.
            	add = 10
            	opinion = {
            		target = scope:meddling_relative
            		value <= 0
            	}
            }
            modifier = { # Weight up for opinion.
            	add = 20
            	opinion = {
            		target = scope:meddling_relative
            		value <= 20
            	}
            }
			modifier = { # Weight up for opinion.
            	add = 10
            	opinion = {
            		target = scope:consort_relative
            		value <= 20
            	}
            }
			modifier = { #Non-influential consort
				scope:meddling_relative = {
					is_concubine_of = root
				}
				add = 20
			}
			modifier = { #Martial
				scope:consort_relative = {
					martial <= mediocre_skill_rating
				}
				add = 5
			}
			modifier = { #Stewardship
				scope:consort_relative = {
					stewardship <= mediocre_skill_rating
				}
				add = 5
			}
			modifier = { #Martial
				scope:consort_relative = {
					martial <= low_skill_rating
				}
				add = 10
			}
			modifier = { #Stewardship
				scope:consort_relative = {
					stewardship <= low_skill_rating
				}
				add = 10
			}
			modifier = {	#Weight down for stress.
				scope:consort_relative = {
					OR = {
						AND = {
							has_trait = witch
							trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:consort_relative }
						}
						AND = {
							has_trait = deviant
							trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:consort_relative }
						}
						AND = {
							has_trait = sodomite
							trait_is_criminal_in_faith_trigger = { TRAIT = sodomite FAITH = root.faith GENDER_CHARACTER = scope:consort_relative }
						}
						AND = {
							has_trait = fornicator
							trait_is_criminal_in_faith_trigger = { TRAIT = fornicator FAITH = root.faith GENDER_CHARACTER = scope:consort_relative }
						}
						AND = {
							has_trait = adulterer
							trait_is_criminal_in_faith_trigger = { TRAIT = adulterer FAITH = root.faith GENDER_CHARACTER = scope:consort_relative }
						}
						AND = {
							has_trait = incestuous
							trait_is_criminal_in_faith_trigger = { TRAIT = incestuous FAITH = root.faith GENDER_CHARACTER = scope:consort_relative }
						}
						AND = {
							has_trait = kinslayer_1
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_1 FAITH = root.faith GENDER_CHARACTER = scope:sinful_spouse }
						}
						AND = {
							has_trait = kinslayer_2
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_2 FAITH = root.faith GENDER_CHARACTER = scope:sinful_spouse }
						}
						AND = {
							has_trait = kinslayer_3
							trait_is_criminal_in_faith_trigger = { TRAIT = kinslayer_3 FAITH = root.faith GENDER_CHARACTER = scope:sinful_spouse }
						}
						AND = {
							has_trait = deviant
							trait_is_criminal_in_faith_trigger = { TRAIT = deviant FAITH = root.faith GENDER_CHARACTER = scope:consort_relative }
						}
						AND = {
							has_trait = cannibal
							trait_is_criminal_in_faith_trigger = { TRAIT = cannibal FAITH = root.faith GENDER_CHARACTER = scope:consort_relative }
						}
					}
				}
				add = {
					value = ai_zeal
					multiply = -0.50
				}
			}
            modifier = {	#Weight down for stress.
				add = -25
				has_trait = generous
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = lazy
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = humble
			}
			modifier = { #Fertile consort
				scope:meddling_relative = {
					any_child = {
						is_child_of = root
						count = 0
					}
				}
				add = 10
			}
        }
    }
	after = {
		add_character_flag = {
			flag = had_ambitious_consort_flag
			years = 5
		}
	}
}

########################
##Meeting Consort Ling##
########################

##Through Consort Chun##
harem_politics.0009 = {
	type = character_event
	title = harem_politics.0009.t
	desc = harem_politics.0009.desc
	theme = family
	
	left_portrait  = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:yanwan
		animation = flirtation
	}
	lower_center_portrait = {
		character = scope:chun_fei
	}
	
	trigger = {
		any_consort = {
			OR = {
				is_married = yes
				is_grand_consort_trigger = yes
			}
			any_child = {
				is_physically_able_ai = yes
				is_adult = no
				is_courtier_of = root
				is_child_of = root
				age >= 9
				OR = {
					AND = {
						is_travelling = yes
						current_travel_plan ={
							travel_plan_owner = root
						}
					}
					AND = {
						is_travelling = no
						root = {
							is_travelling = no
						}
					}
				}
				is_hostage = no
				count >= 1
			}
			is_demoted_consort_trigger = no
			is_courtier_of = root
			is_physically_able_ai_adult = yes
			NOR = {
				has_trait = ill
				has_trait = wounded
				has_character_modifier = recently_tortured
				has_character_flag = flag_scolded_consort
			}
			OR = {
				AND = {
					is_travelling = yes
					current_travel_plan ={
						travel_plan_owner = root
					}
				}
				AND = {
					is_travelling = no
					root = {
						is_travelling = no
					}
				}
			}
		}
		NOR = {
        	any_consort = {
	        	has_character_flag = flag_yanwan
	        }
			has_character_flag = met_yanwan_chun_fei
	    }
		allowed_more_concubines = yes
		is_physically_able_adult = yes
		is_at_war = no
		highest_held_title_tier >= tier_kingdom
	}
	
	immediate = {
		save_scope_as = harem_liege
		every_consort = { #Find Consort Chun
			limit = {
				AND = {
					OR = {
						is_married = yes
						is_grand_consort_trigger = yes
					}
					any_child = {
						is_physically_able_ai = yes
						is_adult = no
						is_courtier_of = root
						is_child_of = root
						age >= 9
						OR = {
							AND = {
								is_travelling = yes
								current_travel_plan ={
									travel_plan_owner = root
								}
							}
							AND = {
								is_travelling = no
								root = {
									is_travelling = no
								}
							}
						}
						is_hostage = no
					}
					is_demoted_consort_trigger = no
					is_courtier_of = root
					is_physically_able_ai_adult = yes
					NOR = {
						has_trait = ill
						has_trait = wounded
						has_character_modifier = recently_tortured
						has_character_flag = flag_scolded_consort
					}
					OR = {
						AND = {
							is_travelling = yes
							current_travel_plan ={
								travel_plan_owner = root
							}
						}
						AND = {
							is_travelling = no
							root = {
								is_travelling = no
							}
						}
					}
				}
			}
			add_to_list = chun_fei_list
		}
		
		random_in_list = {
			list = chun_fei_list
			weight = {
				base = 10
				modifier = {
					any_child = {
						is_child_of = root
						is_hostage = no
						count >= 2
					}
					add = 20
				}
				modifier = {
					harem_politics_evil_consort_trigger = yes
					add = 15
				}
				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 10
				}
			}
			save_scope_as = chun_fei
		}
		
		scope:chun_fei = {
			random_child = {
				limit = {
					AND = {
						is_physically_able_ai = yes
						is_adult = no
						is_courtier_of = root
						is_child_of = root
						age >= 9
						OR = {
							AND = {
								is_travelling = yes
								current_travel_plan ={
									travel_plan_owner = root
								}
							}
							AND = {
								is_travelling = no
								root = {
									is_travelling = no
								}
							}
						}
						is_hostage = no
					}
				}
				save_scope_as = yonghuang
			}
		}
		#Create Yanwan
		if = {
			limit = { is_male = yes }
			create_character = {
				location = root.capital_province
				template = yanwan_template
				gender = female
				save_scope_as = yanwan
			}
		}
		else_if = {
			limit = { is_female = yes }
			create_character = {
				location = root.capital_province
				template = yanwan_template
				gender = male
				save_scope_as = yanwan
			}
		}
		hidden_effect = {
			if = {
				limit = { is_travelling = no }
				add_courtier = scope:yanwan
			}
			else = {
				add_courtier = scope:yanwan
				add_to_entourage_court_and_activity_effect = {
					CHAR_TO_ADD = scope:yanwan 
					NEW_COURT_OWNER = root
				}
			}
		}
	}
	
	option = { #Take Yanwan as a concubine
        name = harem_politics.0009.a
		trigger = {
			allowed_more_concubines = yes
		}
		save_scope_as = actor
		save_scope_as = secondary_actor
		scope:yanwan = {
			if = {
				limit = {
					root = {
						any_consort = {
							is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
							count >= 3
						}
					}
				}
				set_variable = {
					name = favor
					value = initial_favor_valuation
				}
			}
			calyver_favor_minor_gain_effect = yes
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 10
			}
			add_character_flag = flag_yanwan
        	save_scope_as = recipient
        }
		scope:chun_fei = {
			calyver_favor_minor_loss_effect = yes
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -15
			}
			add_opinion = {
				target = scope:yanwan
				modifier = hatred_spouse_opinion
			}
		}
		calyver_concubine_on_accept_effect = yes
		make_concubine = scope:recipient
		hidden_effect = {
			every_consort = { #Consorts think Chun shoved a concubine to gain favor
				limit = {
					AND = {
						NOR = {
							this = scope:yanwan
							this = scope:chun_fei
							has_relation_best_friend = scope:chun_fei
							has_relation_friend = scope:chun_fei
							has_relation_lover = scope:chun_fei
							has_relation_soulmate = scope:chun_fei
						}
						harem_politics_evil_consort_trigger = yes
						OR = {
							accepts_concubinage = yes
							accepts_polygamy = yes
						}
					}
				}
				add_opinion = {
					target = scope:chun_fei
					modifier = hatred_spouse_opinion
				}
			}
		}
		stress_impact = {
			chaste = minor_stress_impact_gain 
			arrogant = minor_stress_impact_gain 
			paranoid = minor_stress_impact_gain 
			temperate = minor_stress_impact_gain 
			shy = minor_stress_impact_gain 
		}
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = -0.05
				ai_honor = -0.05
				ai_boldness = 0.1
				ai_greed = 0.1
   			}
            modifier = {
            	add = 10
            	opinion = {
            		target = scope:yanwan
            		value >= low_positive_opinion
            	}
            }
			modifier = {
            	add = 10
            	opinion = {
            		target = scope:yanwan
            		value >= medium_positive_opinion
            	}
            }
			compatibility_modifier = { #Trait compatibility
				who = root
				compatibility_target = scope:yanwan
				min = -20
				max = 20
				multiplier = 2
			}

            modifier = {	#Weight down for stress.
				add = 15
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = paranoid
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = arrogant
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = temperate
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = shy
			}
			modifier = {
				NOT = { root = { is_attracted_to_gender_of = scope:yanwan } }
				factor = 0
			}
        }
    }
	
	option = { # Consort Chun is a good parent
        name = harem_politics.0009.b
        scope:chun_fei = {
			calyver_favor_minor_gain_effect = yes
        	add_opinion = {
        		target = ROOT
        		modifier = grateful_opinion
        		opinion = 15
        	}
			if = {
				limit = {
					has_character_modifier = unfavored_consort_modifier
				}
				remove_character_modifier = unfavored_consort_modifier
			}
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 2
			}
        }
		hidden_effect = {
			scope:yanwan = {
				death = {
					death_reason = death_vanished
				}
			}
		}
        stress_impact = {
        	lustful = minor_stress_impact_gain
        }
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = 0.1
				ai_honor = 0.1
				ai_boldness = -0.05
				ai_greed = -0.05
   			}
            modifier = {
            	add = 10
            	opinion = {
            		target = scope:chun_fei
            		value >= low_positive_opinion
            	}
            }
			modifier = {
            	add = 10
            	opinion = {
            		target = scope:chun_fei
            		value >= medium_positive_opinion
            	}
            }
			modifier = {
            	add = 10
            	scope:chun_fei = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:chun_fei
					has_relation_soulmate = scope:chun_fei
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:chun_fei
					has_relation_friend = scope:chun_fei
            	}
            }
            modifier = {	#Weight down for stress.
				add = -25
				has_trait = lustful
			}
			modifier = {
				add = 15
				has_trait = temperate
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = chaste
			}
        }
    }
	after = {
		add_character_flag = met_yanwan_chun_fei
	}
}

##Through Consort Jia##
harem_politics.0010 = {
	type = character_event
	title = harem_politics.0010.t
	desc = harem_politics.0010.desc
	theme = family
	override_background = {
		reference = garden
	}
	
	left_portrait  = {
		character = root
		animation = disapproval
	}
	right_portrait = {
		character = scope:jia_fei
		animation = shame
	}
	lower_center_portrait = {
		character = scope:yanwan
	}
	
	trigger = {
		any_consort = {
			OR = {
				is_married = yes
				is_grand_consort_trigger = yes
			}
			is_demoted_consort_trigger = no
			harem_politics_evil_consort_trigger = yes
			is_courtier_of = root
			is_physically_able_ai_adult = yes
			NOR = {
				has_trait = ill
				has_trait = wounded
				has_character_modifier = recently_tortured
				has_character_flag = flag_scolded_consort
			}
			OR = {
				AND = {
					is_travelling = yes
					current_travel_plan ={
						travel_plan_owner = root
					}
				}
				AND = {
					is_travelling = no
					root = {
						is_travelling = no
					}
				}
			}
		}
		NOR = {
        	any_consort = {
	        	has_character_flag = flag_yanwan
	        }
			has_character_flag = met_yanwan_jia_fei
	    }
		allowed_more_concubines = yes
		is_physically_able_adult = yes
		is_at_war = no
		highest_held_title_tier >= tier_kingdom
	}
	
	immediate = {
		save_scope_as = harem_liege
		every_consort = { #Find Consort Jia
			limit = {
				AND = {
					OR = {
						is_married = yes
						is_grand_consort_trigger = yes
					}
					is_demoted_consort_trigger = no
					harem_politics_evil_consort_trigger = yes
					is_courtier_of = root
					is_physically_able_ai_adult = yes
					NOR = {
						has_trait = ill
						has_trait = wounded
						has_character_modifier = recently_tortured
						has_character_flag = flag_scolded_consort
					}
					OR = {
						AND = {
							is_travelling = yes
							current_travel_plan ={
								travel_plan_owner = root
							}
						}
						AND = {
							is_travelling = no
							root = {
								is_travelling = no
							}
						}
					}
				}
			}
			add_to_list = jia_fei_list
		}
		
		random_in_list = {
			list = jia_fei_list
			weight = {
				base = 10
				modifier = {
					any_child = {
						is_child_of = root
						count >= 2
					}
					add = 20
				}
				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 10
				}
			}
			save_scope_as = jia_fei
		}

		#Create Yanwan
		if = {
			limit = { is_male = yes }
			create_character = {
				location = root.capital_province
				template = yanwan_template
				gender = female
				save_scope_as = yanwan
			}
		}
		else_if = {
			limit = { is_female = yes }
			create_character = {
				location = root.capital_province
				template = yanwan_template
				gender = male
				save_scope_as = yanwan
			}
		}
		hidden_effect = {
			if = {
				limit = { is_travelling = no }
				add_courtier = scope:yanwan
			}
			else = {
				add_courtier = scope:yanwan
				add_to_entourage_court_and_activity_effect = {
					CHAR_TO_ADD = scope:yanwan 
					NEW_COURT_OWNER = root
				}
			}
			scope:yanwan = {
				add_opinion = {
					target = scope:jia_fei
					modifier = cruelty_opinion
					opinion = -20
				}
			}
		}
	}
	
	option = { #Take Yanwan as a concubine
        name = harem_politics.0010.a
		trigger = {
			allowed_more_concubines = yes
		}
		save_scope_as = actor
		save_scope_as = secondary_actor
		scope:yanwan = {
			if = {
				limit = {
					root = {
						any_consort = {
							is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
							count >= 3
						}
					}
				}
				set_variable = {
					name = favor
					value = initial_favor_valuation
				}
			}
			calyver_favor_minor_gain_effect = yes
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 10
			}
			add_character_flag = flag_yanwan
        	save_scope_as = recipient
        }
		scope:jia_fei = {
			calyver_favor_moderate_loss_effect = yes
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -15
			}
			add_opinion = {
				target = scope:yanwan
				modifier = hatred_spouse_opinion
			}
			add_character_flag = {
			flag = flag_scolded_consort
				years = 1
			}
			set_relation_potential_rival = scope:yanwan
		}
		calyver_concubine_on_accept_effect = yes
		make_concubine = scope:recipient
		stress_impact = {
			chaste = minor_stress_impact_gain 
			arrogant = minor_stress_impact_gain 
			paranoid = minor_stress_impact_gain 
			temperate = minor_stress_impact_gain 
			shy = minor_stress_impact_gain 
		}
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = -0.05
				ai_honor = -0.05
				ai_boldness = 0.1
				ai_greed = 0.1
   			}
            modifier = {
            	add = 10
            	opinion = {
            		target = scope:yanwan
            		value >= low_positive_opinion
            	}
            }
			modifier = {
            	add = 10
            	opinion = {
            		target = scope:yanwan
            		value >= medium_positive_opinion
            	}
            }
			compatibility_modifier = { #Trait compatibility
				who = root
				compatibility_target = scope:yanwan
				min = -20
				max = 20
				multiplier = 2
			}
			modifier = {	#Traits
				add = 15
				has_trait = generous
			}
            modifier = {	#Weight down for stress.
				add = 15
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = paranoid
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = arrogant
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = temperate
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = shy
			}
			modifier = {
				NOT = { root = { is_attracted_to_gender_of = scope:yanwan } }
				factor = 0
			}
        }
    }
	
	option = { #Reprimand Jia
        name = harem_politics.0010.b
		scope:jia_fei = {
			calyver_favor_moderate_loss_effect = yes
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -15
			}
			add_character_flag = {
			flag = flag_scolded_consort
				years = 1
			}
		}
		hidden_effect = {
			scope:yanwan = {
				death = {
					death_reason = death_vanished
				}
			}
		}
		stress_impact = {
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			lustful = minor_stress_impact_gain
		}
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = 0.05
				ai_honor = 0.05
   			}
            modifier = {
            	add = 10
            	opinion = {
            		target = scope:jia_fei
            		value <= low_negative_opinion
            	}
            }
			modifier = {
            	add = 10
            	opinion = {
            		target = scope:jia_fei
            		value <= medium_negative_opinion
            	}
            }

            modifier = {	#Weight down for stress.
				add = -25
				has_trait = forgiving
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = compassionate
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = lustful
			}
			modifier = {
				add = 15
				has_trait = temperate
			}
        }
    }
	
	option = { # Consort Jia is within her rights
        name = harem_politics.0010.c
		hidden_effect = {
			scope:yanwan = {
				death = {
					death_reason = death_vanished
				}
			}
		}
		scope:jia_fei = {
			calyver_favor_minor_gain_effect = yes
		}
        stress_impact = {
        	lustful = minor_stress_impact_gain
        }
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = 0.1
				ai_honor = 0.1
				ai_boldness = -0.05
				ai_greed = -0.05
   			}
            modifier = {
            	add = 10
            	opinion = {
            		target = scope:jia_fei
            		value >= low_positive_opinion
            	}
            }
			modifier = {
            	add = 10
            	opinion = {
            		target = scope:jia_fei
            		value >= medium_positive_opinion
            	}
            }
			modifier = {
            	add = 10
            	scope:jia_fei = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:jia_fei
					has_relation_soulmate = scope:jia_fei
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:jia_fei
					has_relation_friend = scope:jia_fei
            	}
            }
            modifier = {	#Weight down for stress.
				add = -25
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = vengeful
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = callous
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = sadistic
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = cynical
			}
        }
    }
	after = {
		add_character_flag = met_yanwan_jia_fei
	}
}

##############################
##Choosing a night companion##
##############################

scripted_trigger valid_consort_trigger = {
	is_courtier_of = root
	is_physically_able_ai_adult = yes
	NOR = {
		has_trait = pregnant
		has_trait = ill
		has_trait = wounded
		has_character_modifier = recently_tortured
		has_character_flag = flag_scolded_consort
		has_trait = eunuch
		has_trait = celibate
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_effect rejected_consort_effect = {
	if = {
		limit = {
			opinion = {
				target = scope:chosen_consort
				value <= 15
			}
			harem_politics_evil_consort_trigger = yes
			opinion = {
				target = root
				value >= -25
			}
			OR = {
				accepts_concubinage = yes
				accepts_polygamy = yes
			}
		}				
		add_opinion = {
			target = scope:chosen_consort
			modifier = jealousy_opinion
			opinion = -10
		}
		if = {
			limit = {
				NOR = {
					has_relation_best_friend = scope:chosen_consort
					has_relation_nemesis = scope:chosen_consort
					has_relation_rival = scope:chosen_consort
					has_relation_potential_rival = scope:chosen_consort
					has_relation_soulmate = scope:chosen_consort
				}
			}
			set_relation_potential_rival = scope:chosen_consort
		}
	}
}

scripted_effect chosen_consort_effect = {
	had_sex_with_effect = {
		CHARACTER = scope:chosen_consort
		PREGNANCY_CHANCE = pregnancy_chance
	}
	scope:chosen_consort = {
		random_list = {
			50 = { #Progress towards lovers
				simple_attraction_modifier = {
					WHO = scope:chosen_consort
					TARGET = root
					MAX_PERSONALITY = 50 # -50 at low trait combatibility, +150 at high trait combatibility.
					MAX_PHYSICAL = 50 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
				}
				opinion_modifier = {
					opinion_target = root
					min = -50
					max = 50
					multiplier = 0.5
				}
				opinion_modifier = {
					who = root
					opinion_target = scope:chosen_consort
					min = -50
					max = 50
					multiplier = 0.5
				}
				modifier = {
					NOT = { root = { is_attracted_to_gender_of = scope:chosen_consort } }
					factor = 0
				}
				modifier = {
					NOT = { is_attracted_to_gender_of = root }
					factor = 0
				}
				if = {
					limit = {
						NOR = {
							has_relation_lover = root
							has_relation_soulmate = root
							has_relation_potential_lover = root
						}
					}
					set_relation_potential_lover = root
				}
				add_opinion = {
					target = root
					modifier = romance_opinion
					opinion = 5
				}
				calyver_favor_minor_gain_effect = yes
			}
			50 = { #Nothing
				
			}
		}
	}
	if = {
		limit = {
			NOT = {
				is_attracted_to_gender_of = scope:chosen_consort
			}
		}
		add_stress = minor_stress_impact_gain
	}
	stress_impact = {
		chaste = minor_stress_impact_gain
		shy = minor_stress_impact_gain
	}
	hidden_effect = {
		scope:rejected_1 = {
			rejected_consort_effect = yes
		}
		scope:rejected_2 = {
			rejected_consort_effect = yes
		}
		if = {
			limit = {
				exists = scope:rejected_3
			}
			scope:rejected_3 = {
				rejected_consort_effect = yes
			}
		}
	}
}

scripted_effect deviant_consort_effect = {
	random_list = {
		50 = { #Progress towards lovers
			simple_attraction_modifier = {
				WHO = prev
				TARGET = root
				MAX_PERSONALITY = 50 # -50 at low trait combatibility, +150 at high trait combatibility.
				MAX_PHYSICAL = 50 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
			}
			opinion_modifier = {
				opinion_target = root
				min = -50
				max = 50
				multiplier = 0.5
			}
			modifier = {
				has_trait = lustful
				add = 50
			}
			modifier = {
				NOT = { is_attracted_to_gender_of = root }
				factor = 0
			}
			if = {
				limit = {
					NOR = {
						has_relation_lover = root
						has_relation_soulmate = root
						has_relation_potential_lover = root
					}
				}
				set_relation_potential_lover = root
			}
			add_opinion = {
				target = root
				modifier = romance_opinion
				opinion = 5
			}
			add_trait = deviant
			calyver_favor_minor_gain_effect = yes
		}
		50 = { #Disgust
			modifier = {
				has_trait = temperate
				add = 20
			}
			modifier = {
				has_trait = zealous
				add = 10
			}
			modifier = {
				has_trait = craven
				add = 10
			}
			modifier = {
				has_trait = chaste
				add = 25
			}
			modifier = {
				has_trait = shy
				add = 10
			}
			add_opinion = {
				target = root
				modifier = disgusted_opinion
				opinion = -25
			}
		}
		25 = { #Nothing
			modifier = {
				has_trait = brave
				add = 20
			}
			modifier = {
				has_trait = cynical
				add = 10
			}
		}
	}
}

harem_politics.0011 = {
	type = character_event
	title = harem_politics.0011.t
	desc = {
		desc = harem_politics.0011.start.desc
		first_valid = {
			triggered_desc = { #Any new consort?
				trigger = {
					OR = {
						scope:new_consort_1 = {
							has_character_flag = flag_new_consort
						}
						scope:new_consort_2 = {
							has_character_flag = flag_new_consort
						}
						scope:new_consort_3 = {
							has_character_flag = flag_new_consort
						}
						AND = {
							exists = scope:old_consort
							scope:old_consort = {
								has_character_flag = flag_new_consort
							}
						}
					}
				}
				desc = harem_politics.0011.new_consort.desc
			}
			triggered_desc = {
				desc = harem_politics.0011.generic.desc
			}
		}
		desc = harem_politics.0011.end.desc
	}
	theme = family
	override_background = {
		reference = bedchamber
	}
	
	left_portrait  = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:new_consort_1
		animation = flirtation
	}
	lower_left_portrait = {
		character = scope:new_consort_2
	}
	lower_center_portrait = {
		trigger = {
			exists = scope:old_consort
		}
		character = scope:old_consort
	}
	lower_right_portrait = {
		character = scope:new_consort_3
	}
	
	trigger = {
		any_consort = {
			valid_consort_trigger = yes
			count >= 3
		}
		NOR = {
			has_character_flag = chosen_night_companion
			has_trait = eunuch
			has_trait = celibate
	    }
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
	}
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			highest_held_title_tier >= tier_kingdom
		}
		modifier = {
			add = -0.5
			has_trait = chaste
		}
		modifier = {
			add = 0.1
			has_trait = lustful
		}
		modifier = {
			add = 0.2
			any_child = {
				count <= 1
			}
		}
		modifier = {
			add = -0.4
			age >= 45
		}
	}
	
	immediate = {
		save_scope_as = harem_liege
		every_consort = {
			limit = {
				valid_consort_trigger = yes
			}
			add_to_list = night_companions
		}
		
		random_in_list = {
			list = night_companions
			weight = {
				base = 10
				modifier = {
					exists = root.primary_spouse
					this = root.primary_spouse
					add = 10
				}
				modifier = {
					has_court_position = grand_consort_court_position
					add = 5
				}
				modifier = {
					NOR = {
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_modifier = demoted_spouse_modifier
					}
					add = 50
				}
				modifier = {
					has_character_flag = flag_new_consort
					add = 30
				}
				modifier = {
					is_lowborn = no
					add = 5
				}
				modifier = {
					add = 10
					age <= 40
				}
				modifier = {
					is_married = yes
					add = 15
				}
				modifier = {
					NOR = {
						has_trait = one_eyed
						has_trait = scarred
						has_trait = one_legged
						has_trait = disfigured
						has_trait = scaly
						has_trait = albino
						has_trait = dwarf
						has_trait = hunchbacked
						has_trait = maimed
						has_trait = spindly
						has_trait = beauty_bad_1
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
						has_trait = giant
					}
					add = 50
				}
				modifier = {
					any_close_family_member = {
						is_vassal_of = root
					}
					add = 20
				}
				modifier = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
						}
					}
					add = 20
				}
				modifier = {
					OR = {
						has_trait = beauty_good_1
						has_trait = beauty_good_2
						has_trait = beauty_good_3
					}
					add = 20
				}
				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 10
				}
			}
			save_scope_as = new_consort_1
		}
		random_in_list = {
			list = night_companions
			limit = {
				NOT = {
					this = scope:new_consort_1
				}
			}
			weight = {
				base = 10
				modifier = {
					exists = root.primary_spouse
					this = root.primary_spouse
					add = 10
				}
				modifier = {
					has_court_position = grand_consort_court_position
					add = 5
				}
				modifier = {
					NOR = {
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_modifier = demoted_spouse_modifier
					}
					add = 50
				}
				modifier = {
					has_character_flag = flag_new_consort
					add = 30
				}
				modifier = {
					is_lowborn = no
					add = 5
				}
				modifier = {
					add = 10
					age <= 40
				}
				modifier = {
					is_married = yes
					add = 15
				}
				modifier = {
					NOR = {
						has_trait = one_eyed
						has_trait = scarred
						has_trait = one_legged
						has_trait = disfigured
						has_trait = scaly
						has_trait = albino
						has_trait = dwarf
						has_trait = hunchbacked
						has_trait = maimed
						has_trait = spindly
						has_trait = beauty_bad_1
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
						has_trait = giant
					}
					add = 50
				}
				modifier = {
					any_close_family_member = {
						is_vassal_of = root
					}
					add = 20
				}
				modifier = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
						}
					}
					add = 20
				}
				modifier = {
					OR = {
						has_trait = beauty_good_1
						has_trait = beauty_good_2
						has_trait = beauty_good_3
					}
					add = 20
				}
				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 10
				}
			}
			save_scope_as = new_consort_2
		}
		random_in_list = {
			list = night_companions
			limit = {
				NOR = {
					this = scope:new_consort_1
					this = scope:new_consort_2
				}
			}
			weight = {
				base = 10
				modifier = {
					NOR = {
						has_character_modifier = demoted_primary_spouse_modifier
						has_character_modifier = demoted_spouse_modifier
					}
					add = 50
				}
				modifier = {
					has_character_flag = flag_new_consort
					add = 50
				}
				modifier = {
					is_lowborn = no
					add = 5
				}
				modifier = {
					add = 10
					age <= 40
				}
				modifier = {
					is_married = yes
					add = 15
				}
				modifier = {
					NOR = {
						has_trait = one_eyed
						has_trait = scarred
						has_trait = one_legged
						has_trait = disfigured
						has_trait = scaly
						has_trait = albino
						has_trait = dwarf
						has_trait = hunchbacked
						has_trait = maimed
						has_trait = spindly
						has_trait = beauty_bad_1
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
						has_trait = giant
					}
					add = 50
				}
				modifier = {
					any_close_family_member = {
						is_vassal_of = root
					}
					add = 20
				}
				modifier = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
						}
					}
					add = 20
				}
				modifier = {
					OR = {
						has_trait = beauty_good_1
						has_trait = beauty_good_2
						has_trait = beauty_good_3
					}
					add = 20
				}
				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 10
				}
			}
			save_scope_as = new_consort_3
		}
		if = {
			limit = {
				any_consort = {
					AND = {
						valid_consort_trigger = yes
						NOR = {
							this = scope:new_consort_1
							this = scope:new_consort_2
							this = scope:new_consort_3
						}
					}
				}
			}
			random_consort = {
				limit = {
					AND = {
						valid_consort_trigger = yes
						NOR = {
							this = scope:new_consort_1
							this = scope:new_consort_2
							this = scope:new_consort_3
						}
					}
				}
				weight = {
					base = 10
					modifier = {
						NOR = {
							has_character_modifier = demoted_primary_spouse_modifier
							has_character_modifier = demoted_spouse_modifier
						}
						add = 50
					}
					modifier = {
						is_lowborn = no
						add = 5
					}
					modifier = {
						add = 20
						age <= 40
					}
					modifier = {
						is_married = yes
						add = 20
					}
					modifier = {
						NOR = {
							has_trait = one_eyed
							has_trait = scarred
							has_trait = one_legged
							has_trait = disfigured
							has_trait = scaly
							has_trait = albino
							has_trait = dwarf
							has_trait = hunchbacked
							has_trait = maimed
							has_trait = spindly
							has_trait = beauty_bad_1
							has_trait = beauty_bad_2
							has_trait = beauty_bad_3
							has_trait = giant
						}
						add = 50
					}
					modifier = {
						any_close_family_member = {
							is_vassal_of = root
						}
						add = 20
					}
					modifier = {
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								is_liege_or_above_of = root
							}
						}
						add = 20
					}
					modifier = {
						OR = {
							has_trait = beauty_good_1
							has_trait = beauty_good_2
							has_trait = beauty_good_3
						}
						add = 20
					}
					modifier = {
						has_character_modifier = favored_consort_modifier
						add = 20
					}
					modifier = {
						this = root.primary_spouse
						add = 35
					}
					modifier = {
						is_grand_consort_trigger = yes
						add = 15
					}
				}
				save_scope_as = old_consort
			}
		}
	}
	
	option = { # Lay with first consort
        name = harem_politics.0011.a
		scope:new_consort_1 = {
			save_scope_as = chosen_consort
		}
		scope:new_consort_2 = {
			save_scope_as = rejected_1
		}
		scope:new_consort_3 = {
			save_scope_as = rejected_2
		}
		if = {
			limit = {
				exists = scope:old_consort
			}
			scope:old_consort = {
				save_scope_as = rejected_3
			}
		}
		chosen_consort_effect = yes
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			opinion_modifier = {
				opinion_target = scope:new_consort_1
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:new_consort_1
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}
			modifier = {
            	add = 10
            	scope:new_consort_1 = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 20
            	scope:new_consort_1 = {
            		this = root.primary_spouse
            	}
            }
			modifier = {
            	add = 15
            	scope:new_consort_1 = {
            		is_grand_consort_trigger = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:new_consort_1 = {
            		is_married = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:new_consort_1 = {
            		fertility >= medium_fertility
            	}
            }
			modifier = {
            	add = -20
            	scope:new_consort_1 = {
            		age >= 30
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:new_consort_1
					has_relation_soulmate = scope:new_consort_1
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:new_consort_1
					has_relation_friend = scope:new_consort_1
            	}
            }
            modifier = {	#Weight down for stress.
				add = 15
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = rakish
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = deviant
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = shy
			}
			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:new_consort_1
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:new_consort_1
				}
			}
			modifier = {
				add = 15
				any_child = {
					count <= 1
				}
			}
        }
    }
	
	option = { # Lay with second consort
        name = harem_politics.0011.b
		scope:new_consort_1 = {
			save_scope_as = rejected_1
		}
		scope:new_consort_2 = {
			save_scope_as = chosen_consort
		}
		scope:new_consort_3 = {
			save_scope_as = rejected_2
		}
		if = {
			limit = {
				exists = scope:old_consort
			}
			scope:old_consort = {
				save_scope_as = rejected_3
			}
		}
		chosen_consort_effect = yes
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			opinion_modifier = {
				opinion_target = scope:new_consort_2
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:new_consort_2
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}
			modifier = {
            	add = 10
            	scope:new_consort_2 = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 20
            	scope:new_consort_2 = {
            		this = root.primary_spouse
            	}
            }
			modifier = {
            	add = 15
            	scope:new_consort_2 = {
            		is_grand_consort_trigger = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:new_consort_2 = {
            		is_married = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:new_consort_2 = {
            		fertility >= medium_fertility
            	}
            }
			modifier = {
            	add = -20
            	scope:new_consort_2 = {
            		age >= 30
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:new_consort_2
					has_relation_soulmate = scope:new_consort_2
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:new_consort_2
					has_relation_friend = scope:new_consort_2
            	}
            }
            modifier = {	#Weight down for stress.
				add = 15
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = rakish
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = deviant
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = shy
			}
			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:new_consort_2
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:new_consort_2
				}
			}
			modifier = {
				add = 15
				any_child = {
					count <= 1
				}
			}
        }
    }
	
	option = { # Lay with third consort
        name = harem_politics.0011.c
		scope:new_consort_1 = {
			save_scope_as = rejected_1
		}
		scope:new_consort_2 = {
			save_scope_as = rejected_2
		}
		scope:new_consort_3 = {
			save_scope_as = chosen_consort
		}
		if = {
			limit = {
				exists = scope:old_consort
			}
			scope:old_consort = {
				save_scope_as = rejected_3
			}
		}
		chosen_consort_effect = yes
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			opinion_modifier = {
				opinion_target = scope:new_consort_3
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:new_consort_3
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}
			modifier = {
            	add = 10
            	scope:new_consort_3 = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 20
            	scope:new_consort_3 = {
            		this = root.primary_spouse
            	}
            }
			modifier = {
            	add = 15
            	scope:new_consort_3 = {
            		is_grand_consort_trigger = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:new_consort_3 = {
            		is_married = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:new_consort_3 = {
            		fertility >= medium_fertility
            	}
            }
			modifier = {
            	add = -20
            	scope:new_consort_3 = {
            		age >= 30
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:new_consort_3
					has_relation_soulmate = scope:new_consort_3
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:new_consort_3
					has_relation_friend = scope:new_consort_3
            	}
            }
            modifier = {	#Weight down for stress.
				add = 15
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = rakish
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = deviant
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = shy
			}
			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:new_consort_3
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:new_consort_3
				}
			}
			modifier = {
				add = 15
				any_child = {
					count <= 1
				}
			}
        }
    }

	option = { # Lay with fourth consort
        name = harem_politics.0011.d
		trigger = {
			exists = scope:old_consort
		}
		scope:new_consort_1 = {
			save_scope_as = rejected_1
		}
		scope:new_consort_2 = {
			save_scope_as = rejected_2
		}
		scope:new_consort_3 = {
			save_scope_as = rejected_3
		}
		scope:old_consort = {
			save_scope_as = chosen_consort
		}
		chosen_consort_effect = yes
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			opinion_modifier = {
				opinion_target = scope:old_consort
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:old_consort
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}
			modifier = {
            	add = 10
            	scope:old_consort = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 20
            	scope:old_consort = {
            		this = root.primary_spouse
            	}
            }
			modifier = {
            	add = 15
            	scope:old_consort = {
            		is_grand_consort_trigger = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:old_consort = {
            		is_married = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:old_consort = {
            		fertility >= medium_fertility
            	}
            }
			modifier = {
            	add = -20
            	scope:old_consort = {
            		age >= 30
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:old_consort
					has_relation_soulmate = scope:old_consort
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:old_consort
					has_relation_friend = scope:old_consort
            	}
            }
            modifier = {	#Weight down for stress.
				add = 15
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = rakish
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = deviant
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = shy
			}
			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:old_consort
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:old_consort
				}
			}
			modifier = {
				add = 15
				any_child = {
					count <= 1
				}
			}
        }
    }
	
	option = { # Lay with all of them!
		name = harem_politics.0011.e
		flavor = harem_politics.0011.e_tt
		trait = deviant
		trigger = {
			has_trait = deviant
		}
		had_sex_with_effect = {
			CHARACTER = scope:new_consort_1
			PREGNANCY_CHANCE = pregnancy_chance
		}
		had_sex_with_effect = {
			CHARACTER = scope:new_consort_2
			PREGNANCY_CHANCE = pregnancy_chance
		}
		had_sex_with_effect = {
			CHARACTER = scope:new_consort_3
			PREGNANCY_CHANCE = pregnancy_chance
		}
		if = {
			limit = {
				exists = scope:old_consort
			}
			had_sex_with_effect = {
				CHARACTER = scope:old_consort
				PREGNANCY_CHANCE = pregnancy_chance
			}
		}
		hidden_effect = {
			scope:new_consort_1 = {
				deviant_consort_effect = yes
			}
			scope:new_consort_2 = {
				deviant_consort_effect = yes
			}
			scope:new_consort_3 = {
				deviant_consort_effect = yes
			}
			if = {
				limit = {
					exists = scope:old_consort
				}
				scope:old_consort = {
					deviant_consort_effect = yes
				}
			}
		}
		stress_impact = {
			deviant = miniscule_stress_impact_loss
			rakish = minor_stress_impact_loss
			chaste = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
		}
		ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
				ai_boldness = 0.35
				ai_zeal = -0.20
   			}
            modifier = {	#Weight down for stress.
				add = 25
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = 50
				has_trait = deviant
			}
			modifier = {	#Weight down for stress.
				add = 25
				has_trait = rakish
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = shy
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = temperate
			}
			modifier = {
				add = 45
				any_child = {
					count = 0
				}
			}
        }
	}
	
	option = { # I'd rather stay in bed
        name = harem_politics.0011.f
		random_list = {
			50 = {
				modifier = { #Traits
					add = 10
					has_trait = lazy
				}
				modifier = { #Traits
					add = 10
					has_trait = trusting
				}
				modifier = { #Traits
					add = 5
					has_trait = shy
				}
				modifier = { #Traits
					add = 10
					has_trait = calm
				}
				modifier = { #Energy
					add = 10
					ai_energy <= low_positive_energy
				}
				modifier = { #Stress
					add = 10
					stress >= normal_baseline_stress
				}
				add_character_modifier = {
					modifier = well_rested_modifier
					years = 1
				}
			}
			50 = { #Nothing
				modifier = { #Traits
					add = 10
					has_trait = paranoid
				}
				modifier = { #Traits
					add = 10
					has_trait = diligent
				}
				modifier = { #Traits
					add = 10
					has_trait = ambitious
				}
				modifier = { #Traits
					add = 10
					has_trait = impatient
				}
				modifier = { #Energy
					add = 10
					ai_energy > low_positive_energy
				}
				modifier = { #Stress
					add = 10
					stress < normal_baseline_stress
				}
			}
		}
        stress_impact = {
        	chaste = minor_stress_impact_loss
			lazy = medium_stress_impact_loss
			lustful = minor_stress_impact_gain
			rakish = minor_stress_impact_gain
			deviant = minor_stress_impact_gain
        }
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = -0.10
				ai_energy = -0.35
   			}
            modifier = {	#Weight down for stress.
				add = -25
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = deviant
			}
			modifier = {	#Weight down for stress.
				add = 20
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = 20
				has_trait = lazy
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = shy
			}
			modifier = {
				add = 15
				any_child = {
					count >= 4
				}
			}
        }
    }
	after = {
		add_character_flag = {
			flag = chosen_night_companion
			years = 4
		}
	}
}

#################################
##Poisoning an unwanted consort##
#################################
scripted_trigger unwanted_consort_trigger = {
	save_temporary_scope_as = reference_unwanted_consort
	OR = {
		any_close_family_member = {
			OR = {
				is_powerful_vassal_of = root
				is_councillor_of = root
				is_liege_or_above_of = root
			
			}
			NOT = {
				is_child_of = root
			}
		}
		num_of_bad_genetic_traits > 0
		has_relation_nemesis = root
		has_relation_rival = root
		any_secret = {
			exists = secret_owner
			is_known_by = root
			is_criminal_for = secret_owner
		}
		root = {
			has_imprisonment_reason = scope:reference_unwanted_consort
		}
	}
	age <= 44
	is_courtier_of = root
	is_physically_able_ai_adult = yes
	NOR = {
		has_trait = pregnant
		has_character_modifier = hua_fei_fragrance
		has_character_modifier = shu_fei_conception_medicine
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

harem_politics.0012 = {
	type = character_event
	title = harem_politics.0012.t
	desc = {
		desc = harem_politics.0012.start.desc
		first_valid = {
			triggered_desc = { #Do they have a powerful background?
				trigger = {
					scope:unwanted_consort = {
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								is_liege_or_above_of = root
							}
						}
					}
				}
				desc = harem_politics.0012.powerful_consort.desc
			}
			triggered_desc = { #Negative traits
				trigger = {
					scope:unwanted_consort = {
						num_of_bad_genetic_traits >= 1
					}
				}
				desc = harem_politics.0012.negative_traits.desc
			}
			triggered_desc = { #Criminal
				trigger = {
					OR = {
						has_imprisonment_reason = scope:unwanted_consort
						scope:unwanted_consort = {
							any_secret = {
								exists = secret_owner
								is_known_by = root
								is_criminal_for = secret_owner
							}
						}
					}
				}
				desc = harem_politics.0012.criminal.desc
			}
			triggered_desc = { #Rival
				trigger = {
					OR = {
						has_relation_nemesis = scope:unwanted_consort
						has_relation_rival = scope:unwanted_consort
						has_relation_potential_rival = scope:unwanted_consort
					}
				}
				desc = harem_politics.0012.rival.desc
			}
		}
		desc = harem_politics.0012.end.desc
	}
	theme = family
	override_background = {
		reference = study
	}
	
	left_portrait  = {
		character = root
		animation = scheme
	}
	right_portrait = {
		character = scope:unwanted_consort
		animation = admiration
	}
	
	trigger = {
		any_consort = {
			unwanted_consort_trigger = yes
		}
		NOT = {
			has_character_flag = poisoned_a_consort_flag
	    }
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
	}
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.2
			highest_held_title_tier >= tier_kingdom
		}
		modifier = {
			add = -0.2
			any_child = {
				count <= 2
			}
		}
		modifier = {
			add = 0.2
			has_trait = paranoid
		}
		modifier = {
			add = -0.4
			has_trait = trusting
		}
	}
	
	immediate = {
		save_scope_as = harem_liege
		every_consort = {
			limit = {
				unwanted_consort_trigger = yes
			}
			add_to_list = unwanted_consort_list
		}
		
		random_in_list = {
			list = unwanted_consort_list
			weight = {
				base = 10
				modifier = {
					has_character_flag = flag_new_consort
					add = 50
				}
				modifier = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_liege_or_above_of = root
						}
					}
					add = 30
				}
				modifier = {
					any_close_family_member = {
						is_councillor_of = root
					}
					add = 20
				}
				modifier = {
					num_of_bad_genetic_traits > 0
					add = 1
				}
				modifier = {
					num_of_bad_genetic_traits > 1
					add = 20
				}
				modifier = {
					any_close_family_member = {
						OR = {
							has_relation_nemesis = root
							has_relation_rival = root
							has_relation_potential_rival = root
						}
					}
					add = 20
				}
				modifier = {
					OR = {
						has_relation_nemesis = root
						has_relation_rival = root
						has_relation_potential_rival = root
					}
					add = 20
				}
				modifier = {
					NOT = {
						this = root.primary_spouse
					}
					add = 25
				}
				modifier = {
					has_character_modifier = favored_consort_modifier
					add = -10
				}
			}
			save_scope_as = unwanted_consort
		}
	}
	
	option = { # Consort Shu's medicine
        name = harem_politics.0012.a
		duel = {
			target = scope:unwanted_consort
			skill = intrigue
			60 = {
				compare_modifier = {
					value = scope:duel_value
				}
				scope:unwanted_consort = {
					calyver_favor_medium_gain_effect = yes
					add_character_modifier = {
						modifier = shu_fei_conception_medicine
						years = 4
					}
					if = {
						limit = {
							opinion = {
								target = root
								value >= -10
							}
						}
						add_opinion = {
							target = root
							modifier = romance_opinion
							opinion = 5
						}
						if = {
							limit = { can_set_relation_potential_lover_trigger = { CHARACTER = root } }
							set_relation_potential_lover = root
						}
					}
				}
				hidden_effect = {
					if = {
						limit = {
							any_consort = {
								AND = {
									NOR = {
										has_trait = forgiving
										has_trait = content
										has_trait = compassionate
										this = scope:unwanted_consort
									}
									OR = {
										accepts_concubinage = yes
										accepts_polygamy = yes
									}
									opinion = {
										target = root
										value >= -10
									}
									opinion = {
										target = scope:unwanted_consort
										value <= 20
									}
								}
								count >= 1
							}
						}
						every_consort = {
							limit = {
								AND = {
									NOR = {
										has_trait = forgiving
										has_trait = content
										has_trait = compassionate
										this = scope:unwanted_consort
									}
									OR = {
										accepts_concubinage = yes
										accepts_polygamy = yes
									}
									opinion = {
										target = root
										value >= -10
									}
									opinion = {
										target = scope:unwanted_consort
										value <= 20
									}
								}
							}
							add_opinion = {
								target = scope:unwanted_consort
								modifier = jealousy_opinion
								opinion = -5
							}
						}
					}
				}
			}
			20 = {
				desc = harem_politics.0012.a.defeat
				compare_modifier = {
					value = scope:duel_value
				}
				modifier = { #Traits
					add = 50
					scope:unwanted_consort = {
						has_trait = lifestyle_herbalist
					}
				}
				scope:unwanted_consort = {
					calyver_favor_medium_loss_effect = yes
					add_opinion = {
						target = root
						modifier = suspicion_opinion
						opinion = -15
					}
					if = {
						limit = {
							any_close_family_member = {
								NOR = { 
									this = scope:unwanted_consort
									this = root
								}
								count >= 1
							}
						}
						every_close_family_member = {
							limit = { 
								NOR = { 
									this = scope:unwanted_consort
									this = root
								} 
							}
							custom = all_family_members
							add_opinion = {
								target = root
								modifier = suspicion_opinion
								opinion = -10
							}
						}
					}
				}
			}
			20 = {
				desc = harem_politics.0012.a.defeat_1
				compare_modifier = {
					value = scope:duel_value
				}
			}
		}
		stress_impact = {
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			honest = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
		}
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_honor = -0.15
				ai_compassion = -0.15
				ai_boldness = 0.20
   			}
			opinion_modifier = {
				opinion_target = scope:unwanted_consort
				multiplier = -0.20
				min = -10
				max = 10
			}
			modifier = {
            	add = 20
            	intrigue > medium_skill_rating
            }
			modifier = {
            	add = -25
            	has_trait = trusting
            }
			modifier = {
            	add = 10
            	has_trait = paranoid
            }
			modifier = {
            	add = -25
            	has_trait = compassionate
            }
			modifier = {
            	add = -25
            	has_trait = forgiving
            }
			modifier = {
            	add = -25
            	has_trait = honest
            }
			modifier = {
            	add = 20
            	scope:unwanted_consort = {
            		intrigue < medium_skill_rating
            	}
            }
			modifier = {
            	add = -10
            	scope:unwanted_consort = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 20
            	scope:unwanted_consort = {
            		num_of_bad_genetic_traits = 1
            	}
            }
			modifier = {
            	add = -20
            	scope:unwanted_consort = {
            		this = root.primary_spouse
            	}
            }
			modifier = {
            	add = -10
            	scope:unwanted_consort = {
            		is_grand_consort_trigger = yes
            	}
            }
			modifier = {
            	add = -10
            	scope:unwanted_consort = {
            		is_married = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:unwanted_consort = {
            		any_close_family_member = {
						is_vassal_of = root
					}
            	}
            }
			modifier = {
            	add = 15
            	scope:unwanted_consort = {
            		any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_liege_or_above_of = root
						}
					}
            	}
            }
			modifier = {
            	add = 15
            	scope:unwanted_consort = {
            		any_close_family_member = {
						OR = {
							has_relation_nemesis = root
							has_relation_rival = root
							has_relation_potential_rival = root
						}
					}
            	}
            }
			modifier = {
            	add = 15
				OR = {
					scope:unwanted_consort = {
						OR = {
							has_relation_nemesis = root
							has_relation_rival = root
							has_relation_potential_rival = root
							any_secret = {
								exists = secret_owner
								is_known_by = root
								is_criminal_for = secret_owner
							}
						}
					}
					has_imprisonment_reason = scope:unwanted_consort
				}
            }
			modifier = {
            	add = -25
            	OR = {
            		has_relation_lover = scope:unwanted_consort
					has_relation_soulmate = scope:unwanted_consort
            	}
            }
			modifier = {
            	add = -15
            	OR = {
            		has_relation_best_friend = scope:unwanted_consort
					has_relation_friend = scope:unwanted_consort
            	}
            }
			modifier = {
				add = -20
				any_child = {
					count <= 1
				}
			}
        }
    }
	
	option = { # Consort Hua's incense
        name = harem_politics.0012.b
		duel = {
			target = scope:unwanted_consort
			skill = intrigue
			150 = {
				compare_modifier = {
					value = scope:duel_value
				}
				scope:unwanted_consort = {
					calyver_favor_huge_gain_effect = yes
					add_character_modifier = {
						modifier = hua_fei_fragrance
						years = 4
					}
					if = {
						limit = {
							opinion = {
								target = root
								value >= -10
							}
						}
						add_opinion = {
							target = root
							modifier = romance_opinion
							opinion = 5
						}
						if = {
							limit = { can_set_relation_potential_lover_trigger = { CHARACTER = root } }
							set_relation_potential_lover = root
						}
					}
				}
				hidden_effect = {
					if = {
						limit = {
							any_consort = {
								AND = {
									NOR = {
										has_trait = forgiving
										has_trait = content
										has_trait = compassionate
										this = scope:unwanted_consort
									}
									OR = {
										accepts_concubinage = yes
										accepts_polygamy = yes
									}
									opinion = {
										target = root
										value >= -10
									}
									opinion = {
										target = scope:unwanted_consort
										value <= 20
									}
								}
								count >= 1
							}
						}
						every_consort = {
							limit = {
								AND = {
									NOR = {
										has_trait = forgiving
										has_trait = content
										has_trait = compassionate
										this = scope:unwanted_consort
									}
									OR = {
										accepts_concubinage = yes
										accepts_polygamy = yes
									}
									opinion = {
										target = root
										value >= -10
									}
									opinion = {
										target = scope:unwanted_consort
										value <= 20
									}
								}
							}
							add_opinion = {
								target = scope:unwanted_consort
								modifier = jealousy_opinion
								opinion = -10
							}
						}
					}
				}
			}
			40 = {
				desc = harem_politics.0012.b.defeat
				compare_modifier = {
					value = scope:duel_value
				}
				modifier = { #Traits
					add = 100
					scope:unwanted_consort = {
						has_trait = lifestyle_herbalist
					}
				}
				scope:unwanted_consort = {
					calyver_favor_medium_loss_effect = yes
					add_opinion = {
						target = root
						modifier = suspicion_opinion
						opinion = -15
					}
					if = {
						limit = {
							any_close_family_member = {
								NOR = { 
									this = scope:unwanted_consort
									this = root
								}
								count >= 1
							}
						}
						every_close_family_member = {
							limit = { 
								NOR = { 
									this = scope:unwanted_consort
									this = root
								} 
							}
							custom = all_family_members
							add_opinion = {
								target = root
								modifier = suspicion_opinion
								opinion = -10
							}
						}
					}
				}
			}
			40 = {
				show_as_tooltip = { #we wanna show this
					scope:unwanted_consort = {
						death = { death_reason = death_mysterious }
					}
					add_secret = {
						type = secret_murder
						target = scope:unwanted_consort
					}
				}
				hidden_effect = { #this does the effect
					unknown_murder_effect = {
						VICTIM = scope:unwanted_consort
						MURDERER = root
						REASON = death_mysterious
					}
				}
			}
			40 = {
				desc = harem_politics.0012.b.defeat_1
				compare_modifier = {
					value = scope:duel_value
				}
			}
		}
		stress_impact = {
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			honest = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
		}
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_honor = -0.15
				ai_compassion = -0.15
				ai_boldness = 0.30
   			}
			opinion_modifier = {
				opinion_target = scope:unwanted_consort
				multiplier = -0.30
			}
			modifier = {
            	add = 10
            	has_trait = paranoid
            }
			modifier = {
            	add = -25
            	has_trait = compassionate
            }
			modifier = {
            	add = -25
            	has_trait = trusting
            }
			modifier = {
            	add = -25
            	has_trait = forgiving
            }
			modifier = {
            	add = -25
            	has_trait = honest
            }
			modifier = {
            	add = 20
            	intrigue >= high_skill_rating
            }
			modifier = {
            	add = 20
            	scope:unwanted_consort = {
            		intrigue < medium_skill_rating
            	}
            }
			modifier = {
            	add = -20
            	scope:unwanted_consort = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 20
            	scope:unwanted_consort = {
            		num_of_bad_genetic_traits = 1
            	}
            }
			modifier = {
            	add = 20
            	scope:unwanted_consort = {
            		num_of_bad_genetic_traits >= 2
            	}
            }
			modifier = {
            	add = -25
            	scope:unwanted_consort = {
            		this = root.primary_spouse
            	}
            }
			modifier = {
            	add = -15
            	scope:unwanted_consort = {
            		is_grand_consort_trigger = yes
            	}
            }
			modifier = {
            	add = -15
            	scope:unwanted_consort = {
            		is_married = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:unwanted_consort = {
            		any_close_family_member = {
						is_vassal_of = root
					}
            	}
            }
			modifier = {
            	add = -15
            	scope:unwanted_consort = {
            		any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_liege_or_above_of = root
						}
					}
            	}
            }
			modifier = {
            	add = 20
            	scope:unwanted_consort = {
            		any_close_family_member = {
						OR = {
							has_relation_nemesis = root
							has_relation_rival = root
							has_relation_potential_rival = root
						}
					}
            	}
            }
			modifier = {
            	add = 20
				OR = {
					scope:unwanted_consort = {
						OR = {
							has_relation_nemesis = root
							has_relation_rival = root
							has_relation_potential_rival = root
							any_secret = {
								exists = secret_owner
								is_known_by = root
								is_criminal_for = secret_owner
							}
						}
					}
					has_imprisonment_reason = scope:unwanted_consort
				}
            }
			modifier = {
            	add = -35
            	OR = {
            		has_relation_lover = scope:unwanted_consort
					has_relation_soulmate = scope:unwanted_consort
            	}
            }
			modifier = {
            	add = -30
            	OR = {
            		has_relation_best_friend = scope:unwanted_consort
					has_relation_friend = scope:unwanted_consort
            	}
            }
			modifier = {
				add = -25
				any_child = {
					count <= 1
				}
			}
        }
    }
	
	option = { # I'll just stop seeing them
        name = harem_politics.0012.c
		scope:unwanted_consort = {
			calyver_favor_huge_loss_effect = yes
			add_character_modifier = {
				modifier = rejected_from_marriage_bed_modifier
				years = 10
			}
			if = {
				limit = {
					opinion = {
						target = root
						value >= 0
					}
				}
				add_opinion = {
					target = root
					modifier = insult_opinion
					opinion = -15
				}
			}
		}
		stress_impact = {
			lustful = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			chaste = minor_stress_impact_loss
			trusting = minor_stress_impact_gain
		}
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_vengefulness = -0.10
				ai_honor = 0.15
				ai_compassion = -0.15
				ai_boldness = 0.10
   			}
			opinion_modifier = {
				opinion_target = scope:unwanted_consort
				multiplier = -0.30
			}
			modifier = {
            	add = -25
            	has_trait = trusting
            }
			modifier = {
            	add = -25
            	has_trait = compassionate
            }
			modifier = {
            	add = -25
            	has_trait = forgiving
            }
			modifier = {
            	add = 15
            	has_trait = chaste
            }
			modifier = {
            	add = -25
            	has_trait = lustful
            }
			modifier = {
            	add = 10
            	has_trait = paranoid
            }
			modifier = {
            	add = -10
            	scope:unwanted_consort = {
            		is_lowborn = no
            	}
            }
			modifier = {
            	add = -40
            	scope:unwanted_consort = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 20
            	scope:unwanted_consort = {
            		num_of_bad_genetic_traits = 1
            	}
            }
			modifier = {
            	add = 20
            	scope:unwanted_consort = {
            		num_of_bad_genetic_traits >= 2
            	}
            }
			modifier = {
            	add = -35
            	scope:unwanted_consort = {
            		this = root.primary_spouse
            	}
            }
			modifier = {
            	add = -20
            	scope:unwanted_consort = {
            		is_grand_consort_trigger = yes
            	}
            }
			modifier = {
            	add = -15
            	scope:unwanted_consort = {
            		is_married = yes
            	}
            }
			modifier = {
            	add = -10
            	scope:unwanted_consort = {
            		any_close_family_member = {
						is_vassal_of = root
					}
            	}
            }
			modifier = {
            	add = -20
            	scope:unwanted_consort = {
            		any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_liege_or_above_of = root
						}
					}
            	}
            }
			modifier = {
            	add = 10
            	scope:unwanted_consort = {
            		any_close_family_member = {
						OR = {
							has_relation_nemesis = root
							has_relation_rival = root
							has_relation_potential_rival = root
						}
					}
            	}
            }
			modifier = {
            	add = 10
				OR = {
					scope:unwanted_consort = {
						OR = {
							has_relation_nemesis = root
							has_relation_rival = root
							has_relation_potential_rival = root
							any_secret = {
								exists = secret_owner
								is_known_by = root
								is_criminal_for = secret_owner
							}
						}
					}
					has_imprisonment_reason = scope:unwanted_consort
				}
            }
			modifier = {
            	add = -35
            	OR = {
            		has_relation_lover = scope:unwanted_consort
					has_relation_soulmate = scope:unwanted_consort
            	}
            }
			modifier = {
            	add = -35
            	OR = {
            		has_relation_best_friend = scope:unwanted_consort
					has_relation_friend = scope:unwanted_consort
            	}
            }
			modifier = {
				add = -25
				any_child = {
					count <= 1
				}
			}
        }
    }
	
	option = { #Forget it
		name = harem_politics.0012.d
		stress_impact = {
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_vengefulness = -0.10
				ai_honor = 0.15
				ai_compassion = 0.15
				ai_boldness = -0.10
   			}
			opinion_modifier = {
				opinion_target = scope:unwanted_consort
				multiplier = 0.30
			}
			modifier = {
            	add = -25
            	has_trait = paranoid
            }
			modifier = {
            	add = 25
            	has_trait = trusting
            }
			modifier = {
            	add = 15
            	scope:unwanted_consort = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 10
            	scope:unwanted_consort = {
            		num_of_bad_genetic_traits = 0
            	}
            }
			modifier = {
            	add = 20
            	scope:unwanted_consort = {
            		num_of_good_genetic_traits >= 1
            	}
            }
			modifier = {
            	add = 15
            	scope:unwanted_consort = {
            		this = root.primary_spouse
            	}
            }
			modifier = {
            	add = 10
            	scope:unwanted_consort = {
            		is_grand_consort_trigger = yes
            	}
            }
			modifier = {
            	add = 5
            	scope:unwanted_consort = {
            		is_married = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:unwanted_consort = {
            		any_close_family_member = {
						is_vassal_of = root
					}
            	}
            }
			modifier = {
            	add = -20
            	scope:unwanted_consort = {
            		any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_liege_or_above_of = root
						}
					}
            	}
            }
			modifier = {
            	add = -10
            	scope:unwanted_consort = {
            		any_close_family_member = {
						OR = {
							has_relation_nemesis = root
							has_relation_rival = root
							has_relation_potential_rival = root
						}
					}
            	}
            }
			modifier = {
            	add = -20
				OR = {
					scope:unwanted_consort = {
						OR = {
							has_relation_nemesis = root
							has_relation_rival = root
							has_relation_potential_rival = root
							any_secret = {
								exists = secret_owner
								is_known_by = root
								is_criminal_for = secret_owner
							}
						}
					}
					has_imprisonment_reason = scope:unwanted_consort
				}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:unwanted_consort
					has_relation_soulmate = scope:unwanted_consort
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:unwanted_consort
					has_relation_friend = scope:unwanted_consort
            	}
            }
			modifier = {
				add = -25
				any_child = {
					count >= 4
				}
			}
        }
	}
	
	after = {
		add_character_flag = {
			flag = poisoned_a_consort_flag
			years = 3
		}
	}
}

########################
##Qi is jealous of Xin##
########################
scripted_trigger harem_politics_xin_trigger = {
	is_physically_able_ai_adult = yes
	opinion = {
		target = root
		value > -1
	}
	OR = {
		accepts_concubinage = yes
		accepts_polygamy = yes
	}
	is_courtier_of = root
	NOR = {
		AND = {
			exists = root.primary_spouse
			this = root.primary_spouse
		}
		has_trait = pregnant
		has_trait = ill
		has_trait = wounded
	}
	NOR = {
		any_close_or_extended_family_member = {
			OR = {
				is_powerful_vassal_of = root
				is_councillor_of = root
				is_parent_of = root
				is_liege_or_above_of = root
			}
		}
		has_character_modifier = favored_consort_modifier
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger harem_politics_qi_trigger = {
	is_physically_able_ai_adult = yes
	opinion = {
		target = root
		value > -1
	}
	OR = {
		accepts_concubinage = yes
		accepts_polygamy = yes
	}
	OR = {
		any_close_or_extended_family_member = {
			OR = {
				is_powerful_vassal_of = root
				is_councillor_of = root
				is_parent_of = root
				is_liege_or_above_of = root
			}
		}
		has_character_modifier = favored_consort_modifier
	}
	NOR = {
		this = $XIN$
		AND = {
			exists = root.primary_spouse
			this = root.primary_spouse
		}
		has_trait = pregnant
		has_trait = ill
		has_trait = wounded
		has_character_flag = flag_scolded_consort
		has_character_modifier = unfavored_consort_modifier
		has_character_modifier = demoted_primary_spouse_modifier
		has_character_modifier = demoted_spouse_modifier
		has_trait = honest
		has_trait = craven
		has_trait = shy
		has_court_position = grand_consort_court_position
		has_relation_best_friend = $XIN$
		has_relation_friend = $XIN$
		has_relation_potential_friend = $XIN$
		has_relation_soulmate = $XIN$
		has_relation_lover = $XIN$
		has_relation_potential_lover = $XIN$
	}
	harem_politics_evil_consort_trigger = yes
	is_courtier_of = root
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

harem_politics.0013 = {
	type = character_event
	title = harem_politics.0013.t
	desc = harem_politics.0013.desc
	theme = family
	override_background = {
		reference = bedchamber
	}
	
	left_portrait  = {
		character = root
		animation = boredom
	}
	right_portrait = {
		character = scope:qi_pin
		animation = worry
	}
	lower_center_portrait = {
		character = scope:xin_guiren
	}
	
	trigger = {
		any_consort = {
			harem_politics_xin_trigger = yes
			save_temporary_scope_as = reference_xin_guiren
		}
		any_consort = {
			harem_politics_qi_trigger = { XIN = scope:reference_xin_guiren }
		}
		NOR = {
			has_character_flag = flag_qi_pin_xin_guiren_event
			has_trait = eunuch
			has_trait = celibate
	    }
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
	}
	weight_multiplier = {
		base = 1
		modifier = {
			add = -0.5
			has_trait = chaste
		}
		modifier = {
			add = 0.2
			has_trait = lustful
		}
		modifier = {
			add = 0.1
			highest_held_title_tier >= tier_kingdom
		}
		modifier = {
			add = 0.2
			any_child = {
				count <= 1
			}
		}
		modifier = {
			add = -0.4
			age >= 45
		}
	}
	
	immediate = {
		save_scope_as = harem_liege
		every_consort = {
			limit = {
				harem_politics_xin_trigger = yes
			}
			add_to_list = xin_guiren_list
		}
		
		random_in_list = { #Noble Lady Xin
			list = xin_guiren_list
			weight = {
				base = 10
				modifier = {
					has_character_modifier = unfavored_consort_modifier
					add = 30
				}
				modifier = {
					is_lowborn = yes
					add = 30
				}
				modifier = {
					has_trait = shy
					add = 10
				}
				modifier = {
					has_trait = craven
					add = 10
				}
				modifier = {
					age <= 30
					add = 30
				}
			}
			save_scope_as = xin_guiren
		}
		
		every_consort = {
			limit = {
				harem_politics_qi_trigger = { XIN = scope:xin_guiren }
			}
			add_to_list = qi_pin_list
		}
		random_in_list = { #Imperial Concubine Qi
			list = qi_pin_list
			weight = {
				base = 10
				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 30
				}
				modifier = {
					age <= 30
					add = 30
				}
				modifier = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
						}
					}
					add = 30
				}
				modifier = {
					is_lowborn = no
					add = 10
				}
				modifier = {
					has_trait = arrogant
					add = 20
				}
				modifier = {
					has_trait = ambitious
					add = 20
				}
				modifier = {
					has_trait = greedy
					add = 20
				}
				modifier = {
					has_trait = brave
					add = 10
				}
				modifier = {
					has_character_modifier = scheming_consort_modifier
					add = 10
				}
				opinion_modifier = {
					opinion_target = scope:xin_guiren
					multiplier = -0.20
				}
			}
			save_scope_as = qi_pin
		}
		had_sex_with_effect = {
			CHARACTER = scope:xin_guiren
			PREGNANCY_CHANCE = pregnancy_chance
		}
		hidden_effect = {
			scope:xin_guiren = {
				add_opinion = {
					target = scope:qi_pin
					modifier = insult_opinion
					opinion = -10
				}
			}
		}
	}
	
	option = { # Stay with Xin GuiRen
        name = harem_politics.0013.a
		add_character_flag = {
			flag = flag_qi_pin_xin_guiren_event
			years = 4
		}
		scope:xin_guiren = {
			calyver_favor_moderate_gain_effect = yes
			add_opinion = {
				target = root
				modifier = romance_opinion
				opinion = 10
			}
			if = {
				limit = { 
					NOR = { 
						has_relation_lover = root
						has_relation_soulmate = root
						has_relation_potential_lover = root
					} 
				}
				set_relation_potential_lover = root
			}
			if = {
				limit = { 
					has_character_modifier = unfavored_consort_modifier
				}
				remove_character_modifier = unfavored_consort_modifier
			}
		}
		scope:qi_pin = {
			calyver_favor_moderate_loss_effect = yes
			add_opinion = {
				target = root
				modifier = ignored_consort_opinion
				opinion = -10
			}
			add_opinion = {
				target = scope:xin_guiren
				modifier = jealousy_opinion
				opinion = -5
			}
			if = {
				limit = { 
					NOR = { 
						has_relation_rival = scope:xin_guiren
						has_relation_nemesis = scope:xin_guiren
						has_relation_potential_rival = scope:xin_guiren
					} 
				}
				set_relation_potential_rival = scope:xin_guiren
			}
			if = {
				limit = { 
					has_character_modifier = favored_consort_modifier
				}
				remove_character_modifier = favored_consort_modifier
			}
			add_character_flag = {
			flag = flag_scolded_consort
				years = 2
			}
		}
		add_opinion = {
			target = scope:qi_pin
			modifier = insolent_consort_opinion
			opinion = -5
		}
		stress_impact = {
			lustful = minor_stress_impact_gain
			craven = minor_stress_impact_gain
		}
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_honor = 0.20
				ai_boldness = 0.20
				ai_energy = -0.25
				ai_rationality = 0.20
   			}
			opinion_modifier = {
				opinion_target = scope:qi_pin
				multiplier = -0.30
			}
			opinion_modifier = {
				opinion_target = scope:xin_guiren
				multiplier = 0.30
			}
			modifier = {
				add = 20
				scope:qi_pin = {
					is_married = no
				}
			}
			modifier = {
				add = 15
				has_trait = chaste
			}
			modifier = {
				add = 15
				has_trait = shy
			}
			modifier = {
				add = -25
				has_trait = lustful
			}
			modifier = {
				add = -25
				has_trait = craven
			}
        }
    }
	
	option = { # Go with Qi Pin
        name = harem_politics.0013.b
		had_sex_with_effect = {
			CHARACTER = scope:qi_pin
			PREGNANCY_CHANCE = pregnancy_chance
		}
		scope:qi_pin = {
			calyver_favor_moderate_gain_effect = yes
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 1
			}
			add_opinion = {
				target = root
				modifier = romance_opinion
				opinion = 10
			}
			if = {
				limit = { 
					NOR = { 
						has_relation_lover = root
						has_relation_soulmate = root
						has_relation_potential_lover = root
					} 
				}
				set_relation_potential_lover = root
			}
		}
		scope:xin_guiren = {
			calyver_favor_moderate_loss_effect = yes
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -15
			}
			add_opinion = {
				target = scope:qi_pin
				modifier = hatred_spouse_opinion
			}
			if = {
				limit = { 
					NOR = { 
						has_relation_rival = scope:qi_pin
						has_relation_nemesis = scope:qi_pin
						has_relation_potential_rival = scope:qi_pin
					} 
				}
				set_relation_potential_rival = scope:qi_pin
			}
		}
		stress_impact = {
			chaste = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			just = minor_stress_impact_gain
		}
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_honor = -0.20
				ai_boldness = -0.20
				ai_energy = 0.25
				ai_rationality = -0.20
   			}
			opinion_modifier = {
				opinion_target = scope:qi_pin
				multiplier = 0.30
			}
			opinion_modifier = {
				opinion_target = scope:xin_guiren
				multiplier = -0.30
			}
			modifier = {
				add = 15
				has_trait = lustful
			}
			modifier = {
				add = 15
				has_trait = craven
			}
			modifier = {
				add = -25
				has_trait = chaste
			}
			modifier = {
				add = -25
				has_trait = shy
			}
			modifier = {
				add = -25
				has_trait = just
			}
			modifier = {
				add = 10
				scope:qi_pin = {
					is_married = yes
				}
			}
			modifier = {
				add = 10
				scope:qi_pin = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
						}
					}
				}
			}
        }
    }
}

#####################################
##A punished consort is complaining##
#####################################

scripted_effect punishment_consort_opinion_mild_effect = {
	if = {
		limit = {
			NOR = {
				has_trait = forgiving
				has_trait = compassionate
			}
		}
		if = {
			limit = {
				OR = {
					has_trait = vengeful
					has_trait = callous
					has_trait = sadistic
				}
			}
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 15
			}
		}
		else = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 10
			}
		}
	}
	else = {
		add_opinion = {
			target = root
			modifier = cruelty_opinion
			opinion = -5
		}
	}
	
	if = {
		limit = {
			has_character_modifier = unfavored_consort_modifier
		}
		remove_character_modifier = unfavored_consort_modifier
	}
	add_character_modifier = {
		modifier = favored_consort_modifier
		years = 1
	}
}

scripted_effect punishment_consort_opinion_big_effect = {
	if = {
		limit = {
			NOR = {
				has_trait = forgiving
				has_trait = compassionate
			}
		}
		if = {
			limit = {
				OR = {
					has_trait = vengeful
					has_trait = callous
					has_trait = sadistic
				}
			}
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 20
			}
		}
		else = {
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 15
			}
		}
	}
	else = {
		add_opinion = {
			target = root
			modifier = cruelty_opinion
			opinion = -15
		}
	}
	
	if = {
		limit = {
			has_character_modifier = unfavored_consort_modifier
		}
		remove_character_modifier = unfavored_consort_modifier
	}
	add_character_modifier = {
		modifier = favored_consort_modifier
		years = 1
	}
}

harem_politics.0014 = {
	type = character_event
	title = harem_politics.0014.t
	desc = {
		desc = harem_politics.0014.start.desc
		first_valid = {
			triggered_desc = { #Parent
				trigger = {
					scope:recipient = {
						is_parent_of = root
					}
				}
				desc = harem_politics.0014.parent.desc
			}
			triggered_desc = { #Main Spouse
				trigger = {
					exists = primary_spouse
					primary_spouse = {
						this = scope:recipient
					}
				}
				desc = harem_politics.0014.ps.desc
			}
			triggered_desc = { #Grand Consort
				trigger = {
					scope:recipient = {
						is_grand_consort_trigger = yes
					}
				}
				desc = harem_politics.0014.gc.desc
			}
			triggered_desc = { #Secondary spouse
				desc = harem_politics.0014.ss.desc
			}
		}
		first_valid = {
			triggered_desc = { #Torture
				trigger = {
					scope:recipient = {
						has_character_modifier = recently_tortured
					}
				}
				desc = harem_politics.0014.torture.desc
			}
			triggered_desc = { #Lashes
				trigger = {
					scope:recipient = {
						has_character_modifier = hunt_tasted_the_belt_modifier
					}
				}
				desc = harem_politics.0014.lashes.desc
			}
			triggered_desc = { #Generic punishment
				desc = harem_politics.0014.gp.desc
			}
		}
		desc = harem_politics.0014.end.desc
	}
	theme = family
	override_background = {
		reference = study
	}
	
	left_portrait  = {
		character = root
		animation = boredom
	}
	right_portrait = {
		character = scope:beggar
		animation = beg
	}
	lower_center_portrait = {
		character = scope:recipient
	}
	
	trigger = {
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
		scope:recipient = {
			is_physically_able_ai_adult = yes
			is_courtier_of = root
			OR = {
				AND = {
					is_travelling = yes
					current_travel_plan ={
						travel_plan_owner = root
					}
				}
				AND = {
					is_travelling = no
					root = {
						is_travelling = no
					}
				}
			}
		}
		scope:beggar = {
			is_physically_able_ai_adult = yes
			is_courtier_of = root
			OR = {
				AND = {
					is_travelling = yes
					current_travel_plan ={
						travel_plan_owner = root
					}
				}
				AND = {
					is_travelling = no
					root = {
						is_travelling = no
					}
				}
			}
		}
		NOT = {
			this = scope:recipient
		}
	}
	
	immediate = {
		save_scope_as = harem_liege
		if = {
			limit = {
				exists = scope:actor
			}
			clear_saved_scope = actor
		}
		save_scope_as = actor
	}
	
	option = { # Scold the recipient
        name = harem_politics.0014.a
		if = {
			limit = {
				AND = {
					scope:beggar = {
						OR = {
							has_trait = wounded
							has_character_modifier = recently_tortured
						}
					}
					OR = {
						has_trait = compassionate
						has_trait = forgiving
					}
				}
			}
			add_opinion = {
				target = scope:recipient
				modifier = cruelty_opinion
				opinion = -15
			}
		}
		else_if = {
			limit = {
				AND = {
					scope:beggar = {
						OR = {
							has_trait = wounded
							has_character_modifier = recently_tortured
						}
					}
					NOR = {
						has_trait = sadistic
						has_trait = vengeful
						has_trait = callous
					}
				}
			}
			add_opinion = {
				target = scope:recipient
				modifier = cruelty_opinion
				opinion = -10
			}
		}
		else = {
			add_opinion = {
				target = scope:recipient
				modifier = cruelty_opinion
				opinion = -5
			}
		}
		scope:recipient = {
			calyver_favor_minor_loss_effect = yes
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -10
			}
			hidden_effect = {
				add_opinion = {
					target = scope:beggar
					modifier = hatred_spouse_opinion
				}
			}
			if = {
				limit = {
					has_character_modifier = favored_consort_modifier
				}
				remove_character_modifier = favored_consort_modifier
			}
			if = {
				limit = {
					is_consort_of = root
				}
				add_character_flag = {
					flag = flag_scolded_consort
					years = 1
				}
			}
			if = {
				limit = {
					NOR = {
						has_relation_rival = scope:beggar
						has_relation_potential_rival = scope:beggar
						has_relation_nemesis = scope:beggar
					}
				}
				set_relation_potential_rival = scope:beggar
			}
		}
		scope:beggar = {
			if = {
				limit = {
					NOR = {
						has_trait = sadistic
						has_trait = callous
						has_trait = vengeful
					}
				}
				add_opinion = {
					target = root
					modifier = grateful_opinion
					opinion = 5
				}
			}
			else = {
				add_opinion = {
					target = root
					modifier = disappointed_opinion
					opinion = -10
				}
			}
			
			if = {
				limit = {
					has_character_modifier = unfavored_consort_modifier
				}
				remove_character_modifier = unfavored_consort_modifier
			}
		}
		
        ai_chance = {
            base = 20
            ai_value_modifier = {
				ai_honor = -0.10
				ai_energy = -0.15
				ai_rationality = -0.10
   			}
			modifier = { #Player heir
				add = 10
				scope:beggar = {
					any_child = {
						is_player_heir_of = root
					}
				}
			}
			modifier = { #Player heir
				add = 5
				scope:recipient = {
					any_child = {
						is_player_heir_of = root
					}
				}
			}
			modifier = {
				add = -20
				scope:recipient = {
					has_trait = pregnant
				}
			}
			opinion_modifier = {
				opinion_target = scope:beggar
				multiplier = 0.20
			}
			opinion_modifier = {
				opinion_target = scope:recipient
				multiplier = -0.50
			}
			
			modifier = {
				add = -20
				has_trait = sadistic
			}
			modifier = {
				add = -20
				has_trait = callous
			}
			modifier = {
				add = -20
				has_trait = vengeful
			}
			modifier = {
				add = 5
				scope:beggar = {
					is_married = yes
				}
			}
			modifier = {
				add = 5
				scope:beggar = {
					has_court_position = grand_consort_court_position
				}
			}
			modifier = {
				add = -5
				scope:recipient = {
					is_married = yes
				}
			}
			modifier = {
				add = -5
				scope:recipient = {
					has_court_position = grand_consort_court_position
				}
			}
			modifier = {
				add = -15
				scope:recipient = {
					this = root.primary_spouse
				}
			}
			modifier = {
				add = -15
				scope:beggar = {
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = {
				add = -15
				scope:recipient = {
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = {
				add = -100
				scope:recipient = {
					any_child = {
						this = root
					}
				}
			}
			modifier = {
				add = -10
				scope:recipient = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
				}
			}
			modifier = {
				add = -20
				scope:recipient = {
					OR = {
						has_relation_best_friend = root
						has_relation_soulmate = root
					}
				}
			}
			
			modifier = {
				add = 15
				scope:beggar = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
				}
			}
			modifier = {
				add = 10
				scope:beggar = {
					OR = {
						has_relation_best_friend = root
						has_relation_soulmate = root
					}
				}
			}
			modifier = {
				add = 15
				scope:beggar = {
					any_close_family_member = {
						OR = {
							AND = {
								OR = {
									is_powerful_vassal_of = root
									is_councillor_of = root
									is_close_family_of = root
									is_liege_or_above_of = root
								}
								NOT = { is_child_of = root }
							}
							is_player_heir_of = root
						}
					}
				}
			}
			modifier = {
				add = -15
				scope:recipient = {
					any_close_family_member = {
						OR = {
							AND = {
								OR = {
									is_powerful_vassal_of = root
									is_councillor_of = root
									is_close_family_of = root
									is_liege_or_above_of = root
								}
								NOT = { is_child_of = root }
							}
							is_player_heir_of = root
						}
					}
				}
			}
        }
    }
	
	option = { # Punish the recipient
        name = harem_politics.0014.b
		trigger = {
			NOR = {
				this = scope:recipient
				scope:recipient = {
					has_trait = pregnant
				}
			}
			OR = {
				has_trait = sadistic
				has_trait = vengeful
				has_trait = callous
			}
		}

		scope:recipient = {
			calyver_favor_medium_loss_effect = yes
			add_character_flag = {
				flag = is_being_tortured
				months = 6 # Players in MP can keep the event window open...
			}
			hidden_effect = {
				add_opinion = {
					target = scope:beggar
					modifier = hatred_spouse_opinion
				}
			}
			if = {
				limit = {
					has_character_modifier = favored_consort_modifier
				}
				remove_character_modifier = favored_consort_modifier
			}
			if = {
				limit = {
					is_consort_of = root
				}
				add_character_modifier = {
					modifier = unfavored_consort_modifier
					years = 1
				}
			}
			if = {
				limit = {
					NOR = {
						has_relation_rival = scope:beggar
						has_relation_potential_rival = scope:beggar
						has_relation_nemesis = scope:beggar
					}
				}
				set_relation_potential_rival = scope:beggar
			}
			if = {
				limit = {
					NOR = {
						has_relation_rival = root
						has_relation_potential_rival = root
						has_relation_nemesis = root
					}
				}
				set_relation_potential_rival = root
			}
		}
		scope:beggar = {
			calyver_favor_big_gain_effect = yes
			punishment_consort_opinion_big_effect = yes
		}

		###EFFECT TOOLTIP###
		torture_interaction_actor_effect = yes
		show_as_tooltip = {
			scope:recipient = {
				add_character_modifier = {
					modifier = recently_tortured
					years = 5
				}
			}
		}

		###EVENTS###
		hidden_effect = {
			#Torture method for descs
			random_list = {
				3 = { save_scope_value_as = { name = torture_method value = flag:rack } }
				3 = { save_scope_value_as = { name = torture_method value = flag:whip } }
				1 = { save_scope_value_as = { name = torture_method value = flag:rats } }
				8 = {
					trigger = {
						scope:actor = { has_trait = poet }
					}
					save_scope_value_as = {
						name = torture_method
						value = flag:poetry
					}
				}
			}

			#They have a secret I want to know about
			if = {
				limit = {
					scope:recipient = {	
						OR = {
							any_secret = {
								torture_secret_trigger = { PARTICIPANT = scope:recipient }
							}
							any_known_secret = {
								secret_owner = { save_temporary_scope_as = torture_secret_owner }
								torture_secret_trigger = { PARTICIPANT = scope:torture_secret_owner }
							}
						}
					}
				}
				scope:recipient = {
					trigger_event = {
						id = prison_c.1001
						days = 1
					}
				}
			}
			else = {
				scope:actor = {
					trigger_event = {
						id = prison_c.1010
						days = 1
					}
				}
			}	
		}

		# Dark Insights Perk:
		if = {
			limit = {
				scope:actor = { has_perk = dark_insights_perk }
			}
			scope:actor = {
				dark_insights_skill_gain_roll_effect = yes
			}
		}
		
		if = {
			limit = {
				AND = {
					scope:recipient = {
						is_parent_of = root
					}
					OR = {
						faith = { has_doctrine = tenet_ancestor_worship }
						culture = { has_cultural_tradition = tradition_mystical_ancestors }
					}
				}
			}
			add_character_modifier = {
				modifier = unfilial_opinion_modifier
				years = 10
			}
		}
		stress_impact = {
			callous = medium_stress_impact_loss
		}

        ai_chance = {
            base = 20
            ai_value_modifier = {
				ai_honor = -0.15
				ai_energy = 0.15
				ai_rationality = -0.15
   			}
			modifier = { #Player heir
				add = 5
				scope:beggar = {
					any_child = {
						is_player_heir_of = root
					}
				}
			}
			modifier = { #Player heir
				add = -30
				scope:recipient = {
					any_child = {
						is_player_heir_of = root
					}
				}
			}
			modifier = {
				add = -25
				scope:recipient = {
					has_trait = pregnant
				}
			}
			modifier = {
				add = 10
				scope:beggar = {
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = {
				add = -25
				scope:recipient = {
					has_character_modifier = favored_consort_modifier
				}
			}
			opinion_modifier = {
				opinion_target = scope:beggar
				multiplier = 0.40
			}
			opinion_modifier = {
				opinion_target = scope:recipient
				multiplier = -0.60
			}
			modifier = {
				add = -25
				has_trait = forgiving
			}
			modifier = {
				add = -25
				has_trait = compassionate
			}
			modifier = {
				add = 20
				has_trait = sadistic
			}
			modifier = {
				add = 20
				has_trait = callous
			}
			modifier = {
				add = 20
				has_trait = vengeful
			}
			modifier = {
				add = 10
				scope:beggar = {
					is_married = yes
				}
			}
			modifier = {
				add = 10
				scope:beggar = {
					has_court_position = grand_consort_court_position
				}
			}
			modifier = {
				add = -10
				scope:recipient = {
					is_married = yes
				}
			}
			modifier = {
				add = -15
				scope:recipient = {
					has_court_position = grand_consort_court_position
				}
			}
			modifier = {
				add = -60
				scope:recipient = {
					this = root.primary_spouse
				}
			}
			modifier = {
				add = -200
				scope:recipient = {
					any_child = {
						this = root
					}
				}
			}
			modifier = {
				add = 20
				scope:beggar = {
					any_close_family_member = {
						OR = {
							AND = {
								OR = {
									is_powerful_vassal_of = root
									is_councillor_of = root
									is_close_family_of = root
									is_liege_or_above_of = root
								}
								NOT = { is_child_of = root }
							}
							is_player_heir_of = root
						}
					}
				}
			}
			modifier = {
				add = -40
				scope:recipient = {
					any_close_family_member = {
						OR = {
							AND = {
								OR = {
									is_powerful_vassal_of = root
									is_councillor_of = root
									is_close_family_of = root
								}
								NOT = { is_child_of = root }
							}
							is_player_heir_of = root
						}
					}
				}
			}
			
			modifier = {
				add = -20
				scope:recipient = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
				}
			}
			modifier = {
				add = -50
				scope:recipient = {
					OR = {
						has_relation_best_friend = root
						has_relation_soulmate = root
					}
				}
			}
			
			modifier = {
				add = 15
				scope:beggar = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
				}
			}
			modifier = {
				add = 30
				scope:beggar = {
					OR = {
						has_relation_best_friend = root
						has_relation_soulmate = root
					}
				}
			}
			modifier = {
				add = 10
				scope:beggar = {
					has_character_modifier = recently_tortured
				}
			}
			modifier = {
				factor = 0
				scope:recipient = {
					any_close_family_member = {
						is_liege_or_above_of = root
					}
				}
			}
        }
    }
	
	option = { # Imprison the recipient
        name = harem_politics.0014.c
		scope:recipient = {
			calyver_favor_moderate_loss_effect = yes
			hidden_effect = {
				add_opinion = {
					target = scope:beggar
					modifier = hatred_spouse_opinion
				}
			}
			if = {
				limit = {
					has_character_modifier = favored_consort_modifier
				}
				remove_character_modifier = favored_consort_modifier
			}
			if = {
				limit = {
					is_consort_of = root
				}
				add_character_modifier = {
					modifier = unfavored_consort_modifier
					years = 1
				}
			}
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -20
			}
			if = {
				limit = {
					NOR = {
						has_relation_rival = scope:beggar
						has_relation_potential_rival = scope:beggar
						has_relation_nemesis = scope:beggar
					}
				}
				set_relation_potential_rival = scope:beggar
			}
		}
		rightfully_imprison_character_effect = {
			TARGET = scope:recipient
			IMPRISONER = root
		}
		if = {
			limit = {
				AND = {
					scope:recipient = {
						is_parent_of = root
					}
					OR = {
						faith = { has_doctrine = tenet_ancestor_worship }
						culture = { has_cultural_tradition = tradition_mystical_ancestors }
					}
				}
			}
			add_character_modifier = {
				modifier = unfilial_opinion_modifier
				years = 10
			}
		}
		scope:beggar = {
			calyver_favor_medium_gain_effect = yes
			punishment_consort_opinion_mild_effect = yes
		}
		stress_impact = {
			forgiving = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
		}
        ai_chance = {
            base = 20
            ai_value_modifier = {
				ai_honor = -0.15
				ai_energy = 0.15
				ai_rationality = -0.15
   			}
			modifier = { #Player heir
				add = 10
				scope:beggar = {
					any_child = {
						is_player_heir_of = root
					}
				}
			}
			modifier = { #Player heir
				add = -10
				scope:recipient = {
					any_child = {
						is_player_heir_of = root
					}
				}
			}
			modifier = {
				add = -25
				scope:recipient = {
					has_trait = pregnant
				}
			}
			modifier = {
				add = 10
				scope:beggar = {
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = {
				add = -15
				scope:recipient = {
					has_character_modifier = favored_consort_modifier
				}
			}
			opinion_modifier = {
				opinion_target = scope:beggar
				multiplier = 0.20
			}
			opinion_modifier = {
				opinion_target = scope:recipient
				multiplier = -0.30
			}
			modifier = {
				add = -15
				has_trait = forgiving
			}
			modifier = {
				add = -15
				has_trait = compassionate
			}
			modifier = {
				add = 10
				has_trait = sadistic
			}
			modifier = {
				add = 10
				has_trait = callous
			}
			modifier = {
				add = 10
				has_trait = vengeful
			}
			modifier = {
				add = 5
				scope:beggar = {
					is_married = yes
				}
			}
			modifier = {
				add = 5
				scope:beggar = {
					has_court_position = grand_consort_court_position
				}
			}
			modifier = {
				add = -5
				scope:recipient = {
					is_married = yes
				}
			}
			modifier = {
				add = -5
				scope:recipient = {
					has_court_position = grand_consort_court_position
				}
			}
			modifier = {
				add = -60
				scope:recipient = {
					this = root.primary_spouse
				}
			}
			modifier = {
				add = -200
				scope:recipient = {
					any_child = {
						this = root
					}
				}
			}
			
			modifier = {
				add = 20
				scope:beggar = {
					any_close_family_member = {
						OR = {
							AND = {
								OR = {
									is_powerful_vassal_of = root
									is_councillor_of = root
									is_close_family_of = root
									is_liege_or_above_of = root
								}
								NOT = { is_child_of = root }
							}
							is_player_heir_of = root
						}
					}
				}
			}
			modifier = {
				add = -40
				scope:recipient = {
					any_close_family_member = {
						OR = {
							AND = {
								OR = {
									is_powerful_vassal_of = root
									is_councillor_of = root
									is_close_family_of = root
								}
								NOT = { is_child_of = root }
							}
							is_player_heir_of = root
						}
					}
				}
			}
			
			modifier = {
				add = -20
				scope:recipient = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
				}
			}
			modifier = {
				add = -50
				scope:recipient = {
					OR = {
						has_relation_best_friend = root
						has_relation_soulmate = root
					}
				}
			}
			
			modifier = {
				add = 10
				scope:beggar = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
				}
			}
			modifier = {
				add = 25
				scope:beggar = {
					OR = {
						has_relation_best_friend = root
						has_relation_soulmate = root
					}
				}
			}
			modifier = {
				factor = 0
				scope:recipient = {
					any_close_family_member = {
						is_liege_or_above_of = root
					}
				}
			}
        }
    }
	
	option = { # Demote the recipient
        name = harem_politics.0014.d
		trigger = {
			#The recipient isn't the close relative of our liege
			scope:recipient = {
				NOT = {
					any_close_family_member = {
						is_liege_or_above_of = root
					}
				}
				is_consort_of = root
			}
			OR = {
				#Revoking GC position
				scope:recipient = {
					has_court_position = grand_consort_court_position
				}
				#Demoting from spouse to concubine
				AND = {
					allowed_more_concubines = yes
					scope:recipient = {
						is_spouse_of = root
						NOT = { 
							has_court_position = grand_consort_court_position
						}
					}
					NOT = { #Can divorce
						culture = {
							has_cultural_parameter = cannot_divorce
						}
					}
					faith = {
						# We are not required to seek approval of a spiritual HoF
						NAND = {
							has_doctrine = doctrine_divorce_approval
							has_doctrine = doctrine_spiritual_head
							exists = religious_head
						}
						# We are not required to seek approval of a house head
						NAND = {
							has_doctrine = doctrine_divorce_approval
							exists = root.house
							exists = root.house.house_head
							root = { is_house_head = no }
						}
					}
				}
			}
		}
		if = {
			limit = {
				AND = {
					scope:recipient = {
						is_parent_of = root
					}
					OR = {
						faith = { has_doctrine = tenet_ancestor_worship }
						culture = { has_cultural_tradition = tradition_mystical_ancestors }
					}
				}
			}
			add_character_modifier = {
				modifier = unfilial_opinion_modifier
				years = 10
			}
		}
		scope:recipient = {
			calyver_favor_moderate_loss_effect = yes
			hidden_effect = {
				add_opinion = {
					target = scope:beggar
					modifier = hatred_spouse_opinion
				}
			}
			if = {
				limit = {
					NOR = {
						has_relation_rival = scope:beggar
						has_relation_potential_rival = scope:beggar
						has_relation_nemesis = scope:beggar
					}
				}
				set_relation_potential_rival = scope:beggar
			}
		}
		if = {
			limit = {
				allowed_more_concubines = yes
				scope:recipient = {
					is_spouse_of = root
					any_close_family_member = {
						NOT = {
							is_liege_or_above_of = root
						}
					}
					NOT = { 
						has_court_position = grand_consort_court_position
					}
				}
			}
			save_scope_as = secondary_actor
			scope:recipient = {
				save_scope_as = secondary_recipient
			}
			spouse_demotion_effect = yes
		}
		else_if = {
			limit = {
				scope:recipient = {
					has_court_position = grand_consort_court_position
					any_close_family_member = {
						NOT = {
							is_liege_or_above_of = root
						}
					}
				}
			}
			revoke_court_position = {
				recipient = scope:recipient
				court_position = grand_consort_court_position
			}
		}
		
		scope:beggar = {
			calyver_favor_big_gain_effect = yes
			punishment_consort_opinion_mild_effect = yes
		}
		stress_impact = {
			forgiving = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
		}
        ai_chance = {
            base = 20
            ai_value_modifier = {
				ai_honor = -0.15
				ai_energy = 0.15
				ai_rationality = -0.15
   			}
			modifier = { #Alliance
				scope:recipient = {
					any_close_family_member = {
						is_allied_to = root
					}
				}
				add = -30
			}
			modifier = { #Player heir
				add = 5
				scope:beggar = {
					any_child = {
						is_player_heir_of = root
					}
				}
			}
			modifier = { #Player heir
				add = -20
				scope:recipient = {
					any_child = {
						is_player_heir_of = root
					}
				}
			}
			modifier = {
				add = -15
				scope:recipient = {
					has_trait = pregnant
				}
			}
			modifier = {
				add = 10
				scope:beggar = {
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = {
				add = -15
				scope:recipient = {
					has_character_modifier = favored_consort_modifier
				}
			}
			opinion_modifier = {
				opinion_target = scope:beggar
				multiplier = 0.20
			}
			opinion_modifier = {
				opinion_target = scope:recipient
				multiplier = -0.30
			}
			modifier = {
				add = -15
				has_trait = forgiving
			}
			modifier = {
				add = -15
				has_trait = compassionate
			}
			modifier = {
				add = 15
				has_trait = arbitrary
			}
			modifier = {
				add = -10
				scope:recipient = {
					has_character_flag = flag_new_consort
				}
			}
			modifier = {
				add = 5
				scope:beggar = {
					is_married = yes
				}
			}
			modifier = {
				add = 5
				scope:beggar = {
					has_court_position = grand_consort_court_position
				}
			}
			modifier = {
				add = -5
				scope:recipient = {
					is_married = yes
				}
			}
			modifier = {
				add = -5
				scope:recipient = {
					has_court_position = grand_consort_court_position
				}
			}
			modifier = {
				add = -60
				scope:recipient = {
					this = root.primary_spouse
				}
			}
			modifier = {
				add = -200
				scope:recipient = {
					any_child = {
						this = root
					}
				}
			}
			modifier = {
				add = 20
				scope:beggar = {
					any_close_family_member = {
						OR = {
							AND = {
								OR = {
									is_powerful_vassal_of = root
									is_councillor_of = root
									is_close_family_of = root
									is_liege_or_above_of = root
								}
								NOT = { is_child_of = root }
							}
							is_player_heir_of = root
						}
					}
				}
			}
			modifier = {
				add = -40
				scope:recipient = {
					any_close_family_member = {
						OR = {
							AND = {
								OR = {
									is_powerful_vassal_of = root
									is_councillor_of = root
									is_close_family_of = root
								}
								NOT = { is_child_of = root }
							}
							is_player_heir_of = root
						}
					}
				}
			}
			
			modifier = {
				add = -20
				scope:recipient = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
				}
			}
			modifier = {
				add = -50
				scope:recipient = {
					OR = {
						has_relation_best_friend = root
						has_relation_soulmate = root
					}
				}
			}
			
			modifier = {
				add = 15
				scope:beggar = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
				}
			}
			modifier = {
				add = 30
				scope:beggar = {
					OR = {
						has_relation_best_friend = root
						has_relation_soulmate = root
					}
				}
			}
        }
    }
	
	option = { # Ignore the beggar
        name = harem_politics.0014.e
		stress_impact = {
			callous = miniscule_stress_impact_loss
			lazy = medium_stress_impact_loss
			forgiving = minor_stress_gain
			compassionate = minor_stress_gain
		}
		scope:beggar = {
			calyver_favor_moderate_loss_effect = yes
			if = {
				limit = {
					has_trait = vengeful
					NOR = {
						has_trait = forgiving
						has_trait = compassionate
					}
				}
				add_opinion = {
					target = root
					modifier = disappointed_opinion
					opinion = -20
				}
			}
			else = {
				add_opinion = {
					target = root
					modifier = disappointed_opinion
					opinion = -10
				}
			}
			add_character_modifier = {
				modifier = unfavored_consort_modifier
				years = 1
			}
		}
		scope:recipient = {
			calyver_favor_minor_gain_effect = yes
		}
		add_character_flag = flag_dismissed_beggar
		if = {
			limit = {
				AND = {
					scope:beggar = {
						is_parent_of = root
					}
					OR = {
						faith = { has_doctrine = tenet_ancestor_worship }
						culture = { has_cultural_tradition = tradition_mystical_ancestors }
					}
				}
			}
			add_character_modifier = {
				modifier = unfilial_opinion_modifier
				years = 10
			}
		}
        ai_chance = {
            base = 20
            ai_value_modifier = {
				ai_honor = -0.10
				ai_rationality = 0.10
   			}
			modifier = {
				add = -15
				scope:beggar = {
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = {
				add = 20
				scope:recipient = {
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = { #Player heir
				add = 20
				scope:recipient = {
					any_child = {
						is_player_heir_of = root
					}
				}
			}
			opinion_modifier = {
				opinion_target = scope:beggar
				multiplier = -0.30
			}
			opinion_modifier = {
				opinion_target = scope:recipient
				multiplier = 0.20
			}
			modifier = {
				add = -15
				has_trait = forgiving
			}
			modifier = {
				add = -15
				has_trait = compassionate
			}
			modifier = {
				add = 15
				has_trait = lazy
			}
			modifier = {
				add = 15
				has_trait = cynical
			}
			modifier = {
				add = -25
				has_trait = sadistic
			}
			modifier = {
				add = -25
				has_trait = vengeful
			}
			modifier = {
				add = -25
				has_trait = callous
			}
			modifier = {
				add = -10
				scope:beggar = {
					is_married = yes
				}
			}
			modifier = {
				add = -5
				scope:beggar = {
					has_court_position = grand_consort_court_position
				}
			}
			modifier = {
				add = 10
				scope:recipient = {
					is_married = yes
				}
			}
			modifier = {
				add = 15
				scope:recipient = {
					has_court_position = grand_consort_court_position
				}
			}
			modifier = {
				add = 20
				exists = primary_spouse
				scope:recipient = {
					this = root.primary_spouse
				}
			}
			modifier = {
				add = 25
				scope:recipient = {
					has_trait = pregnant
				}
			}
			modifier = {
				add = 100
				scope:recipient = {
					any_child = {
						this = root
					}
				}
			}
			modifier = {
				add = -20
				scope:beggar = {
					any_close_family_member = {
						OR = {
							AND = {
								OR = {
									is_powerful_vassal_of = root
									is_councillor_of = root
									is_close_family_of = root
									is_liege_or_above_of = root
								}
								NOT = { is_child_of = root }
							}
							is_player_heir_of = root
						}
					}
				}
			}
			modifier = {
				add = 20
				scope:recipient = {
					any_close_family_member = {
						OR = {
							AND = {
								OR = {
									is_powerful_vassal_of = root
									is_councillor_of = root
									is_close_family_of = root
									is_liege_or_above_of = root
								}
								NOT = { is_child_of = root }
							}
							is_player_heir_of = root
						}
					}
				}
			}
			
			modifier = {
				add = 20
				scope:recipient = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
				}
			}
			modifier = {
				add = 50
				scope:recipient = {
					OR = {
						has_relation_best_friend = root
						has_relation_soulmate = root
					}
				}
			}
			
			modifier = {
				add = -20
				scope:beggar = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
				}
			}
			modifier = {
				add = -40
				scope:beggar = {
					OR = {
						has_relation_best_friend = root
						has_relation_soulmate = root
					}
				}
			}
			
        }
    }
	after = {
		hidden_effect = {
			if = {
				limit = {
					NOT = {
						has_character_flag = flag_dismissed_beggar
					}
					scope:beggar = {
						is_alive = yes
					}
				}
				if = {
					limit = {
						scope:beggar = {
							has_character_modifier = sleep_deprived_modifier
						}
					}
					scope:beggar = {
						remove_character_modifier = sleep_deprived_modifier
					}
				}
				else_if = {
					limit = {
						scope:beggar = {
							has_character_modifier = intrigue_starved_and_deprived_modifier
						}
					}
					scope:beggar = {
						remove_character_modifier = intrigue_starved_and_deprived_modifier
					}
				}
				else = {
					scope:beggar = {
						add_character_modifier = { 
							modifier = safe_disease_treatment_success_high_modifier 
							days = disease_treatment_short_duration 
						}
					}
				}
			}
		}
		if = {
			limit = {
				has_character_flag = flag_dismissed_beggar
			}
			remove_character_flag = flag_dismissed_beggar
		}
	}
}
###################
##Mourning period##
###################
harem_politics.0015 = {
	type = character_event
	title = harem_politics.0015.t
	desc = harem_politics.0015.desc
	theme = death
	
	left_portrait  = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:dead_relation
		animation = idle
	}
	
	trigger = {
		is_physically_able = yes
		is_landed = yes
		age >=14
		OR = {
			is_betrothed = no
			AND = {
				is_betrothed = yes
				betrothed = {
					OR = {
						age <=14
						AND = {	
							root.age <= 14
							age >=16
						}
					}
				}
			}
		}
	}
	
	immediate = {
	}
	
	option = { # Mourn the relative
        name = harem_politics.0015.a
		flavor = harem_politics.0015.a_tt
		
		if = {
			limit = {
				OR = {
					has_character_flag = dead_important_relative_flag
					has_character_flag = dead_main_spouse_flag
				}
			}
			add_legitimacy = miniscule_legitimacy_gain
		}
		
		add_character_modifier = {
			modifier = mourner_modifier
			years = 1
		}
		if = {
			limit = {
				has_character_modifier = merry_mourner_modifier
			}
			remove_character_modifier = merry_mourner_modifier
		}
		
		if = {
			limit = {
				has_character_flag = dead_main_spouse_flag
			}
			add_character_flag = {
				flag = mourning_main_spouse_flag
				years = 1
			}
			remove_character_flag = dead_main_spouse_flag
		}
		
		hidden_effect = {
			if = {
				limit = {
					any_courtier = {
						OR = {	
							is_close_or_extended_family_of = root
							is_councillor_of = root
							is_knight = yes
							is_consort_of = root
						}
						OR = {	
							is_imprisoned_by = root
							is_imprisoned = no
						}
						NOT = {
							has_trait = incapable
						}
						is_betrothed = no
						age >=14
						count >= 1
					}
				}
				every_courtier = {
					limit = {	
						OR = {	
							is_close_or_extended_family_of = root
							is_councillor_of = root
							is_knight = yes
							is_consort_of = root
						}
						OR = {	
							is_imprisoned_by = root
							is_imprisoned = no
						}
						NOT = {
							has_trait = incapable
						}
						OR = {	
							is_betrothed = no
							AND = {	
								is_betrothed = yes
								OR = {	
									age = 14
									betrothed = {
										age <= 14
									}
								}
							}
						}
						age >= 14
					}
					add_character_modifier = {
						modifier = mourner_modifier
						years = 1
					}
					if = {
						limit = {
							has_character_modifier = merry_mourner_modifier
						}
						remove_character_modifier = merry_mourner_modifier
					}
				}
			}
		}
		
		stress_impact = {
			cynical = miniscule_stress_impact_gain
			lustful = miniscule_stress_impact_gain
			disloyal = miniscule_stress_impact_gain
		}
        ai_chance = {
            base = 20
            ai_value_modifier = {
				ai_honor = 0.10
				ai_energy = 0.15
				ai_rationality = 0.10
   			}
			modifier = {
				add = -25
				any_ally = {
					count = 0
				}
			}
			modifier = {
				add = 10
				has_character_flag = dead_important_relative_flag
			}
			modifier = {
				add = 10
				has_character_flag = dead_main_spouse_flag
			}
			modifier = {
				add = -25
				has_trait = cynical
			}
			modifier = {
				add = -25
				has_trait = lustful
			}
			modifier = {
				add = -25
				has_trait = disloyal
			}
			modifier = {
				add = 20
				has_trait = zealous
			}
			modifier = {
				add = 10
				has_trait = compassionate
			}
			modifier = {
				add = 10
				has_trait = forgiving
			}
			modifier = { #Ancestors
				add = 20
				any_parent = {
					this = scope:dead_relation
				}
				OR = {
					faith = { has_doctrine = tenet_ancestor_worship }
					culture = { has_cultural_tradition = tradition_mystical_ancestors }
				}
			}
        }
    }
	
	option = { # Whatever
        name = harem_politics.0015.b
		flavor = harem_politics.0015.b_tt
		
		if = {
			limit = {
				OR = {
					has_character_flag = dead_important_relative_flag
					has_character_flag = dead_main_spouse_flag
				}
			}
			add_character_modifier = {
				modifier = merry_mourner_modifier
				years = 1
			}
			add_legitimacy = medium_legitimacy_loss
			if = {
				limit = {
					any_parent = {
						this = scope:dead_relation
					}
					OR = {
						faith = { has_doctrine = tenet_ancestor_worship }
						culture = { has_cultural_tradition = tradition_mystical_ancestors }
					}
				}
				add_character_modifier = {
					modifier = unfilial_opinion_modifier
					years = 10
				}
			}
		}
		else = {
			add_piety = miniscule_piety_loss
		}
		
		stress_impact = {
			forgiving = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
		}
        ai_chance = {
            base = 20
            ai_value_modifier = {
				ai_honor = -0.10
				ai_energy = -0.15
				ai_rationality = -0.10
   			}
			modifier = {
				add = 25
				any_ally = {
					count = 0
				}
			}
			modifier = {
				add = 10
				has_trait = callous
			}
			modifier = {
				add = 10
				has_trait = sadistic
			}
			modifier = {
				add = 15
				has_trait = cynical
			}
			modifier = {
				add = 15
				has_trait = lustful
			}
			modifier = {
				add = 10
				has_trait = disloyal
			}
			modifier = {
				add = -25
				has_trait = zealous
			}
			modifier = {
				add = -25
				has_trait = compassionate
			}
			modifier = {
				add = -25
				has_trait = forgiving
			}
			modifier = {
				add = 15
				is_at_war = yes
			}
			modifier = { #Less likely if low legitimacy
				add = -35
				OR = {
					AND = {
						highest_held_title_tier = tier_empire
						legitimacy_level <= 3
					}
					AND = {
						highest_held_title_tier = tier_kingdom
						legitimacy_level <= 2
					}
					AND = {
						highest_held_title_tier = tier_duchy
						legitimacy_level <= 1
					}
				}
				OR = {
					has_character_flag = dead_important_relative_flag
					has_character_flag = dead_main_spouse_flag
				}
			}
        }
    }
}

##################################
##Your concubines are performing##
##################################
scripted_trigger harem_politics_valid_harem_head_trigger = {
	is_physically_able_ai_adult = yes
	is_alive = yes
	OR = {
		AND = {
			exists = root.primary_spouse
			this = root.primary_spouse
		}
		any_child = {
			this = root
		}
		has_court_position = grand_consort_court_position
	}
	is_knight = no
	NOR = {
		has_trait = ill
		has_trait = wounded
		has_character_flag = flag_scolded_consort
		has_character_modifier = unfavored_consort_modifier
		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
		has_character_modifier = demoted_primary_spouse_modifier
		has_character_modifier = demoted_spouse_modifier
	}
	is_courtier_of = root
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger harem_politics_valid_performer_trigger = {
	is_physically_able_ai_adult = yes
	has_character_flag = flag_new_consort
	age <= 21
	NOR = {
		AND = {
			exists = root.primary_spouse
			this = root.primary_spouse
		}
		has_trait = lunatic_1
		has_trait = lunatic_genetic
		has_trait = possessed_1
		has_trait = possessed_genetic
		has_trait = lisping
		has_trait = stuttering
		has_trait = scaly
		has_trait = clubfooted
		has_trait = hunchbacked
		has_trait = wheezing
		has_trait = spindly
		has_trait = one_eyed
		has_trait = one_legged
		has_trait = disfigured
		has_trait = maimed
		has_trait = blind
		has_trait = ill
		has_trait = bubonic_plague
		has_trait = cancer
		has_trait = consumption
		has_trait = great_pox
		has_trait = gout_ridden
		has_trait = leper
		has_trait = lovers_pox
		has_trait = pneumonic
		has_trait = smallpox
		has_trait = typhus
		
		has_trait = beauty_bad
		has_trait = pregnant
		has_trait = ill
		has_trait = wounded

		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
	}
	is_courtier_of = root
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

harem_politics.0016 = {
	type = character_event
	title = harem_politics.0016.t
	desc = {
		first_valid = {
			triggered_desc = { #Emperor
				trigger = {
					highest_held_title_tier = tier_empire
				}
				desc = harem_politics.0016.imperial.desc
			}
			triggered_desc = { #King
				trigger = {
					highest_held_title_tier = tier_kingdom
				}
				desc = harem_politics.0016.royal.desc
			}
			triggered_desc = { #Prince
				trigger = {
					any_parent = {
						highest_held_title_tier >= tier_kingdom
					}
				}
				desc = harem_politics.0016.princely.desc
			}
			triggered_desc = { #Duke
				trigger = {
					highest_held_title_tier = tier_duchy
				}
				desc = harem_politics.0016.ducal.desc
			}
			triggered_desc = { #Noble
				desc = harem_politics.0016.noble.desc
			}
		}
		desc = harem_politics.0016.first.desc
		first_valid = {
			triggered_desc = { #Mother
				trigger = {
					scope:harem_head = {
						any_child = {
							this = root
						}
					}
				}
				desc = harem_politics.0016.parent.desc
			}
			triggered_desc = { #Main Spouse
				trigger = {
					exists = primary_spouse
					primary_spouse = {
						this = scope:harem_head
					}
				}
				desc = harem_politics.0016.ms.desc
			}
			triggered_desc = { #Grand Consort
				desc = harem_politics.0016.gc.desc
			}
		}
		desc = harem_politics.0016.second.desc
		first_valid = {
			triggered_desc = { #Good performers
				trigger = {
					OR = {
						scope:performer_1 = {
							diplomacy >= high_skill_rating
						}
						scope:performer_2 = {
							diplomacy >= high_skill_rating
						}
						scope:performer_3 = {
							diplomacy >= high_skill_rating
						}
					}
				}
				desc = harem_politics.0016.good.desc
			}
			triggered_desc = { #Decent performers
				trigger = {
					OR = {
						scope:performer_1 = {
							diplomacy >= medium_skill_rating
						}
						scope:performer_2 = {
							diplomacy >= medium_skill_rating
						}
						scope:performer_3 = {
							diplomacy >= medium_skill_rating
						}
					}
				}
				desc = harem_politics.0016.decent.desc
			}
			triggered_desc = { #Bad performers
				desc = harem_politics.0016.bad.desc
			}
		}
		desc = harem_politics.0016.end.desc
	}
	theme = family
	override_background = {
		reference = garden
	}
	
	right_portrait  = {
		character = root
		animation = happiness
	}
	left_portrait = {
		character = scope:harem_head
		animation = flirtation_left
	}
	lower_left_portrait = {
		character = scope:performer_1
	}
	lower_center_portrait = {
		character = scope:performer_2
	}
	lower_right_portrait = {
		character = scope:performer_3
	}
	
	trigger = {
		any_courtier = {
			harem_politics_valid_harem_head_trigger = yes
			save_temporary_scope_as = temporary_harem_head
		}
		any_concubine = {
			harem_politics_valid_performer_trigger = yes
			NOT = {
				this = scope:temporary_harem_head
			}
			count >= 3
		}
		NOR = {
			has_trait = eunuch
			has_trait = celibate
			has_character_flag = flag_performing_consorts_event
			has_character_modifier = mourner_modifier
	    }
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
	}
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.10
			has_royal_court = yes
			has_court_type = court_diplomatic
		}
		modifier = {
			add = 0.15
			highest_held_title_tier >= tier_kingdom
		}
		modifier = {
			add = 0.10
			has_trait = lustful
		}
		modifier = {
			add = 0.10
			has_trait = deviant
		}
		modifier = {
			add = 0.10
			has_trait = rakish
		}
		modifier = {
			add = -0.25
			has_trait = shy
		}
		modifier = {
			add = -0.25
			has_trait = chaste
		}
	}
	
	immediate = {
		save_scope_as = harem_liege
		save_scope_as = actor
		every_courtier = {
			limit = {	
				harem_politics_valid_harem_head_trigger = yes
			}
			add_to_temporary_list = harem_head_list
		}
		random_in_list = {
			list = harem_head_list
			weight = {
				base = 10
				modifier = { #The main spouse is the head harem
					AND = {
						exists = root.primary_spouse
						this = root.primary_spouse
					}
					add = 100
				}
				modifier = { #The Grand Consort is the second in command
					has_court_position = grand_consort_court_position
					add = 50
				}
				modifier = { #Parents are also harem authority
					any_child = {
						this = root
					}
					add = 25
				}
			}
			save_scope_as = harem_head
		}
		
		every_concubine = {
			limit = {	
				harem_politics_valid_performer_trigger = yes
				NOT = {
					this = scope:harem_head
				}
			}
			add_to_temporary_list = performers_list
		}
		random_in_list = {
			list = performers_list
			weight = {
				base = 10
				compare_modifier = { #High diplomacy is required
					value = diplomacy
					multiplier = 1
				}
				modifier = { #Beauty
					has_trait = beauty_good_3
					add = 20
				}
				modifier = { #Beauty
					has_trait = beauty_good_2
					add = 15
				}
				modifier = { #Beauty
					has_trait = beauty_good_1
					add = 10
				}
				modifier = { #Grand Consort
					has_court_position = grand_consort_court_position
					add = 10
				}
				modifier = { #Favorites
					has_character_modifier = favored_consort_modifier
					add = 5
				}
				modifier = { #Influential consort
					any_close_or_extended_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
							AND = {
								is_knight_of = root
								is_acclaimed = yes
							}
						}
					}
					add = 10
				}
			}
			save_scope_as = performer_1
		}
		random_in_list = {
			list = performers_list
			limit = {
				NOT = {
					this = scope:performer_1
				}
			}
			weight = {
				base = 10
				compare_modifier = { #High diplomacy is required
					value = diplomacy
					multiplier = 1
				}
				modifier = { #Beauty
					has_trait = beauty_good_3
					add = 20
				}
				modifier = { #Beauty
					has_trait = beauty_good_2
					add = 15
				}
				modifier = { #Beauty
					has_trait = beauty_good_1
					add = 10
				}
				modifier = { #Grand Consort
					has_court_position = grand_consort_court_position
					add = 10
				}
				modifier = { #Favorites
					has_character_modifier = favored_consort_modifier
					add = 5
				}
				modifier = { #Influential consort
					any_close_or_extended_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
							AND = {
								is_knight_of = root
								is_acclaimed = yes
							}
						}
					}
					add = 10
				}
			}
			save_scope_as = performer_2
		}
		random_in_list = {
			list = performers_list
			limit = {
				NOR = {
					this = scope:performer_1
					this = scope:performer_2
				}
			}
			weight = {
				base = 10
				compare_modifier = { #High diplomacy is required
					value = diplomacy
					multiplier = 1
				}
				modifier = { #Beauty
					has_trait = beauty_good_3
					add = 20
				}
				modifier = { #Beauty
					has_trait = beauty_good_2
					add = 15
				}
				modifier = { #Beauty
					has_trait = beauty_good_1
					add = 10
				}
				modifier = { #Grand Consort
					has_court_position = grand_consort_court_position
					add = 10
				}
				modifier = { #Favorites
					has_character_modifier = favored_consort_modifier
					add = 5
				}
				modifier = { #Influential consort
					any_close_or_extended_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
							AND = {
								is_knight_of = root
								is_acclaimed = yes
							}
						}
					}
					add = 10
				}
			}
			save_scope_as = performer_3
		}
	}
	
	option = { # Sleep with first performer
        name = harem_politics.0016.a
		
		scope:performer_1 = {
			save_scope_as = chosen_consort
		}
		scope:performer_2 = {
			save_scope_as = rejected_1
		}
		scope:performer_3 = {
			save_scope_as = rejected_2
		}
		if = {
			limit = {
				scope:harem_head = {
					is_consort_of = root
				}
			}
			scope:harem_head = {
				save_scope_as = rejected_3
			}
		}
		chosen_consort_effect = yes
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			opinion_modifier = {
				opinion_target = scope:performer_1
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:performer_1
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}
			modifier = {
            	add = 10
            	scope:performer_1 = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:performer_1
					has_relation_soulmate = scope:performer_1
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:performer_1
					has_relation_friend = scope:performer_1
            	}
            }
            modifier = {	#Weight down for stress.
				add = 15
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = rakish
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = deviant
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = shy
			}
			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:performer_1
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:performer_1
				}
			}
			modifier = {
				add = 15
				any_child = {
					count <= 1
				}
			}
			
			compare_modifier = { #High diplomacy
				value = scope:performer_1.diplomacy
				multiplier = 0.8
			}
			modifier = { #Beauty
				scope:performer_1 = { 
					has_trait = beauty_good_3
				}
				add = 15
			}
			modifier = { #Beauty
				scope:performer_1 = { 
					has_trait = beauty_good_2
				}
				add = 10
			}
			modifier = { #Beauty
				scope:performer_1 = { 
					has_trait = beauty_good_1
				}
				add = 5
			}
			modifier = { #Grand Consort
				scope:performer_1 = { 
					has_court_position = grand_consort_court_position
				}
				add = 5
			}
			modifier = { #Influential consort
				scope:performer_1 = { 
					any_close_or_extended_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
							AND = {
								is_knight_of = root
								is_acclaimed = yes
							}
						}
					}
				}
				add = 5
			}
        }
    }
	
	option = { # Sleep with second performer
        name = harem_politics.0016.b
		
		scope:performer_1 = {
			save_scope_as = rejected_1
		}
		scope:performer_2 = {
			save_scope_as = chosen_consort
		}
		scope:performer_3 = {
			save_scope_as = rejected_2
		}
		if = {
			limit = {
				scope:harem_head = {
					is_consort_of = root
				}
			}
			scope:harem_head = {
				save_scope_as = rejected_3
			}
		}
		chosen_consort_effect = yes
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			opinion_modifier = {
				opinion_target = scope:performer_2
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:performer_2
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}
			modifier = {
            	add = 10
            	scope:performer_2 = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:performer_2
					has_relation_soulmate = scope:performer_2
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:performer_2
					has_relation_friend = scope:performer_2
            	}
            }
            modifier = {	#Weight down for stress.
				add = 15
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = rakish
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = deviant
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = shy
			}
			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:performer_2
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:performer_2
				}
			}
			modifier = {
				add = 15
				any_child = {
					count <= 1
				}
			}
			
			compare_modifier = { #High diplomacy
				value = scope:performer_2.diplomacy
				multiplier = 0.8
			}
			modifier = { #Beauty
				scope:performer_2 = { 
					has_trait = beauty_good_3
				}
				add = 15
			}
			modifier = { #Beauty
				scope:performer_2 = { 
					has_trait = beauty_good_2
				}
				add = 10
			}
			modifier = { #Beauty
				scope:performer_2 = { 
					has_trait = beauty_good_1
				}
				add = 5
			}
			modifier = { #Grand Consort
				scope:performer_2 = { 
					has_court_position = grand_consort_court_position
				}
				add = 5
			}
			modifier = { #Influential consort
				scope:performer_2 = { 
					any_close_or_extended_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
							AND = {
								is_knight_of = root
								is_acclaimed = yes
							}
						}
					}
				}
				add = 5
			}
        }
    }
	
	option = { # Sleep with third performer
        name = harem_politics.0016.c
		
		scope:performer_1 = {
			save_scope_as = rejected_1
		}
		scope:performer_2 = {
			save_scope_as = rejected_2
		}
		scope:performer_3 = {
			save_scope_as = chosen_consort
		}
		if = {
			limit = {
				scope:harem_head = {
					is_consort_of = root
				}
			}
			scope:harem_head = {
				save_scope_as = rejected_3
			}
		}
		chosen_consort_effect = yes
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			opinion_modifier = {
				opinion_target = scope:performer_3
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:performer_3
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}
			modifier = {
            	add = 10
            	scope:performer_3 = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:performer_3
					has_relation_soulmate = scope:performer_3
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:performer_3
					has_relation_friend = scope:performer_3
            	}
            }
            modifier = {	#Weight down for stress.
				add = 15
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = rakish
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = deviant
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = shy
			}
			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:performer_3
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:performer_3
				}
			}
			modifier = {
				add = 15
				any_child = {
					count <= 1
				}
			}
			
			compare_modifier = { #High diplomacy
				value = scope:performer_3.diplomacy
				multiplier = 0.8
			}
			modifier = { #Beauty
				scope:performer_3 = { 
					has_trait = beauty_good_3
				}
				add = 15
			}
			modifier = { #Beauty
				scope:performer_3 = { 
					has_trait = beauty_good_2
				}
				add = 10
			}
			modifier = { #Beauty
				scope:performer_3 = { 
					has_trait = beauty_good_1
				}
				add = 5
			}
			modifier = { #Grand Consort
				scope:performer_3 = { 
					has_court_position = grand_consort_court_position
				}
				add = 5
			}
			modifier = { #Influential consort
				scope:performer_3 = { 
					any_close_or_extended_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
							AND = {
								is_knight_of = root
								is_acclaimed = yes
							}
						}
					}
				}
				add = 5
			}
        }
    }
	
	option = { # Sleep with harem head
        name = harem_politics.0016.d
		trigger = {
			scope:harem_head = {
				is_consort_of = root
				NOT = {
					has_trait = pregnant
				}
			}
		}
		
		scope:performer_1 = {
			save_scope_as = rejected_1
		}
		scope:performer_2 = {
			save_scope_as = rejected_2
		}
		scope:performer_3 = {
			save_scope_as = rejected_3
		}
		if = {
			limit = {
				scope:harem_head = {
					is_consort_of = root
				}
			}
			scope:harem_head = {
				save_scope_as = chosen_consort
			}
		}
		chosen_consort_effect = yes
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			opinion_modifier = {
				opinion_target = scope:harem_head
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:harem_head
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}
			modifier = {
            	add = 10
            	scope:harem_head = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:harem_head
					has_relation_soulmate = scope:harem_head
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:harem_head
					has_relation_friend = scope:harem_head
            	}
            }
            modifier = {	#Weight down for stress.
				add = 15
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = rakish
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = deviant
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = shy
			}
			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:harem_head
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:harem_head
				}
			}
			modifier = {
				add = 15
				any_child = {
					count <= 1
				}
			}
			
			compare_modifier = { #High diplomacy
				value = scope:harem_head.diplomacy
				multiplier = 0.8
			}
			modifier = { #Beauty
				scope:harem_head = { 
					has_trait = beauty_good_3
				}
				add = 15
			}
			modifier = { #Beauty
				scope:harem_head = { 
					has_trait = beauty_good_2
				}
				add = 10
			}
			modifier = { #Beauty
				scope:harem_head = { 
					has_trait = beauty_good_1
				}
				add = 5
			}
			modifier = { #Grand Consort
				scope:harem_head = { 
					has_court_position = grand_consort_court_position
				}
				add = 5
			}
			modifier = { #PS
				exists = root.primary_spouse
				scope:harem_head = { 
					this = root.primary_spouse
				}
				add = 10
			}
			modifier = { #Influential consort
				scope:harem_head = { 
					any_close_or_extended_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
							AND = {
								is_knight_of = root
								is_acclaimed = yes
							}
						}
					}
				}
				add = 5
			}
        }
    }
	
	option = { # Enjoy the performance
        name = harem_politics.0016.e
		if = {
			limit = {
				NOR = {
					has_trait = shy
					has_trait = chaste
					has_trait = lustful
					has_trait = rakish
					has_trait = deviant
				}
			}
			stress_impact = { base = minor_stress_impact_loss }
		}
		stress_impact = {
			lustful = minor_stress_impact_gain
			rakish = minor_stress_impact_gain
			deviant = minor_stress_impact_gain
		}
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = -0.20
				ai_energy = -0.35
   			}
            modifier = {	#Weight down for stress.
				add = -25
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = rakish
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = deviant
			}
			modifier = {	#Weight down for stress.
				add = -10
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = -10
				has_trait = shy
			}
        }
    }
	
	option = { # Seclude yourself
        name = harem_politics.0016.f
		trait = reclusive
		trait = shy
		trait = chaste
		trigger = {
			OR = {
				has_trait = reclusive
				has_trait = shy
				has_trait = chaste
			}
		}
		
		hidden_effect = {
			scope:performer_1 = {
				if = {
					limit = {
						opinion = {
							target = root
							value >= 10
						}
					}	
					add_opinion = {
						target = root
						modifier = disappointed_opinion
						opinion = -5
					}
				}
			}
			scope:performer_2 = {
				if = {
					limit = {
						opinion = {
							target = root
							value >= 10
						}
					}	
					add_opinion = {
						target = root
						modifier = disappointed_opinion
						opinion = -5
					}
				}
			}
			scope:performer_3 = {
				if = {
					limit = {
						opinion = {
							target = root
							value >= 10
						}
					}	
					add_opinion = {
						target = root
						modifier = disappointed_opinion
						opinion = -5
					}
				}
			}
			scope:harem_head = {
				if = {
					limit = {
						opinion = {
							target = root
							value >= 10
						}
					}	
					add_opinion = {
						target = root
						modifier = disappointed_opinion
						opinion = -5
					}
				}
			}
		}
		
		add_prestige = medium_prestige_loss
		stress_impact = {
			reclusive = minor_stress_impact_loss
			shy = minor_stress_impact_loss
			chaste = minor_stress_impact_loss
			
			brave = minor_stress_impact_gain
			lustful = minor_stress_impact_gain
			rakish = minor_stress_impact_gain
			deviant = minor_stress_impact_gain
		}
        ai_chance = {
            base = 100
			modifier = {	#Tribal rulers value their prestige the most
				add = -15
				government_has_flag = government_is_tribal
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = brave
			}
            modifier = {	#Weight down for stress.
				add = -25
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = rakish
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = deviant
			}
			modifier = {	#Weight up for stress.
				add = 50
				has_trait = chaste
			}
			modifier = {	#Weight up for stress.
				add = 50
				has_trait = shy
			}
			modifier = {	#Weight up for stress.
				add = 80
				has_trait = reclusive
			}
        }
    }
	after = {
		add_character_flag = {
			flag = flag_performing_consorts_event
			years = 4
		}
	}
}

########################
##Meeting Consort Ling##
########################

##She's a maid##
harem_politics.0017 = {
	type = character_event
	title = harem_politics.0009.t
	desc = {
		desc = harem_politics.0017.start.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:yanwan = {
						is_male = yes
					}
				}
				desc = harem_politics.0017.seamster.desc
			}
			triggered_desc = {
				desc = harem_politics.0017.seamstress.desc
			}
		}
		desc = harem_politics.0017.end.desc
	}
	theme = seduce_scheme
	override_background = {
		reference = study
	}
	
	left_portrait  = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:yanwan
		animation = flirtation
	}
	
	trigger = {
		NOR = {
        	any_consort = {
	        	has_character_flag = flag_yanwan
	        }
			has_character_flag = met_yanwan_maid_servant
	    }
		allowed_more_concubines = yes
		is_physically_able_adult = yes
		is_at_war = no
		highest_held_title_tier >= tier_kingdom
		is_travelling = no
	}
	
	immediate = {
		save_scope_as = harem_liege
		#Create Yanwan
		if = {
			limit = { is_male = yes }
			create_character = {
				location = root.capital_province
				template = yanwan_template
				gender = female
				save_scope_as = yanwan
			}
		}
		else_if = {
			limit = { is_female = yes }
			create_character = {
				location = root.capital_province
				template = yanwan_template
				gender = male
				save_scope_as = yanwan
			}
		}
		hidden_effect = {
			add_courtier = scope:yanwan
		}
	}
	
	option = { #Take Yanwan as a concubine
        name = harem_politics.0017.a
		trigger = {
			allowed_more_concubines = yes
		}
		save_scope_as = actor
		save_scope_as = secondary_actor
		scope:yanwan = {
			if = {
				limit = {
					root = {
						any_consort = {
							is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
							count >= 3
						}
					}
				}
				set_variable = {
					name = favor
					value = initial_favor_valuation
				}
			}
			calyver_favor_minor_gain_effect = yes
			add_opinion = {
				target = root
				modifier = grateful_opinion
				opinion = 10
			}
			add_character_flag = flag_yanwan
        	save_scope_as = recipient
        }
		calyver_concubine_on_accept_effect = yes
		make_concubine = scope:recipient
		had_sex_with_effect = {
			CHARACTER = scope:yanwan
			PREGNANCY_CHANCE = pregnancy_chance
		}
		hidden_effect = {
			every_consort = {
				limit = {
					AND = {
						NOR = {
							this = scope:yanwan
							has_relation_best_friend = root
							has_relation_soulmate = root
						}
						harem_politics_evil_consort_trigger = yes
						OR = {
							accepts_concubinage = yes
							accepts_polygamy = yes
						}
					}
				}
				add_opinion = {
					target = scope:yanwan
					modifier = jealousy_opinion
					opinion = -10
				}
			}
		}
		stress_impact = {
			chaste = minor_stress_impact_gain 
			arrogant = minor_stress_impact_gain 
			paranoid = minor_stress_impact_gain 
			temperate = minor_stress_impact_gain 
			shy = minor_stress_impact_gain 
			craven = minor_stress_impact_gain 
		}
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = -0.05
				ai_honor = -0.05
				ai_boldness = 0.1
				ai_greed = 0.1
   			}
            modifier = {
            	add = 10
            	opinion = {
            		target = scope:yanwan
            		value >= low_positive_opinion
            	}
            }
			modifier = {
            	add = 10
            	opinion = {
            		target = scope:yanwan
            		value >= medium_positive_opinion
            	}
            }
			compatibility_modifier = { #Trait compatibility
				who = root
				compatibility_target = scope:yanwan
				min = -20
				max = 20
				multiplier = 2
			}

            modifier = {	#Weight down for stress.
				add = 15
				has_trait = lustful
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = craven
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = chaste
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = paranoid
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = arrogant
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = temperate
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = shy
			}
			modifier = {
				NOT = { root = { is_attracted_to_gender_of = scope:yanwan } }
				factor = 0
			}
        }
    }
	
	option = { # Ignore her
        name = harem_politics.0017.b
		hidden_effect = {
			scope:yanwan = {
				death = {
					death_reason = death_vanished
				}
			}
		}
        stress_impact = {
        	lustful = minor_stress_impact_gain
        }
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = 0.1
				ai_honor = 0.1
				ai_boldness = -0.05
				ai_greed = -0.05
   			}
			opinion_modifier = {
				opinion_target = scope:yanwan
				multiplier = 0.30
			}
            modifier = {	#Weight down for stress.
				add = -25
				has_trait = lustful
			}
			modifier = {
				add = 15
				has_trait = temperate
			}
			modifier = {	#Weight down for stress.
				add = 15
				has_trait = chaste
			}
        }
    }
	after = {
		add_character_flag = met_yanwan_maid_servant
	}
}

##She's singing in the gardens##
harem_politics.0018 = {
	type = character_event
	title = consort_events.0006.t
	desc = harem_politics.0018.desc
	theme = seduce_scheme
	override_background = {
		reference = garden
	}
	
	right_portrait = { 	
		character = scope:yanwan
		animation = flirty
	}
	left_portrait = { 	
		character = root
		animation = personality_content
	}
	
	trigger = {
		exists = primary_spouse
		primary_spouse = {
			NOT = {
				this = scope:yanwan
			}
		}
		scope:yanwan = {
			is_consort_of = root
			is_courtier_of = root
			is_physically_able_adult = yes
			
			NOR = {				
				has_trait = pregnant
				has_trait = ill
				has_trait = wounded
				
				has_character_flag = flag_scolded_consort
				has_character_modifier = recently_tortured
				has_character_modifier = hunt_tasted_the_belt_modifier
				has_character_modifier = sleep_deprived_modifier
				has_character_modifier = intrigue_starved_and_deprived_modifier
			}
			
			OR = { 
				AND = {
					is_travelling = yes
					current_travel_plan ={
						travel_plan_owner = root
					}
				}
				AND = {
					is_travelling = no
					root = {
						is_travelling = no
					}
				}
			}
		}
		has_character_modifier = mourner_modifier
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
	}
	
	immediate = {
		save_scope_as = harem_liege
	}
	
	option = { #Sleep with Yanwan
        name = harem_politics.0018.a
		
		had_sex_with_effect = {
			CHARACTER = scope:yanwan
			PREGNANCY_CHANCE = pregnancy_chance
		}
		
		scope:yanwan = {
			calyver_favor_minor_gain_effect = yes
			random_list = {
				50 = { #Progress towards lovers
					simple_attraction_modifier = {
						WHO = scope:yanwan
						TARGET = root
						MAX_PERSONALITY = 60 # -60 at low trait combatibility, +150 at high trait combatibility.
						MAX_PHYSICAL = 60 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
					}
					opinion_modifier = {
						opinion_target = root
						min = -50
						max = 50
						multiplier = 0.5
					}
					opinion_modifier = {
						who = root
						opinion_target = scope:yanwan
						min = -50
						max = 50
						multiplier = 0.5
					}
					modifier = {
						NOT = { root = { is_attracted_to_gender_of = scope:yanwan } }
						factor = 0
					}
					modifier = {
						NOT = { is_attracted_to_gender_of = root }
						factor = 0
					}
					if = {
						limit = {
							NOR = {
								has_relation_lover = root
								has_relation_soulmate = root
								has_relation_potential_lover = root
							}
						}
						set_relation_potential_lover = root
					}
					add_opinion = {
						target = root
						modifier = romance_opinion
						opinion = 5
					}
				}
				50 = { #Nothing
					
				}
			}
		}
		
		hidden_effect = {
			every_consort = {
				limit = {
					NOR = {
						this = scope:yanwan
						has_relation_best_friend = scope:yanwan
						has_relation_friend = scope:yanwan
						has_relation_soulmate = scope:yanwan
						has_relation_lover = scope:yanwan
					}
				}
				add_opinion = {
					target = scope:yanwan
					modifier = insolent_consort_opinion
					opinion = -5
				}
			}
		}
		
		stress_impact = {
			chaste = minor_stress_impact_gain 
			shy = minor_stress_impact_gain 
			zealous = minor_stress_impact_gain 
			deviant = minor_stress_impact_loss 
			temperate = minor_stress_impact_gain 
			craven = minor_stress_impact_gain 
		}
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = -0.10
				ai_honor = -0.1
				ai_greed = 0.1
   			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:yanwan
				min = -40
				max = 40
				multiplier = 1
			}
			
			modifier = { #Stress management
				has_trait = deviant
				add = 25
			}
			modifier = { #Stress management
				has_trait = lustful
				add = 25
			}
			modifier = { #Stress management
				has_trait = rakish
				add = 25
			}
			modifier = { #Stress management
				has_trait = chaste
				add = -25
			}
			modifier = { #Stress management
				has_trait = shy
				add = -25
			}
			modifier = {	#Weight down for stress.
				add = -25
				has_trait = craven
			}
			modifier = { #Stress management
				has_trait = zealous
				add = -25
			}
			modifier = { #Stress management
				has_trait = temperate
				add = -25
			}
			modifier = { #Stress management
				has_trait = calm
				add = -15
			}
			
			compatibility_modifier = { #Trait compatibility
				who = root
				compatibility_target = scope:yanwan
				min = -20
				max = 20
				multiplier = 2
			}
        }
    }
	
	#Torture them
	option = {
		name = harem_politics.0018.b
		
		stress_impact = {
			compassionate = miniscule_stress_impact_gain
			forgiving = miniscule_stress_impact_gain
			calm = miniscule_stress_impact_gain
			sadistic = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			wrathful = minor_stress_impact_loss
			vengeful = minor_stress_impact_loss
		}
		
		add_dread = minor_dread_gain
		
		save_scope_as = secondary_actor
		scope:yanwan = {
			calyver_favor_medium_loss_effect = yes
			if = {
				limit = {
					NOR = {
						has_relation_rival = root
						has_relation_potential_rival = root
						has_relation_nemesis = root
					}
				}
				set_relation_potential_rival = root
			}
			add_character_modifier = {
				modifier = hunt_tasted_the_belt_modifier
				years = 2
			}
			add_opinion = {
				target = root
				modifier = cruelty_opinion
				opinion = -20
			}
			save_scope_as = secondary_recipient
		}
		
		hidden_effect = {
			every_consort = {
				limit = {
					NOT = {
						this = scope:yanwan
					}
				}
				send_interface_toast = {
					type = event_generic_bad
					title = punished_consort_t
					right_icon = scope:secondary_recipient
					left_icon = scope:secondary_actor
					custom_tooltip = punished_consort_severe_desc
				}
			}
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.15
			}

			opinion_modifier = { #Opinion
				opinion_target = scope:yanwan
				min = -30
				max = 30
				multiplier = -1
			}
			modifier = { #Stress management
				has_trait = calm
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = 25
			}
			modifier = { #Stress management
				has_trait = callous
				add = 25
			}
			modifier = { #Stress management
				has_trait = wrathful
				add = 25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = 25
			}
			modifier = { #Stress management
				has_trait = zealous
				add = 25
			}
			
			modifier = { #Mothers are important
				scope:yanwan = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -15
			}
			
			modifier = { #More if the consort is not important
				scope:yanwan = {
					any_close_or_extended_family_member = {
						NOR = {
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 20
			}

			modifier = { #More if good contacts
				scope:yanwan = {
					NOR = {
						has_relation_friend = root
						has_relation_best_friend = root
						has_relation_lover = root
						has_relation_soulmate = root
						
						AND = {
							exists = mother
							OR = {
								has_relation_friend = mother
								has_relation_best_friend = mother
								has_relation_lover = mother
								has_relation_soulmate = mother
							}
						}
						
						AND = {
							exists = father
							OR = {
								has_relation_friend = father
								has_relation_best_friend = father
								has_relation_lover = father
								has_relation_soulmate = father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			
		}
	}
	
	#Deprive them from sleep
	option = {
		name = harem_politics.0018.c
		
		stress_impact = {
			compassionate = miniscule_stress_impact_gain
			forgiving = miniscule_stress_impact_gain
			calm = miniscule_stress_impact_gain
		}
		
		save_scope_as = secondary_actor
		scope:valid_target_consort = {
			calyver_favor_moderate_loss_effect = yes
			if = {
				limit = {
					NOR = {
						has_relation_rival = root
						has_relation_potential_rival = root
						has_relation_nemesis = root
					}
				}
				set_relation_potential_rival = root
			}
			add_character_modifier = {
				modifier = sleep_deprived_modifier
				years = 2
			}
			add_opinion = {
				target = root
				modifier = cruelty_opinion
				opinion = -10
			}
			save_scope_as = secondary_recipient
		}
		
		hidden_effect = {
			every_consort = {
				limit = {
					NOT = {
						this = scope:yanwan
					}
				}
				send_interface_toast = {
					type = event_generic_bad
					title = punished_consort_t
					right_icon = scope:secondary_recipient
					left_icon = scope:secondary_actor
					custom_tooltip = punished_consort_desc
				}
			}
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = 0.15
			}

			opinion_modifier = { #Opinion
				opinion_target = scope:yanwan
				min = -20
				max = 20
				multiplier = -1
			}
			modifier = { #Stress management
				has_trait = calm
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = -10
			}
			modifier = { #Stress management
				has_trait = callous
				add = -10
			}
			modifier = { #Stress management
				has_trait = wrathful
				add = -10
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = -10
			}
			modifier = { #Traits
				has_trait = diligent
				add = 20
			}
			modifier = { #Traits
				has_trait = just
				add = 10
			}
			modifier = { #Traits
				has_trait = zealous
				add = 15
			}
			
			modifier = { #Mothers are important
				scope:yanwan = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 10
			}
			
			modifier = { #More if the consort is not important
				scope:yanwan = {
					any_close_or_extended_family_member = {
						NOR = {
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}

			modifier = { #More if good contacts
				scope:yanwan = {
					NOR = {
						has_relation_friend = root
						has_relation_best_friend = root
						has_relation_lover = root
						has_relation_soulmate = root
						
						AND = {
							exists = mother
							OR = {
								has_relation_friend = mother
								has_relation_best_friend = mother
								has_relation_lover = mother
								has_relation_soulmate = mother
							}
						}
						
						AND = {
							exists = father
							OR = {
								has_relation_friend = father
								has_relation_best_friend = father
								has_relation_lover = father
								has_relation_soulmate = father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 5
			}
		}
	}
	
	#Lecture them
	option = {
		name = consort_events.0001.c
		stress_impact = {
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
			vengeful = minor_stress_gain
			zealous = minor_stress_gain
		}
		scope:valid_target_consort = {
			calyver_favor_minor_loss_effect = yes
			add_opinion = {
				target = root
				modifier = scolded_me_opinion
				opinion = -5
			}
			add_character_flag = {
			flag = flag_scolded_consort
				years = 1
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = -0.15
			}

			opinion_modifier = { #Opinion
				opinion_target = scope:yanwan
				min = -40
				max = 40
				multiplier = 1
			}
			modifier = { #Stress management
				has_trait = calm
				add = 25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = 25
			}
			modifier = { #Stress management
				has_trait = compassionate
				add = 25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = wrathful
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = -25
			}
			modifier = { #Stress management
				has_trait = zealous
				add = -25
			}
			modifier = { #Traits
				has_trait = just
				add = -10
			}
			
			modifier = { #Mothers are important
				scope:yanwan = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 15
			}
			
			modifier = { #More if the consort is not important
				scope:yanwan = {
					any_close_or_extended_family_member = {
						OR = {
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}

			modifier = { #More if good contacts
				scope:yanwan = {
					OR = {
						has_relation_friend = root
						has_relation_best_friend = root
						has_relation_lover = root
						has_relation_soulmate = root
						
						AND = {
							exists = mother
							OR = {
								has_relation_friend = mother
								has_relation_best_friend = mother
								has_relation_lover = mother
								has_relation_soulmate = mother
							}
						}
						
						AND = {
							exists = father
							OR = {
								has_relation_friend = father
								has_relation_best_friend = father
								has_relation_lover = father
								has_relation_soulmate = father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
		}
	}
	
}

############################
##Yu disrespects Zhen Huan##
############################

scripted_trigger harem_politics_yu_daying_trigger = {
	is_physically_able_ai_adult = yes
	is_healthy = yes
	harem_politics_evil_consort_trigger = yes
	
	has_character_flag = flag_new_consort
	age <= 21
	is_demoted_consort_trigger = no
	
	any_child = {
		count =0
	}
	
	OR = {
		accepts_concubinage = yes
		accepts_polygamy = yes
	}
	
	NOR = {
		AND = {	
			exists = root.primary_spouse
			this = root.primary_spouse
		}
		has_court_position = grand_consort_court_position
		
		has_trait = lunatic_1
		has_trait = lunatic_genetic
		has_trait = possessed_1
		has_trait = possessed_genetic
		
		has_trait = beauty_bad
		has_trait = pregnant
		
		has_trait = craven
		has_trait = shy
		has_trait = wounded
		has_trait = ill

		has_character_modifier = unfavored_consort_modifier
		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
		
		any_close_or_extended_family_member = {
			OR = {
				AND = {	
					exists = root.primary_spouse
					this = root.primary_spouse
				}
				is_powerful_vassal_of = root
				is_councillor_of = root
				is_parent_of = root
				is_liege_or_above_of = root
			}
		}
		
		has_relation_nemesis = root
		has_relation_rival = root
		has_relation_potential_rival = root
	}
	
	is_courtier_of = root
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger harem_politics_wan_changzai_trigger = {
	is_physically_able_ai_adult = yes
	is_healthy = yes
	is_demoted_consort_trigger = no
	
	age <= 21
	
	any_child = {
		count =0
	}
	
	OR = {
		accepts_concubinage = yes
		accepts_polygamy = yes
	}
	
	NOR = {
		AND = {	
			exists = root.primary_spouse
			this = root.primary_spouse
		}
		this = $YU_DAYING$
		
		has_relation_best_friend = $YU_DAYING$
		has_relation_friend = $YU_DAYING$
		has_relation_potential_friend = $YU_DAYING$
		
		has_relation_soulmate = $YU_DAYING$
		has_relation_lover = $YU_DAYING$
		has_relation_soulmate = $YU_DAYING$
	
		has_court_position = grand_consort_court_position
		
		has_character_modifier = favored_consort_modifier
		
		has_trait = lunatic_1
		has_trait = lunatic_genetic
		has_trait = possessed_1
		has_trait = possessed_genetic
		
		has_trait = beauty_bad
		has_trait = pregnant
		has_trait = wounded
		has_trait = ill

		has_character_flag = flag_scolded_consort
		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
		
		any_close_or_extended_family_member = {
			OR = {
				AND = {	
					exists = root.primary_spouse
					this = root.primary_spouse
				}
				is_powerful_vassal_of = root
				is_councillor_of = root
				is_parent_of = root
				is_liege_or_above_of = root
			}
		}
		has_relation_best_friend = root
		has_relation_friend = root
		
		has_relation_soulmate = root
		has_relation_lover = root
		has_relation_potential_lover = root
		
		has_relation_nemesis = root
		has_relation_rival = root
		has_relation_potential_rival = root
	}
	
	is_courtier_of = root
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

harem_politics.0019 = {
	type = character_event
	title = harem_politics.0019.t
	desc = {
		desc = harem_politics.0019.start.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:yu_daying = {
						is_concubine = yes
					}
				}
				desc = harem_politics.0019.concubine.desc
			}
			triggered_desc = {
				desc = harem_politics.0019.spouse.desc
			}
		}
		desc = harem_politics.0019.end.desc
	}
	theme = unfriendly
	override_background = {
		reference = garden
	}
	
	right_portrait = { 	
		character = scope:zhen_huan
		animation = shock
	}
	left_portrait = { 	
		character = scope:yu_daying
		animation = rage
	}
	
	trigger = {
		any_consort = {
			count >= 4
		}
		OR = {
			AND = {
				accepts_concubinage = yes
				any_concubine = {
					harem_politics_yu_daying_trigger = yes
					save_temporary_scope_as = temporary_yu_daying
				}
				any_concubine = {
					harem_politics_wan_changzai_trigger = { YU_DAYING = scope:temporary_yu_daying }
				}
			}
			AND = {
				accepts_polygamy = yes
				accepts_concubinage = no
				any_spouse = {
					harem_politics_yu_daying_trigger = yes
					save_temporary_scope_as = temporary_yu_daying
				}
				any_spouse = {
					harem_politics_wan_changzai_trigger = { YU_DAYING = scope:temporary_yu_daying }
				}
			}
		}
		
		NOR = {	
			has_character_modifier = mourner_modifier
			has_character_flag = had_yu_event_flag
		}
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
	}
	
	immediate = {
		save_scope_as = harem_liege
		if = {
			limit = {
				accepts_concubinage = yes
			}
			every_concubine = {
				add_to_list = consort_list
			}
		}
		else_if = {
			limit = {
				accepts_polygamy = yes
				accepts_concubinage = no
			}
			every_spouse = {
				add_to_list = consort_list
			}
		}
		random_in_list = { #Yu Daying
			list = consort_list
			limit = {
				harem_politics_yu_daying_trigger = yes
			}
			weight = {
				base = 10
				
				modifier = { #She was a servant
					is_lowborn = yes
					add = 10
				}

				modifier = {
					has_trait = intellect_bad
					add = 20
				}
				modifier = {
					has_trait = beauty_good
					add = 10
				}
				modifier = {
					has_trait = arrogant
					add = 20
				}
				modifier = {
					has_trait = ambitious
					add = 20
				}
				modifier = {
					has_trait = greedy
					add = 20
				}
				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 20
				}
			}
			save_scope_as = yu_daying
		}
		random_in_list = { #Zhen Huan
			list = consort_list
			limit = {
				harem_politics_wan_changzai_trigger = { YU_DAYING = scope:yu_daying }
			}
			weight = {
				base = 10
				
				modifier = {
					has_character_modifier = unfavored_consort_modifier
					add = 20
				}
				modifier = {
					OR = {	
						has_relation_potential_rival = scope:yu_daying
						has_relation_rival = scope:yu_daying
						has_relation_nemesis = scope:yu_daying
					}
					add = 15
				}
				opinion_modifier = { #Opinion
					WHO = scope:yu_daying
					opinion_target = prev
					min = 0
					max = 50
					multiplier = -0.50
				}
				compatibility_modifier = {
					compatibility_target = scope:yu_daying
					multiplier = -2
					min = 1
					max = 30
				}
				
				modifier = {
					is_lowborn = no
					add = 10
				}

				modifier = {
					has_trait = intellect_good
					add = 20
				}
				modifier = {
					has_trait = beauty_good
					add = 10
				}
				modifier = {
					has_trait = humble
					add = 20
				}
				modifier = { #Zhen Huan isn't craven
					NOR = {
						has_trait = craven
						has_trait = shy
					}
					add = 20
				}
			}
			save_scope_as = zhen_huan
		}

		scope:yu_daying = {
			if = {
				limit = {
					can_set_relation_potential_rival_trigger = { CHARACTER = scope:zhen_huan }
				}
				set_relation_potential_rival = scope:zhen_huan
			}
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 2
			}
			hidden_effect = {
				add_opinion = {
					target = scope:zhen_huan
					modifier = insolent_consort_opinion
					opinion = -10
				}
			}
		}
		scope:zhen_huan = {
			add_character_modifier = {
				modifier = unfavored_consort_modifier
				years = 2
			}
			hidden_effect = {
				add_opinion = {
					target = scope:yu_daying
					modifier = insolent_consort_opinion
					opinion = -10
				}
			}
		}
	}
	
	option = { #Dismiss Yu
        name = harem_politics.0019.a
		flavor = harem_politics.0019.a_tt
		trigger = {
			scope:yu_daying = {
				is_concubine = yes
			}
		}
		save_scope_as = actor
		scope:yu_daying = {
			save_scope_as = recipient
			if = {
				limit = { has_character_flag = flag_new_consort }
				remove_character_flag = flag_new_consort
			}
			#Dismissed consorts
			hidden_effect = {
				if = { #Favored
					limit = {
						has_character_modifier = favored_consort_modifier
					}
					remove_character_modifier = favored_consort_modifier
				}
				if = { #Unfavored
					limit = {
						has_character_modifier = unfavored_consort_modifier
					}
					remove_character_modifier = unfavored_consort_modifier
				}
				if = { #Mourner
					limit = {
						has_character_modifier = mourner_modifier
					}
					remove_character_modifier = mourner_modifier
				}
				if = { #Scolded
					limit = { has_character_flag = flag_scolded_consort }
					remove_character_flag = flag_scolded_consort
				}
				
				# Being thrown aside is humiliating, even if you didn't want to be a concubine in the first place.
				add_opinion = {
					modifier = set_me_aside_opinion
					target = scope:actor
				}
				add_opinion = {
					modifier = hatred_spouse_opinion
					target = scope:zhen_huan
				}

				# Figure out where we should go now that we're no longer a concubine.
				if = {
					limit = {
						is_councillor_of = scope:actor
					}
					# Then they should remain in court
				}
				else_if = { #Dismiss to relevant court, or to pool
					limit = {
						any_close_family_member = {
							is_landed = yes
						}
					}
					random_close_family_member = {
						limit = {
							is_child_of = scope:recipient
							is_landed = yes
						}
						alternative_limit = {
							is_parent_of = scope:recipient
							is_landed = yes
						}
						alternative_limit = {
							is_landed = yes
						}
						add_courtier = scope:recipient
					}
				}
				else = {
					move_to_pool = yes
				}
			}
			
			#Yu becomes rivals with Zhen Huan
			if = {
				limit = {
					can_set_relation_rival_trigger = { CHARACTER = scope:zhen_huan }
				}
				set_relation_rival = { 
					reason = consort_rival_reason
					target = scope:zhen_huan
				}
			}
		}
		hidden_effect = {
			send_interface_toast = {
				type = event_generic_neutral
				title = msg_concubine_dismissed_title
				right_icon = scope:recipient
				remove_concubine = scope:recipient
			}
		}
		
		scope:zhen_huan = {
			calyver_favor_medium_gain_effect = yes
			remove_character_modifier = unfavored_consort_modifier
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 2
			}
			add_opinion = {
				target = root
				modifier = thankful_consort_opinion
			}
			if = {
				limit = {
					NOT = {
						has_relation_soulmate = root
						has_relation_lover = root
						has_relation_potential_lover = root
					}
				}
				set_relation_potential_lover = root
			}
		}
		
		
		
		stress_impact = {
			forgiving = minor_stress_impact_gain 
			compassionate = minor_stress_impact_gain 
			calm = minor_stress_impact_gain
			vengeful = minor_stress_impact_loss
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = 0.10
				ai_honor = 0.1
				ai_greed = -0.1
   			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:zhen_huan
				min = -40
				max = 40
				multiplier = 1
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:yu_daying
				min = -40
				max = 40
				multiplier = -1
			}
			
			modifier = { #Stress management
				has_trait = calm
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = 25
			}
			modifier = { #Stress management
				has_trait = just
				add = 25
			}
			
			modifier = { #Harem size
				number_of_concubines <= number_of_desired_concubines
				add = -20
			}
			
        }
    }
	
	option = { #Divorce Yu
		name = harem_politics.0019.b
		flavor = harem_politics.0019.b_tt
		trigger = {
			scope:yu_daying = {
				is_spouse_of = root
			}
			faith = {
				# We are not required to seek approval of a spiritual HoF
				NAND = {
					has_doctrine = doctrine_divorce_approval
					has_doctrine = doctrine_spiritual_head
					exists = religious_head
				}
				# We are not required to seek approval of a house head
				NAND = {
					has_doctrine = doctrine_divorce_approval
					exists = root.house
					exists = root.house.house_head
					root = { is_house_head = no }
				}
			}
			NOR = {
				culture = {
					has_cultural_parameter = cannot_divorce
				}
				faith = {
					has_doctrine = doctrine_divorce_disallowed
				}
			}
		}
		save_scope_as = actor
		scope:yu_daying = {
			save_scope_as = recipient
		}
		divorce_effect = {
			DIVORCER = scope:actor
			DIVORCEE = scope:recipient
		}
		scope:recipient = {
			trigger_event = marriage_interaction.0030
			#Yu becomes rivals with Zhen Huan
			if = {
				limit = {
					can_set_relation_rival_trigger = { CHARACTER = scope:zhen_huan }
				}
				set_relation_rival = { 
					reason = consort_rival_reason
					target = scope:zhen_huan
				}
			}
		}
		scope:zhen_huan = {
			calyver_favor_medium_gain_effect = yes
			remove_character_modifier = unfavored_consort_modifier
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 2
			}
			add_opinion = {
				target = root
				modifier = thankful_consort_opinion
			}
			if = {
				limit = {
					NOT = {
						has_relation_soulmate = root
						has_relation_lover = root
						has_relation_potential_lover = root
					}
				}
				set_relation_potential_lover = root
			}
		}
		
		stress_impact = {
			forgiving = minor_stress_impact_gain 
			compassionate = minor_stress_impact_gain 
			calm = minor_stress_impact_gain
			vengeful = minor_stress_impact_loss
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = 0.10
				ai_honor = 0.1
				ai_greed = -0.1
   			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:zhen_huan
				min = -40
				max = 40
				multiplier = 1
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:yu_daying
				min = -40
				max = 40
				multiplier = -1
			}
			
			modifier = { #Stress management
				has_trait = calm
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = 25
			}
			modifier = { #Stress management
				has_trait = just
				add = 25
			}			
        }
	}
	
	#To the dungeon with Yu
	option = {
		name = harem_politics.0019.c
		
		imprison = {
			target = scope:yu_daying
			type = dungeon
		}
		
		scope:yu_daying = {
			calyver_favor_big_loss_effect = yes
			hidden_effect = {
				if = { #Favored
					limit = {
						has_character_modifier = favored_consort_modifier
					}
					remove_character_modifier = favored_consort_modifier
				}
				add_opinion = {
					modifier = hatred_spouse_opinion
					target = scope:zhen_huan
				}
			}
			add_character_modifier = {
				modifier = unfavored_consort_modifier
				years = 3
			}
			add_opinion = {
				target = root
				modifier = cruelty_opinion
				opinion = -15
			}
			#Yu becomes rivals with Zhen Huan
			if = {
				limit = {
					can_set_relation_rival_trigger = { CHARACTER = scope:zhen_huan }
				}
				set_relation_rival = { 
					reason = consort_rival_reason
					target = scope:zhen_huan
				}
			}
		}
		
		scope:zhen_huan = {
			calyver_favor_medium_gain_effect = yes
			remove_character_modifier = unfavored_consort_modifier
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 2
			}
			
			if = {
				limit = {
					NOR = {
						has_trait = compassionate
						has_trait = forgiving
					}
				}
				add_opinion = {
					target = root
					modifier = thankful_consort_opinion
				}
				if = {
					limit = {
						NOT = {
							has_relation_soulmate = root
							has_relation_lover = root
							has_relation_potential_lover = root
						}
					}
					set_relation_potential_lover = root
				}
			}
			else = {
				add_opinion = {
					target = root
					modifier = cruelty_opinion
					opinion = -10
				}
			}
		}
		
		
		
		stress_impact = {
			forgiving = minor_stress_impact_gain 
			compassionate = minor_stress_impact_gain 
			calm = minor_stress_impact_gain
			vengeful = minor_stress_impact_loss
		}
		
		ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = 0.10
				ai_honor = 0.1
				ai_greed = 0.1
   			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:zhen_huan
				min = -40
				max = 40
				multiplier = 1
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:yu_daying
				min = -40
				max = 40
				multiplier = -1
			}
			
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = calm
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = 25
			}
			modifier = { #Stress management
				has_trait = just
				add = 25
			}
			modifier = { #Stress management
				has_trait = callous
				add = 10
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = 10
			}
			
			modifier = { #Harem size
				number_of_concubines <= number_of_desired_concubines
				add = -50
			}
			
        }
	}
	
	#Torture Yu
	option = {
		name = harem_politics.0019.d
		trait = callous
		trait = vengeful
		trait = sadistic
		trait = wrathful
		trigger = {
			OR = {
				has_trait = callous
				has_trait = vengeful
				has_trait = sadistic
				has_trait = wrathful
			}
		}
		
		stress_impact = {
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			calm = minor_stress_impact_gain
			sadistic = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			wrathful = minor_stress_impact_loss
			vengeful = minor_stress_impact_loss
		}
		
		add_dread = minor_dread_gain
		
		save_scope_as = secondary_actor
		scope:yu_daying = {
			calyver_favor_big_loss_effect = yes
			if = {
				limit = {
					NOR = {
						has_relation_rival = root
						has_relation_potential_rival = root
						has_relation_nemesis = root
					}
				}
				set_relation_potential_rival = root
			}
			add_character_modifier = {
				modifier = hunt_tasted_the_belt_modifier
				years = 5
			}
			add_opinion = {
				target = root
				modifier = cruelty_opinion
				opinion = -20
			}
			save_scope_as = secondary_recipient
			hidden_effect = {
				if = { #Favored
					limit = {
						has_character_modifier = favored_consort_modifier
					}
					remove_character_modifier = favored_consort_modifier
				}
				add_character_modifier = {
					modifier = unfavored_consort_modifier
					years = 3
				}
				add_opinion = {
					modifier = hatred_spouse_opinion
					target = scope:zhen_huan
				}
			}
			#Yu becomes rivals with Zhen Huan
			if = {
				limit = {
					can_set_relation_rival_trigger = { CHARACTER = scope:zhen_huan }
				}
				set_relation_rival = { 
					reason = consort_rival_reason
					target = scope:zhen_huan
				}
			}
		}
		
		scope:zhen_huan = {
			calyver_favor_medium_gain_effect = yes
			remove_character_modifier = unfavored_consort_modifier
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 2
			}
			
			if = {
				limit = {
					NOR = {
						has_trait = compassionate
						has_trait = forgiving
					}
				}
				add_opinion = {
					target = root
					modifier = thankful_consort_opinion
				}
				if = {
					limit = {
						NOT = {
							has_relation_soulmate = root
							has_relation_lover = root
							has_relation_potential_lover = root
						}
					}
					set_relation_potential_lover = root
				}
			}
			else = {
				add_opinion = {
					target = root
					modifier = cruelty_opinion
					opinion = -10
				}
			}
		}
		
		hidden_effect = {
			every_consort = {
				limit = {
					NOT = {
						this = scope:yu_daying
					}
				}
				send_interface_toast = {
					type = event_generic_bad
					title = punished_consort_t
					right_icon = scope:secondary_recipient
					left_icon = scope:secondary_actor
					custom_tooltip = punished_consort_severe_desc
				}
			}
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.15
			}

			opinion_modifier = { #Opinion
				opinion_target = scope:yu_daying
				min = -40
				max = 40
				multiplier = -1
			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:zhen_huan
				min = -20
				max = 20
				multiplier = 1
			}
			
			modifier = { #Stress management
				has_trait = calm
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = 25
			}
			modifier = { #Stress management
				has_trait = callous
				add = 25
			}
			modifier = { #Stress management
				has_trait = wrathful
				add = 25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = 25
			}

			
			modifier = { #Mothers are important
				scope:yu_daying = {
					any_child = {
						is_child_of = root
						count >= 1
					}
				}
				add = -15
			}			
		}
	}
	
	#Lecture them
	option = {
		name = consort_events.0001.c
		stress_impact = {
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
			vengeful = minor_stress_gain
		}
		scope:yu_daying = {
			calyver_favor_minor_loss_effect = yes
			add_opinion = {
				target = root
				modifier = scolded_me_opinion
				opinion = -5
			}
			add_character_flag = {
			flag = flag_scolded_consort
				years = 1
			}
			hidden_effect = {
				if = { #Favored
					limit = {
						has_character_modifier = favored_consort_modifier
					}
					remove_character_modifier = favored_consort_modifier
				}
				add_character_modifier = {
					modifier = unfavored_consort_modifier
					years = 1
				}
				add_opinion = {
					target = scope:zhen_huan
					modifier = unfriendly_opinion
					opinion = -10
				}
			}
			
		}
		
		scope:zhen_huan = {
			calyver_favor_minor_gain_effect = yes
			remove_character_modifier = unfavored_consort_modifier
			
			if = {
				limit = {
					harem_politics_evil_consort_trigger = yes
				}
				add_opinion = {
					target = root
					modifier = disappointed_opinion
					opinion = -10
				}
			}
			else = {
				add_opinion = {
					target = root
					modifier = thankful_consort_opinion
				}
			}
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = -0.15
			}

			opinion_modifier = { #Opinion
				opinion_target = scope:yu_daying
				min = -20
				max = 20
				multiplier = 1
			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:zhen_huan
				min = -20
				max = 20
				multiplier = -1
			}
			
			modifier = { #Stress management
				has_trait = calm
				add = 25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = 25
			}
			modifier = { #Stress management
				has_trait = compassionate
				add = 25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = wrathful
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = -25
			}
			modifier = { #Stress management
				has_trait = zealous
				add = -25
			}
			modifier = { #Traits
				has_trait = just
				add = -10
			}
			
			modifier = { #Mothers are important
				scope:yu_daying = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 15
			}
		}
	}
	
	#Yu is right
	option = {
		name = harem_politics.0019.f
		
		stress_impact = {
			lazy = minor_stress_impact_loss
			forgiving = minor_stress_impact_gain
			calm = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		scope:zhen_huan = {
			calyver_favor_minor_loss_effect = yes
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -10
			}
		}
		
		scope:yu_daying = {
			calyver_favor_minor_gain_effect = yes
			add_opinion = {
				target = root
				modifier = thankful_consort_opinion
			}
			
			if = {
				limit = {
					NOR = {
						has_relation_soulmate = root
						has_relation_lover = root
						has_relation_potential_lover = root
					}
				}
				set_relation_potential_lover = root
			}
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.15
			}

			opinion_modifier = { #Opinion
				opinion_target = scope:yu_daying
				min = -30
				max = 30
				multiplier = 1
			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:zhen_huan
				min = -30
				max = 30
				multiplier = -1
			}
			
			modifier = { #Stress management
				has_trait = calm
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = wrathful
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = -25
			}
			modifier = { #Stress management
				has_trait = zealous
				add = -25
			}
			modifier = { #Traits
				has_trait = just
				add = -10
			}
			
			modifier = { #Mothers are important
				scope:yu_daying = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 15
			}
		}
	}
	
	after = {
		add_character_flag = {
			flag = had_yu_event_flag
			years = 10
		}
	}
}

################################
##Two consorts are hanging out##
################################

scripted_trigger harem_politics_walking_consort_trigger = {
	is_physically_able_ai_adult = yes
	is_healthy = yes
	is_demoted_consort_trigger = no
	
	OR = {
		accepts_concubinage = yes
		accepts_polygamy = yes
	}
	
	NOR = {
		
		has_trait = pregnant
		has_trait = lunatic_1
		has_trait = lunatic_genetic
		has_trait = possessed_1
		has_trait = possessed_genetic
		
		has_trait = wounded
		has_trait = ill

		has_character_flag = flag_scolded_consort
		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
		
		has_relation_nemesis = root
		has_relation_rival = root
		has_relation_potential_rival = root
	}
	
	is_courtier_of = root
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_effect harem_politics_consort_scope_effect = {
	random_in_list = {
		list = consort_list
		limit = {
			harem_politics_walking_consort_trigger = yes
		}
		weight = {
			base = 10
			
			modifier = { #Beautiful consorts have priority
				has_character_flag = flag_new_consort
				add = 25
			}
			
			modifier = { #Beautiful consorts have priority
				has_trait = beauty_good_1
				add = 10
			}
			modifier = { #Beautiful consorts have priority
				has_trait = beauty_good_2
				add = 15
			}
			modifier = { #Beautiful consorts have priority
				has_trait = beauty_good_3
				add = 20
			}

			modifier = {
				has_character_modifier = favored_consort_modifier
				add = 20
			}
			modifier = {
				OR = {
					has_relation_potential_friend = root
					has_relation_potential_lover = root
				}
				add = 10
			}
			modifier = {
				OR = {
					has_relation_lover = root
					has_relation_friend = root
				}
				add = 15
			}
			modifier = {
				OR = {
					has_relation_soulmate = root
					has_relation_best_friend = root
				}
				add = 20
			}
		}
		if = {
			limit = {
				NOT = {
					exists = scope:first_consort
				}
			}
			save_scope_as = first_consort
			scope:first_consort = {
				remove_from_list = consort_list
			}
		}
		else = {
			save_scope_as = second_consort
		}
	}
}

harem_politics.0020 = {
	type = character_event
	title = harem_politics.0016.t
	desc = harem_politics.0020.desc
	theme = family
	override_background = {
		reference = garden
	}
	
	right_portrait = { 	
		character = scope:first_consort
		animation = laugh
	}
	left_portrait = { 	
		character = scope:second_consort
		animation = happiness
	}
	
	trigger = {
		any_consort = {
			count >= 3
		}
		any_consort = {
			harem_politics_walking_consort_trigger = yes
			count >= 2
		}
		
		NOR = {	
			has_character_modifier = mourner_modifier
			has_character_flag = had_walking_consorts_event_flag
		}
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
	}
	
	immediate = {
		save_scope_as = harem_liege
		every_consort = {
			limit = {
				harem_politics_walking_consort_trigger = yes
			}
			add_to_list = consort_list
		}
		
		
		harem_politics_consort_scope_effect = yes
		harem_politics_consort_scope_effect = yes

		hidden_effect = {
			random = {
				chance = 100
				random_list = {
					5 = { # They were friendly
						modifier = { #Good consorts
							scope:first_consort = {
								harem_politics_evil_consort_trigger = no
							}
							add = 1
						}
						modifier = { #Good consorts
							scope:second_consort = {
								harem_politics_evil_consort_trigger = no
							}
							add = 1
						}
						modifier = { #Gregarious consorts
							scope:first_consort = {
								has_trait = gregarious
							}
							add = 2
						}
						modifier = { #Gregarious consorts
							scope:second_consort = {
								has_trait = gregarious
							}
							add = 2
						}
						modifier = { #Calm consorts
							scope:first_consort = {
								has_trait = calm
							}
							add = 1
						}
						modifier = { #Gregarious consorts
							scope:second_consort = {
								has_trait = calm
							}
							add = 1
						}
						modifier = { #Diplomatic consorts
							scope:first_consort = {
								has_character_modifier = diplomatic_consort_modifier
							}
							add = 1
						}
						modifier = { #Diplomatic consorts
							scope:second_consort = {
								has_character_modifier = diplomatic_consort_modifier
							}
							add = 1
						}
						modifier = { #Compatible consorts
							scope:first_consort = {
								trait_compatibility = {
									target = scope:second_consort
									value >= medium_positive_trait_compatibility
								}
							}
							add = 2
						}
						modifier = { #Friends
							scope:first_consort = {
								OR = {
									has_relation_potential_friend = scope:second_consort
									has_relation_friend = scope:second_consort
									has_relation_best_friend = scope:second_consort
								}
							}
							add = 2
						}
						opinion_modifier = {
							who = scope:first_consort
							opinion_target = scope:second_consort
							multiplier = 0.10
						}
						opinion_modifier = {
							who = scope:second_consort
							opinion_target = scope:first_consort
							multiplier = 0.10
						}
						
						scope:first_consort = {
							if = {
								limit = {
									can_set_relation_potential_friend_trigger = { CHARACTER = scope:second_consort }
								}
								set_relation_potential_friend = scope:second_consort
							}
							add_opinion = {
								target = scope:second_consort
								modifier = friendliness_opinion
								opinion = 5
							}
						}
						scope:second_consort = {
							add_opinion = {
								target = scope:first_consort
								modifier = friendliness_opinion
								opinion = 5
							}
						}
					}
					5 = { # They were catty
						modifier = { #Good consorts
							scope:first_consort = {
								harem_politics_evil_consort_trigger = yes
							}
							add = 1
						}
						modifier = { #Good consorts
							scope:second_consort = {
								harem_politics_evil_consort_trigger = yes
							}
							add = 1
						}
						modifier = { #Arrogant consorts
							scope:first_consort = {
								has_trait = arrogant
							}
							add = 2
						}
						modifier = { #Arrogant consorts
							scope:second_consort = {
								has_trait = arrogant
							}
							add = 2
						}
						modifier = { #Wrathful consorts
							scope:first_consort = {
								has_trait = wrathful
							}
							add = 1
						}
						modifier = { #Wrathful consorts
							scope:second_consort = {
								has_trait = wrathful
							}
							add = 1
						}
						modifier = { #Deceitful consorts
							scope:first_consort = {
								has_trait = deceitful
							}
							add = 1
						}
						modifier = { #Deceitful consorts
							scope:second_consort = {
								has_trait = deceitful
							}
							add = 1
						}
						modifier = { #Scheming consorts
							scope:first_consort = {
								has_character_modifier = scheming_consort_modifier
							}
							add = 2
						}
						modifier = { #Scheming consorts
							scope:second_consort = {
								has_character_modifier = scheming_consort_modifier
							}
							add = 2
						}
						modifier = { #Yanwan
							OR = {
								scope:first_consort = {
									has_character_flag = flag_yanwan
								}
								scope:second_consort = {
									has_character_flag = flag_yanwan
								}
							}
							add = 2
						}
						modifier = { #Compatible consorts
							scope:first_consort = {
								trait_compatibility = {
									target = scope:second_consort
									value <= low_negative_trait_compatibility
								}
							}
							add = 2
						}
						modifier = { #Rivals
							scope:first_consort = {
								OR = {
									has_relation_potential_rival = scope:second_consort
									has_relation_rival = scope:second_consort
									has_relation_nemesis = scope:second_consort
								}
							}
							add = 2
						}
						opinion_modifier = {
							who = scope:first_consort
							opinion_target = scope:second_consort
							multiplier = -0.10
						}
						opinion_modifier = {
							who = scope:second_consort
							opinion_target = scope:first_consort
							multiplier = -0.10
						}
						
						scope:first_consort = {
							if = {
								limit = {
									can_set_relation_potential_rival_trigger = { CHARACTER = scope:second_consort }
								}
								set_relation_potential_rival = scope:second_consort
							}
							add_opinion = {
								target = scope:second_consort
								modifier = unfriendly_opinion
								opinion = -10
							}
						}
						scope:second_consort = {
							add_opinion = {
								target = scope:first_consort
								modifier = unfriendly_opinion
								opinion = -10
							}
						}
					}
					1 = { # Neutral conversation
						modifier = { #Shy consorts
							scope:first_consort = {
								has_trait = shy
							}
							add = 15
						}
						modifier = { #Shy consorts
							scope:second_consort = {
								has_trait = shy
							}
							add = 15
						}
						modifier = { #Craven consorts
							scope:first_consort = {
								has_trait = craven
							}
							add = 15
						}
						modifier = { #Craven consorts
							scope:second_consort = {
								has_trait = craven
							}
							add = 15
						}
						
					}
				}
			}
		}
		
	}
	
	option = { #Spend time with first consort
        name = harem_politics.0020.a

		random_list = {
			50 = { #Progress towards lovers
				simple_attraction_modifier = {
					WHO = scope:first_consort
					TARGET = root
					MAX_PERSONALITY = 50 # -50 at low trait combatibility, +150 at high trait combatibility.
					MAX_PHYSICAL = 50 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
				}
				opinion_modifier = {
					opinion_target = scope:first_consort
					min = -50
					max = 50
					multiplier = 0.5
				}
				opinion_modifier = {
					who = scope:first_consort
					opinion_target = root
					min = -50
					max = 50
					multiplier = 0.5
				}
				modifier = {
					NOT = { scope:first_consort = { is_attracted_to_gender_of = root } }
					factor = 0
				}
				modifier = {
					NOT = { is_attracted_to_gender_of = scope:first_consort }
					factor = 0
				}
				if = {
					limit = {
						NOR = {
							has_relation_lover = scope:first_consort
							has_relation_soulmate = scope:first_consort
							has_relation_potential_lover = scope:first_consort
						}
					}
					set_relation_potential_lover = scope:first_consort
				}
				scope:first_consort = {
					calyver_favor_minor_gain_effect = yes
					add_opinion = {
						target = root
						modifier = romance_opinion
						opinion = 5
					}
				}
				add_opinion = {
					target = scope:first_consort
					modifier = romance_opinion
					opinion = 5
				}
				stress_impact = {
					base = minor_stress_impact_loss
				}
			}
			50 = { #Sleep with them
				simple_attraction_modifier = {
					WHO = scope:first_consort
					TARGET = root
					MAX_PERSONALITY = 50 # -50 at low trait combatibility, +150 at high trait combatibility.
					MAX_PHYSICAL = 50 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
				}
				opinion_modifier = {
					opinion_target = scope:first_consort
					min = -50
					max = 50
					multiplier = 0.5
				}
				opinion_modifier = {
					who = scope:first_consort
					opinion_target = root
					min = -50
					max = 50
					multiplier = 0.5
				}
				modifier = {
					OR = {
						has_relation_lover = scope:first_consort
						has_relation_soulmate = scope:first_consort
						has_relation_potential_lover = scope:first_consort
					}
					add = 15
				}
				modifier = {
					NOT = { scope:first_consort = { is_attracted_to_gender_of = root } }
					factor = 0
				}
				modifier = {
					NOT = { is_attracted_to_gender_of = scope:first_consort }
					factor = 0
				}
				had_sex_with_effect = {
					CHARACTER = scope:first_consort
					PREGNANCY_CHANCE = pregnancy_chance
				}
				scope:first_consort = {
					calyver_favor_moderate_gain_effect = yes
					add_opinion = {
						target = root
						modifier = romance_opinion
						opinion = 5
					}
				}
				add_opinion = {
					target = scope:first_consort
					modifier = romance_opinion
					opinion = 5
				}
				stress_impact = {
					base = minor_stress_impact_loss
				}
			}
			50 = { #Nothing
				
			}
		}
		
		hidden_effect = {
			scope:second_consort = {
				calyver_favor_minor_loss_effect = yes
				if = {
					limit = {
						opinion = {
							target = scope:first_consort
							value <= 10
						}
						harem_politics_evil_consort_trigger = yes
						opinion = {
							target = root
							value >= 10
						}
						OR = {
							accepts_concubinage = yes
							accepts_polygamy = yes
						}
					}				
					add_opinion = {
						target = scope:first_consort
						modifier = jealousy_opinion
						opinion = -10
					}
					if = {
						limit = {
							NOR = {
								has_relation_best_friend = scope:first_consort
								has_relation_nemesis = scope:first_consort
								has_relation_rival = scope:first_consort
								has_relation_potential_rival = scope:first_consort
								has_relation_soulmate = scope:first_consort
							}
						}
						set_relation_potential_rival = scope:first_consort
					}
				}
			}
		}
		
		
		
		stress_impact = {
			shy = minor_stress_impact_gain 
			craven = minor_stress_impact_gain 
			chaste = minor_stress_impact_gain
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = 0.10
				ai_greed = 0.1
   			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:first_consort
				min = -40
				max = 40
				multiplier = 1
			}
			
			modifier = { #Stress management
				has_trait = shy
				add = -25
			}
			modifier = { #Stress management
				has_trait = craven
				add = -25
			}
			modifier = { #Stress management
				has_trait = chaste
				add = -25
			}	
			modifier = { #Traits
				has_trait = lustful
				add = 25
			}
			modifier = {
				NOT = { is_attracted_to_gender_of = scope:first_consort }
				add = -50
			}
			modifier = {
				exists = primary_spouse
				scope:first_consort = { 
					this = root.primary_spouse
				}
				add = 10
			}
			modifier = {
				scope:first_consort = { 
					has_court_position = grand_consort_court_position
				}
				add = 5
			}
			modifier = {
				any_spouse = { 
					this = scope:first_consort
				}
				add = 5
			}
			modifier = {
				scope:first_consort = { 
					has_character_modifier = favored_consort_modifier
				}
				add = 15
			}
        }
    }
	
	option = { #Spend time with second consort
        name = harem_politics.0020.b

		random_list = {
			50 = { #Progress towards lovers
				simple_attraction_modifier = {
					WHO = scope:second_consort
					TARGET = root
					MAX_PERSONALITY = 50 # -50 at low trait combatibility, +150 at high trait combatibility.
					MAX_PHYSICAL = 50 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
				}
				opinion_modifier = {
					opinion_target = scope:second_consort
					min = -50
					max = 50
					multiplier = 0.5
				}
				opinion_modifier = {
					who = scope:second_consort
					opinion_target = root
					min = -50
					max = 50
					multiplier = 0.5
				}
				modifier = {
					NOT = { scope:second_consort = { is_attracted_to_gender_of = root } }
					factor = 0
				}
				modifier = {
					NOT = { is_attracted_to_gender_of = scope:second_consort }
					factor = 0
				}
				if = {
					limit = {
						NOR = {
							has_relation_lover = scope:second_consort
							has_relation_soulmate = scope:second_consort
							has_relation_potential_lover = scope:second_consort
						}
					}
					set_relation_potential_lover = scope:second_consort
				}
				scope:second_consort = {
					calyver_favor_minor_gain_effect = yes
					add_opinion = {
						target = root
						modifier = romance_opinion
						opinion = 5
					}
				}
				add_opinion = {
					target = scope:second_consort
					modifier = romance_opinion
					opinion = 5
				}
				stress_impact = {
					base = minor_stress_impact_loss
				}
			}
			50 = { #Sleep with them
				simple_attraction_modifier = {
					WHO = scope:second_consort
					TARGET = root
					MAX_PERSONALITY = 50 # -50 at low trait combatibility, +150 at high trait combatibility.
					MAX_PHYSICAL = 50 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
				}
				opinion_modifier = {
					opinion_target = scope:second_consort
					min = -50
					max = 50
					multiplier = 0.5
				}
				opinion_modifier = {
					who = scope:second_consort
					opinion_target = root
					min = -50
					max = 50
					multiplier = 0.5
				}
				modifier = {
					OR = {
						has_relation_lover = scope:second_consort
						has_relation_soulmate = scope:second_consort
						has_relation_potential_lover = scope:second_consort
					}
					add = 15
				}
				modifier = {
					NOT = { scope:second_consort = { is_attracted_to_gender_of = root } }
					factor = 0
				}
				modifier = {
					NOT = { is_attracted_to_gender_of = scope:second_consort }
					factor = 0
				}
				had_sex_with_effect = {
					CHARACTER = scope:second_consort
					PREGNANCY_CHANCE = pregnancy_chance
				}
				scope:second_consort = {
					calyver_favor_moderate_gain_effect = yes
					add_opinion = {
						target = root
						modifier = romance_opinion
						opinion = 5
					}
				}
				add_opinion = {
					target = scope:second_consort
					modifier = romance_opinion
					opinion = 5
				}
				stress_impact = {
					base = minor_stress_impact_loss
				}
			}
			50 = { #Nothing
				
			}
		}
		
		hidden_effect = {
			scope:first_consort = {
				calyver_favor_minor_loss_effect = yes
				if = {
					limit = {
						opinion = {
							target = scope:second_consort
							value <= 10
						}
						harem_politics_evil_consort_trigger = yes
						opinion = {
							target = root
							value >= 10
						}
						OR = {
							accepts_concubinage = yes
							accepts_polygamy = yes
						}
					}				
					add_opinion = {
						target = scope:second_consort
						modifier = jealousy_opinion
						opinion = -10
					}
					if = {
						limit = {
							NOR = {
								has_relation_best_friend = scope:second_consort
								has_relation_nemesis = scope:second_consort
								has_relation_rival = scope:second_consort
								has_relation_potential_rival = scope:second_consort
								has_relation_soulmate = scope:second_consort
							}
						}
						set_relation_potential_rival = scope:second_consort
					}
				}
			}
		}
		
		
		
		stress_impact = {
			shy = minor_stress_impact_gain 
			craven = minor_stress_impact_gain 
			chaste = minor_stress_impact_gain
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = 0.10
				ai_greed = 0.1
   			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:second_consort
				min = -40
				max = 40
				multiplier = 1
			}
			
			modifier = { #Stress management
				has_trait = shy
				add = -25
			}
			modifier = { #Stress management
				has_trait = craven
				add = -25
			}
			modifier = { #Stress management
				has_trait = chaste
				add = -25
			}	
			modifier = { #Traits
				has_trait = lustful
				add = 25
			}
			modifier = {
				NOT = { is_attracted_to_gender_of = scope:second_consort }
				add = -50
			}
			modifier = {
				exists = primary_spouse
				scope:second_consort = { 
					this = root.primary_spouse
				}
				add = 10
			}
			modifier = {
				scope:second_consort = { 
					has_court_position = grand_consort_court_position
				}
				add = 5
			}
			modifier = {
				any_spouse = { 
					this = scope:second_consort
				}
				add = 5
			}
			modifier = {
				scope:second_consort = { 
					has_character_modifier = favored_consort_modifier
				}
				add = 15
			}
        }
    }
	
	option = { #Take a walk with the two consorts
        name = harem_politics.0020.c
		random_list = {
			50 = { #Progress towards lovers
				simple_attraction_modifier = {
					WHO = scope:first_consort
					TARGET = root
					MAX_PERSONALITY = 50 # -50 at low trait combatibility, +150 at high trait combatibility.
					MAX_PHYSICAL = 50 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
				}
				opinion_modifier = {
					opinion_target = scope:first_consort
					min = -50
					max = 50
					multiplier = 0.5
				}
				opinion_modifier = {
					who = scope:first_consort
					opinion_target = root
					min = -50
					max = 50
					multiplier = 0.5
				}
				modifier = {
					NOT = { scope:first_consort = { is_attracted_to_gender_of = root } }
					factor = 0
				}
				modifier = {
					NOT = { is_attracted_to_gender_of = scope:first_consort }
					factor = 0
				}
				if = {
					limit = {
						NOR = {
							has_relation_lover = scope:first_consort
							has_relation_soulmate = scope:first_consort
							has_relation_potential_lover = scope:first_consort
						}
					}
					set_relation_potential_lover = scope:first_consort
				}
				scope:first_consort = {
					calyver_favor_minor_gain_effect = yes
					add_opinion = {
						target = root
						modifier = romance_opinion
						opinion = 5
					}
				}
				add_opinion = {
					target = scope:first_consort
					modifier = romance_opinion
					opinion = 5
				}
				stress_impact = {
					base = minor_stress_impact_loss
				}
			}
			50 = { #Nothing
				
			}
		}	
		random_list = {
			50 = { #Progress towards lovers
				simple_attraction_modifier = {
					WHO = scope:second_consort
					TARGET = root
					MAX_PERSONALITY = 50 # -50 at low trait combatibility, +150 at high trait combatibility.
					MAX_PHYSICAL = 50 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
				}
				opinion_modifier = {
					opinion_target = scope:second_consort
					min = -50
					max = 50
					multiplier = 0.5
				}
				opinion_modifier = {
					who = scope:second_consort
					opinion_target = root
					min = -50
					max = 50
					multiplier = 0.5
				}
				modifier = {
					NOT = { scope:second_consort = { is_attracted_to_gender_of = root } }
					factor = 0
				}
				modifier = {
					NOT = { is_attracted_to_gender_of = scope:second_consort }
					factor = 0
				}
				if = {
					limit = {
						NOR = {
							has_relation_lover = scope:second_consort
							has_relation_soulmate = scope:second_consort
							has_relation_potential_lover = scope:second_consort
						}
					}
					set_relation_potential_lover = scope:second_consort
				}
				scope:second_consort = {
					calyver_favor_minor_gain_effect = yes
					add_opinion = {
						target = root
						modifier = romance_opinion
						opinion = 5
					}
				}
				add_opinion = {
					target = scope:second_consort
					modifier = romance_opinion
					opinion = 5
				}
				stress_impact = {
					base = minor_stress_impact_loss
				}
			}
			50 = { #Nothing
				
			}
		}
		
		
		stress_impact = {
			shy = minor_stress_impact_gain 
			craven = minor_stress_impact_gain 
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = 0.10
				ai_greed = 0.1
   			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:first_consort
				min = -40
				max = 40
				multiplier = 1
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:second_consort
				min = -40
				max = 40
				multiplier = 1
			}
			
			modifier = { #Stress management
				has_trait = shy
				add = -25
			}
			modifier = { #Stress management
				has_trait = craven
				add = -25
			}
			modifier = { 
				has_trait = gregarious
				add = 10
			}	
        }
    }
	
	option = { #Continue with the walk
        name = harem_politics.0020.d
		scope:first_consort = {
			random_list = {
				50 = { #Disappointed
					simple_attraction_modifier = {
						WHO = scope:first_consort
						TARGET = root
						MAX_PERSONALITY = 50 # -50 at low trait combatibility, +150 at high trait combatibility.
						MAX_PHYSICAL = 50 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
					}
					opinion_modifier = {
						opinion_target = root
						min = -50
						max = 50
						multiplier = 0.5
					}
					modifier = {
						is_attracted_to_gender_of = root
						add = 10
					}
					modifier = {
						OR = {
							has_relation_lover = root
							has_relation_soulmate = root
							has_relation_potential_lover = root
						}
						add = 15
					}
					add_opinion = {
						target = root
						modifier = rejected_me_opinion
					}
				}
				50 = { #Nothing
					modifier = {
						NOT = { is_attracted_to_gender_of = root }
						add = 500
					}
				}
			}
		}	
		scope:second_consort = {
			random_list = {
				50 = { #Disappointed
					simple_attraction_modifier = {
						WHO = scope:second_consort
						TARGET = root
						MAX_PERSONALITY = 50 # -50 at low trait combatibility, +150 at high trait combatibility.
						MAX_PHYSICAL = 50 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
					}
					opinion_modifier = {
						opinion_target = root
						min = -50
						max = 50
						multiplier = 0.5
					}
					modifier = {
						is_attracted_to_gender_of = root
						add = 10
					}
					modifier = {
						OR = {
							has_relation_lover = root
							has_relation_soulmate = root
							has_relation_potential_lover = root
						}
						add = 15
					}
					add_opinion = {
						target = root
						modifier = rejected_me_opinion
					}
				}
				50 = { #Nothing
					modifier = {
						NOT = { is_attracted_to_gender_of = root }
						add = 500
					}
				}
			}
		}		
		
		
		stress_impact = {
			base = miniscule_stress_impact_loss
			shy = minor_stress_impact_loss
			craven = minor_stress_impact_loss 
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_honor = -0.10
				ai_greed = -0.1
				ai_boldness = -0.1
   			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:first_consort
				min = -40
				max = 40
				multiplier = -1
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:second_consort
				min = -40
				max = 40
				multiplier = -1
			}
			
			modifier = { #Stress management
				has_trait = shy
				add = 25
			}
			modifier = { #Stress management
				has_trait = craven
				add = 25
			}
			modifier = { 
				has_trait = chaste
				add = 15
			}
			modifier = { 
				has_trait = gregarious
				add = -25
			}	
			modifier = { 
				has_trait = lustful
				add = -15
			}	
			modifier = {
				NOT = { is_attracted_to_gender_of = scope:first_consort }
				add = 15
			}
			modifier = {
				NOT = { is_attracted_to_gender_of = scope:second_consort }
				add = 15
			}
        }
    }
	
	after = {
		add_character_flag = {
			flag = had_walking_consorts_event_flag
			years = 4
		}
	}
}

###################################################
##A consort was caught trying to ruin a pregnancy##
###################################################
harem_politics.0021 = {
	type = character_event
	title = consort_events.0017.t
	desc = harem_politics.0021.desc
	theme = corruption
	override_background = {
		reference = throne_room
	}
	
	right_portrait = { 	
		character = scope:schemer
		animation = shock
	}
	left_portrait = { 	
		character = scope:pregnant_consort
		animation = disbelief
	}
	
	trigger = {
		is_landed = yes
	}
	
	immediate = {
		save_scope_as = harem_liege
		hidden_effect = {
			scope:actor = {	
				send_interface_toast = {
					type = event_generic_bad
					title = unsuccessful_miscarriage_t
					right_icon = scope:recipient
					custom_tooltip = unsuccessful_miscarriage_caught_desc
				}
				save_scope_as = schemer
				clear_saved_scope = actor
			}
			scope:recipient = {	
				add_opinion = {
					target = scope:schemer
					modifier = hatred_spouse_opinion
				}
				save_scope_as = pregnant_consort
				clear_saved_scope = recipient
			}
		}
	}
	
	option = { #Arrest them!
        name = harem_politics.0021.a
		trigger = {
			is_liege_or_above_of = scope:schemer
		}
		add_opinion = {
			target = scope:schemer
			modifier = attempted_miscarriage
		}
		scope:schemer = {
			calyver_favor_medium_loss_effect = yes
			if = { #If they're a GC, demote them
				limit = {
					has_court_position = grand_consort_court_position
				}
				save_scope_as = employee
				root = {
					save_scope_as = liege
				}
				grand_consort_revoked_court_position_effect = yes
			}
			if = {
				limit = { 
					has_character_modifier = favored_consort_modifier
				}
				remove_character_modifier = favored_consort_modifier
			}
			add_character_modifier = {
				modifier = unfavored_consort_modifier
				years = 3
			}
		}
		rightfully_imprison_character_effect = {
			TARGET = scope:schemer
			IMPRISONER = root
		}
		scope:pregnant_consort = {
			calyver_favor_medium_gain_effect = yes
			punishment_consort_opinion_mild_effect = yes
		}
		
		stress_impact = {
			forgiving = minor_stress_impact_gain 
			compassionate = minor_stress_impact_gain 
		}
		
        ai_chance = {
            base = 50
			
			opinion_modifier = { #Opinion of schemer
				opinion_target = scope:schemer
				min = -20
				max = 20
				multiplier = -1
			}
			opinion_modifier = { #Opinion of pregnant consort
				opinion_target = scope:pregnant_consort
				min = -20
				max = 20
				multiplier = 1
			}
			
			modifier = { #Stress management
				has_trait = compassionate
				add = -50
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -50
			}
				
			modifier = { #Traits
				has_trait = just
				add = 10
			}
			modifier = { #Traits
				has_trait = vengeful
				add = 15
			}

			modifier = { #Favor
				scope:pregnant_consort = { 
					has_character_modifier = favored_consort_modifier
				}
				add = 15
			}
			modifier = { #Favor
				scope:schemer = { 
					has_character_modifier = unfavored_consort_modifier
				}
				add = 5
			}

			#Powerful consorts
			modifier = {
				scope:pregnant_consort = { 
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
					}
				}
				add = 10
			}
			#Main spouse
			modifier = {
				exists = primary_spouse
				scope:pregnant_consort = { 
					this = root.primary_spouse
				}
				add = 15
			}
			#Grand consort
			modifier = {
				scope:pregnant_consort = { 
					has_court_position = grand_consort_court_position
				}
				add = 10
			}
			#Other spouses
			modifier = {
				scope:pregnant_consort = { 
					is_married = yes
				}
				add = 5
			}
			#More chances if few kids
			modifier = {
				any_child = { 
					count < 3
				}
				add = 10
			}
        }
    }
	
	option = { #Execute them
        name = harem_politics.0021.b
		trigger = {
			is_liege_or_above_of = scope:schemer
		}
		scope:pregnant_consort = {
			calyver_favor_big_gain_effect = yes
			punishment_consort_opinion_big_effect = yes
		}
		scope:schemer = {
			death = {
				death_reason = death_punishment
				killer = root
			}
			close_relations_opinion_effect = { VICTIM = scope:schemer EXECUTIONER = root }
		}
		
		stress_impact = {
			forgiving = medium_stress_impact_gain 
			compassionate = medium_stress_impact_gain 
		}
		
        ai_chance = {
            base = 30
			
			opinion_modifier = { #Opinion of schemer
				opinion_target = scope:schemer
				min = -30
				max = 30
				multiplier = -1
			}
			opinion_modifier = { #Opinion of pregnant consort
				opinion_target = scope:pregnant_consort
				min = -20
				max = 20
				multiplier = 1
			}
			
			modifier = { #Stress management
				has_trait = compassionate
				add = -50
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -50
			}
				
			modifier = { #Traits
				has_trait = just
				add = 10
			}
			modifier = { #Traits
				has_trait = vengeful
				add = 20
			}

			modifier = { #Favor
				scope:pregnant_consort = { 
					has_character_modifier = favored_consort_modifier
				}
				add = 15
			}
			modifier = { #Favor
				scope:schemer = { 
					has_character_modifier = unfavored_consort_modifier
				}
				add = 5
			}

			#Powerful consorts
			modifier = {
				scope:pregnant_consort = { 
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
					}
				}
				add = 10
			}
			#Main spouse
			modifier = {
				exists = primary_spouse
				scope:pregnant_consort = { 
					this = root.primary_spouse
				}
				add = 15
			}
			#Grand consort
			modifier = {
				scope:pregnant_consort = { 
					has_court_position = grand_consort_court_position
				}
				add = 10
			}
			#Other spouses
			modifier = {
				scope:pregnant_consort = { 
					is_married = yes
				}
				add = 5
			}
			#More chances if few kids
			modifier = {
				any_child = { 
					count < 3
				}
				add = 10
			}
        }
    }

	option = { #Let them go
        name = consort_events.0001.c
		
		scope:schemer = {
			calyver_favor_medium_gain_effect = yes
			add_opinion = {
				target = root
				modifier = thankful_consort_opinion
			}
			if = {
				limit = { 
					has_character_modifier = unfavored_consort_modifier
				}
				remove_character_modifier = unfavored_consort_modifier
			}
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 3
			}
		}
		scope:pregnant_consort = {
			calyver_favor_big_loss_effect = yes
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -20
			}
			if = {
				limit = { 
					has_character_modifier = favored_consort_modifier
				}
				remove_character_modifier = favored_consort_modifier
			}
			add_character_modifier = {
				modifier = unfavored_consort_modifier
				years = 3
			}
		}

		stress_impact = {
			just = medium_stress_impact_gain 
			vengeful = medium_stress_impact_gain 
		}
		
        ai_chance = {
            base = 25
			
			opinion_modifier = { #Opinion of schemer
				opinion_target = scope:schemer
				min = -20
				max = 20
				multiplier = 1
			}
			opinion_modifier = { #Opinion of pregnant consort
				opinion_target = scope:pregnant_consort
				min = -20
				max = 20
				multiplier = -1
			}
			
			modifier = { #Stress management
				has_trait = compassionate
				add = 10
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = 10
			}
				
			modifier = { #Traits
				has_trait = just
				add = -25
			}
			modifier = { #Traits
				has_trait = vengeful
				add = -50
			}

			modifier = { #Favor
				scope:pregnant_consort = { 
					has_character_modifier = unfavored_consort_modifier
				}
				add = 5
			}
			modifier = { #Favor
				scope:schemer = { 
					has_character_modifier = favored_consort_modifier
				}
				add = 15
			}

			#Powerful consorts
			modifier = {
				scope:schemer = { 
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
					}
				}
				add = 10
			}
			#Main spouse
			modifier = {
				exists = primary_spouse
				scope:schemer = { 
					this = root.primary_spouse
				}
				add = 15
			}
			#Grand consort
			modifier = {
				scope:schemer = { 
					has_court_position = grand_consort_court_position
				}
				add = 10
			}
			#Other spouses
			modifier = {
				scope:schemer = { 
					is_married = yes
				}
				add = 5
			}
        }
    }
	
	after = {
		scope:pregnant_consort = {
			trigger_event = {
				id = consort_events.0022
				days = 1
			}
		}
	}
}

##############################################
##Noble Consort Hua makes Zhen Huan miscarry##
##############################################

scripted_trigger harem_politics_zhen_huan_trigger = {
	is_courtier_of = root
	is_physically_able_adult = yes
	
	is_pregnant = yes
	has_trait = pregnant
	pregnancy_month <= 6
	exists = pregnancy_assumed_father
	pregnancy_assumed_father = {
		this = root
	}
	
	NOR = {
		exists = scope:is_being_divorced
		exists = scope:is_being_set_aside
		has_character_flag = attempted_miscarriage_flag
		has_character_modifier = unfavored_consort_modifier
		has_court_position = grand_consort_court_position
	}
	
	OR = {
		is_concubine = yes
		AND = {
			is_married = yes
			NOT = { this = root.primary_spouse }
		}
	}
	
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger harem_politics_hua_gui_fei_trigger = {
	is_courtier_of = root
	is_physically_able_adult = yes
	harem_politics_evil_consort_trigger = yes
	
	NOR = {
		this = $ZHEN_HUAN$
		exists = scope:is_being_divorced
		exists = scope:is_being_set_aside
		
		
		has_relation_friend = $ZHEN_HUAN$
		has_relation_best_friend = $ZHEN_HUAN$
		has_relation_lover = $ZHEN_HUAN$
		has_relation_soulmate = $ZHEN_HUAN$
		has_character_modifier = unfavored_consort_modifier
		has_character_flag = flag_scolded_consort
	}
	opinion = {
		target = $ZHEN_HUAN$
		value <= 15
	}
	
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
	
	OR = {
		AND = { #Zhen Huan is a concubine
			$ZHEN_HUAN$ = {
				is_concubine = yes
			}
			#Then Hua is either a spouse or the GC
			OR = {
				AND = { #If she isn't the GC, she's the PS or a SS without any GC
					is_married = yes
					OR = {
						root = {
							NOT = { employs_court_position = grand_consort_court_position }
						}
						this = root.primary_spouse
					}
				}
				has_court_position = grand_consort_court_position
			}
		}
		AND = { #Zhen Huan is a spouse
			$ZHEN_HUAN$ = {
				is_married = yes
			}
			#Then Hua is either the PS or the GC
			OR = {
				AND = {
					exists = root.primary_spouse
					this = root.primary_spouse
				}
				has_court_position = grand_consort_court_position
			}
		}
	}
}

harem_politics.0022 = {
	type = character_event
	title = harem_politics.0022.t
	desc = harem_politics.0022.desc
	theme = unfriendly
	override_background = {
		reference = bedchamber
	}
	
	left_portrait = { 	
		character = root
		animation = worry
	}
	
	right_portrait = { 	
		character = scope:zhen_huan
		animation = pain
	}
	
	lower_center_portrait = { 	
		character = scope:hua_gui_fei
	}
	
	trigger = {
		any_consort = {
			harem_politics_zhen_huan_trigger = yes
			save_temporary_scope_as = temporary_zhen_huan
		}
		any_consort = {
			harem_politics_hua_gui_fei_trigger = { ZHEN_HUAN = scope:temporary_zhen_huan }
		}
		any_consort = {
			is_courtier_of = root
			count >= 4
		}
		
		NOT = {	
			has_character_flag = had_hua_gui_fei_event
		}
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = { #Scheming consorts
			add = 0.2
			any_consort = {
				has_character_modifier = scheming_consort_modifier
			}
		}
		modifier = { #Many consorts
			add = 0.2
			any_consort = {
				count >= 5
			}
		}
		modifier = { #No heir
			add = 0.1
			any_child = {
				is_alive = yes
				count = 0 
			}
		}
		modifier = { #Count-consorts won't care that much
			add = -0.5
			highest_held_title_tier <= tier_county
		}
		modifier = { #Royal consorts do care
			add = 0.6
			highest_held_title_tier >= tier_kingdom
		}
	}
	
	immediate = {
		save_scope_as = harem_liege
		random_consort = {
			limit = {
				harem_politics_zhen_huan_trigger = yes
			}
			weight = {
				base = 10
				modifier = { #Favored consorts attract more jealousy
					has_character_modifier = favored_consort_modifier
					add = 10
				}
				modifier = { #Favored consorts attract more jealousy
					OR = {
						has_relation_best_friend = root
						has_relation_friend = root
					}
					add = 10
				}
				modifier = { #Favored consorts attract more jealousy
					OR = {
						has_relation_soulmate = root
						has_relation_lover = root
					}
					add = 20
				}
				modifier = { #Zhen Huan had good genetic traits
					num_of_good_genetic_traits >= 1
					add = 15
				}
				modifier = { #She didn't have a strong background
					any_close_family_member = {
						NOR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
						}
					}
					add = 10
				}
				modifier = { #She is young
					age <= 24
					add = 10
				}
				modifier = { #She has enemies
					any_relation = {
						type = rival
						is_consort_of = root
						is_courtier_of = root
						harem_politics_evil_consort_trigger = yes
					}
					add = 15
				}
				modifier = { #She has enemies
					any_relation = {
						type = nemesis
						is_consort_of = root
						is_courtier_of = root
						harem_politics_evil_consort_trigger = yes
					}
					add = 30
				}
				modifier = { #She is a concubine
					is_concubine = yes
					add = 25
				}
			}
			save_scope_as = zhen_huan
		}
		
		every_consort = {
			limit = {
				harem_politics_hua_gui_fei_trigger = { ZHEN_HUAN = scope:zhen_huan }
			}
			add_to_list = hua_gui_fei_list
		}
		random_in_list = {
			list = hua_gui_fei_list
			limit = {
				harem_politics_hua_gui_fei_trigger = { ZHEN_HUAN = scope:zhen_huan }
			}
			weight = {
				base = 10
				modifier = { #She isn't the PS
					NOR = {
						exists = root.primary_spouse
						this = root.primary_spouse
					}
					add = 20
				}
				modifier = { #She is a high-ranking consort
					has_court_position = grand_consort_court_position
					add = 10
				}
				modifier = { #She is a high-ranking consort
					is_married = yes
					add = 10
				}
				modifier = { #Arrogant
					has_trait = arrogant
					add = 5
				}
				modifier = { #Ambitious
					has_trait = ambitious
					add = 5
				}
				modifier = { #Callous
					has_trait = callous
					add = 10
				}
				modifier = { #Sadistic
					has_trait = sadistic
					add = 10
				}
				modifier = { #Wrathful
					has_trait = wrathful
					add = 10
				}
				modifier = { #Hua is favored
					has_character_modifier = favored_consort_modifier
					add = 10
				}
				modifier = { #Hua is favored
					OR = {
						has_relation_best_friend = root
						has_relation_friend = root
					}
					add = 10
				}
				modifier = { #Hua is favored
					OR = {
						has_relation_soulmate = root
						has_relation_lover = root
					}
					add = 20
				}
				modifier = { #She has strong background
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
						}
						NOT = {
							is_child_of = root
						}
					}
					add = 10
				}
				modifier = { #She has enemies
					OR = {
						has_relation_rival = scope:zhen_huan
						has_relation_nemesis = scope:zhen_huan
					}
					add = 25
				}
				modifier = { #Scheming consorts
					has_character_modifier = scheming_consort_modifier
					add = 5
				}
				modifier = { #Diplomatic consorts
					has_character_modifier = diplomatic_consort_modifier
					add = -15
				}
			}
			save_scope_as = hua_gui_fei
		}
		scope:hua_gui_fei = {
			save_scope_as = secondary_actor
		}
		scope:zhen_huan = {
			save_scope_as = secondary_recipient
			end_pregnancy = yes
			hidden_effect = {	
				pregnancy_cleanup_effect = yes
			}
			contract_disease_effect = { 
				DISEASE = ill 
				TREATMENT_EVENT = yes 
			}
			hidden_effect = {
				if = {
					limit = {
						can_set_relation_rival_trigger = { CHARACTER = scope:hua_gui_fei }
					}
					set_relation_rival = { 
						target = scope:hua_gui_fei
						reason = consort_rival_reason
					}
				}
				else_if = {
					limit = {
						has_relation_rival = scope:hua_gui_fei
						can_set_relation_nemesis_trigger = { CHARACTER = scope:hua_gui_fei }
					}
					set_relation_nemesis = { 
						target = scope:hua_gui_fei
						reason = consort_rival_reason 
					}
				}
			}
		}
		hidden_effect = {
			every_consort = {
				if = {
					limit = {
						NOR = {
							this = scope:hua_gui_fei
							this = scope:zhen_huan
						}
					}
					if = {
						limit = {
							NOR = {							
								has_relation_friend = scope:hua_gui_fei
								has_relation_best_friend = scope:hua_gui_fei
								has_relation_lover = scope:hua_gui_fei
								has_relation_soulmate = scope:hua_gui_fei
							}
						}
						add_opinion = {
							target = scope:hua_gui_fei
							modifier = cruelty_opinion
							opinion = -20
						}
						stress_impact = {
							base = minor_stress_impact_loss
						}
					}
					if = {
						limit = {
							is_ai = no
						}
						send_interface_toast = {
							type = event_generic_bad
							title = punished_consort_t
							right_icon = scope:secondary_recipient
							left_icon = scope:secondary_actor
							custom_tooltip = punished_consort_severe_desc
							
							show_as_tooltip = {
								add_opinion = {
									target = scope:hua_gui_fei
									modifier = cruelty_opinion
									opinion = -20
								}
								stress_impact = {
									base = minor_stress_impact_loss
								}
							}
						}
					}
				}
			}
		}
		clear_saved_scope = secondary_actor
		clear_saved_scope = secondary_recipient
	}
	
	option = { #Summon Hua
        name = harem_politics.0022.a
		
		trigger_event = {
			id = harem_politics.0023
			days = 5
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = 0.10
				ai_energy = 0.1
   			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:zhen_huan
				min = -50
				max = 50
				multiplier = 1
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:hua_gui_fei
				min = -50
				max = 50
				multiplier = -1
			}
			
			modifier = {
				scope:zhen_huan = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
						}
						NOT = {
							is_child_of = root
						}
					}
				}
				add = 15
			}
			modifier = {
				OR = {
					has_relation_lover = scope:zhen_huan
					has_relation_soulmate = scope:zhen_huan
					has_relation_friend = scope:zhen_huan
					has_relation_best_friend = scope:zhen_huan
				}
				add = 25
			}
			modifier = {
				scope:zhen_huan = {
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
			modifier = {
				scope:zhen_huan = {
					is_married = yes
				}
				add = 5
			}
			modifier = {
				any_child = {
					is_alive = yes
					count = 0
				}
				add = 20
			}
        }
    }
	
	option = { # Ignore Zhen Huan
		name = harem_politics.0022.b
		scope:zhen_huan = {
			calyver_favor_big_loss_effect = yes
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -25
			}
			if = {
				limit = {
					can_set_relation_rival_trigger = { CHARACTER = root }
				}
				set_relation_rival = { 
					reason = ignored_suffering_reason
					target = root
				}
			}
			if = {
				limit = {
					has_character_modifier = favored_consort_modifier
				}
				remove_character_modifier = favored_consort_modifier
			}
			add_character_modifier = {
				modifier = unfavored_consort_modifier
				years = 5
			}
		}
		scope:hua_gui_fei = {
			calyver_favor_medium_gain_effect = yes
			add_opinion = {
				modifier = pleased_opinion
				target = root
				opinion = 10
			}
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 5
			}
		}
		hidden_effect = {
			every_consort = {
				if = {
					limit = {
						NOR = {
							this = scope:hua_gui_fei
							this = scope:zhen_huan
							has_relation_friend = scope:hua_gui_fei
							has_relation_best_friend = scope:hua_gui_fei
							has_relation_lover = scope:hua_gui_fei
							has_relation_soulmate = scope:hua_gui_fei
						}
					}
					add_opinion = {
						target = root
						modifier = disappointed_opinion
						opinion = -15
					}
				}
			}
		}
		stress_impact = {
			wrathful = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = -0.4
				ai_vengefulness = -0.5
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:hua_gui_fei
				min = -50
				max = 50
				multiplier = -1
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:zhen_huan
				min = -50
				max = 50
				multiplier = 1
			}
			modifier = {
				has_trait = compassionate
				add = 15
			}
			modifier = {
				has_trait = forgiving
				add = 15
			}
			modifier = {
				has_trait = vengeful
				add = -25
			}
			modifier = {
				has_trait = wrathful
				add = -25
			}
			modifier = {
				has_trait = sadistic
				add = -25
			}
			modifier = {
				has_trait = callous
				add = -25
			}
			modifier = {
				has_trait = diligent
				add = -15
			}
			modifier = {
				scope:hua_gui_fei = {
					any_close_family_member = {
						OR = {
							is_allied_to = root
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
						NOT = {
							is_child_of = root
						}
					}
				}
				add = 15
			}
			#Favor
			modifier = {
				OR = {
					has_relation_lover = scope:hua_gui_fei
					has_relation_soulmate = scope:hua_gui_fei
					has_relation_friend = scope:hua_gui_fei
					has_relation_best_friend = scope:hua_gui_fei
				}
				add = 15
			}
			modifier = {
				scope:hua_gui_fei = {
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
			modifier = {
				scope:hua_gui_fei = {
					is_married = yes
				}
				add = 5
			}			
			
			modifier = {
				scope:zhen_huan = {
					any_close_family_member = {
						OR = {
							is_allied_to = root
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
						NOT = {
							is_child_of = root
						}
					}
				}
				add = -20
			}
			#Favor
			modifier = {
				NOR = {
					has_relation_lover = scope:zhen_huan
					has_relation_soulmate = scope:zhen_huan
					has_relation_friend = scope:zhen_huan
					has_relation_best_friend = scope:zhen_huan
				}
				add = 15
			}
			modifier = {
				scope:zhen_huan = {
					NOT = {
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			modifier = {
				scope:zhen_huan = {
					is_concubine = yes
				}
				add = 10
			}
			modifier = {
				scope:zhen_huan = {
					is_lowborn = yes
				}
				add = 10
			}
			modifier = {
				scope:hua_gui_fei = {
					any_close_family_member = {
						is_liege_or_above_of = root
						NOT = {
							is_child_of = root
						}
					}
				}
				add = 50
			}
			modifier = {
				scope:zhen_huan = {
					any_close_family_member = {
						is_liege_or_above_of = root
						NOT = {
							is_child_of = root
						}
					}
				}
				add = -100
			}
		}
	}	
}

harem_politics.0023 = {
	type = character_event
	title = harem_politics.0022.t
	desc = harem_politics.0023.desc
	theme = unfriendly
	override_background = {
		reference = bedchamber
	}
	
	left_portrait = { 	
		character = scope:hua_gui_fei
		animation = beg
	}
	
	right_portrait = { 	
		character = root
		animation = rage
	}
	
	lower_center_portrait = { 	
		character = scope:zhen_huan
	}
	
	trigger = {
		is_landed = yes
	}
	
	immediate = {
	}
	
	option = { # Arrest Hua
		name = harem_politics.0023.a
		scope:zhen_huan = {
			calyver_favor_moderate_gain_effect = yes
			hidden_effect  = { 
				add_character_modifier = { 
					modifier = safe_disease_treatment_success_high_modifier 
					days = disease_treatment_short_duration 
				}
			}
			if = { 
				limit = { 
					NOR = { 
						has_trait = forgiving
						has_trait = compassionate
						has_trait = temperate
						has_trait = calm
					}
				}
				add_opinion = {
					target = root
					modifier = disappointed_opinion
					opinion = -15
				}
			}
			else = {
				add_opinion = {
					modifier = pleased_opinion
					target = root
					opinion = 10
				}
			}
		}
		scope:hua_gui_fei = {
			calyver_favor_medium_loss_effect = yes
			add_opinion = {
				target = scope:zhen_huan
				modifier = hatred_spouse_opinion
			}
			add_opinion = {
				target = root
				modifier = cruelty_opinion
				opinion = -10
			}
			hidden_effect = {
				if = {
					limit = { 
						has_character_modifier = favored_consort_modifier
					}
					remove_character_modifier = favored_consort_modifier
				}
			}
			if = { #If they're a GC, demote them
				limit = {
					has_court_position = grand_consort_court_position
				}
				save_scope_as = employee
				root = {
					save_scope_as = liege
				}
				grand_consort_revoked_court_position_effect = yes
			}
			else_if = {
				limit = {
					NOT = { has_court_position = grand_consort_court_position }
				}
				add_character_modifier = {
					modifier = unfavored_consort_modifier
					years = 5
				}
			}
			save_scope_as = recipient
		}
		hidden_effect = {
	        rightfully_imprison_character_effect = {
				TARGET = scope:hua_gui_fei
				IMPRISONER = root
			}
			add_opinion = {
				target = scope:hua_gui_fei
				modifier = cruelty_opinion
				opinion = -20
			}
		}
		show_as_tooltip = {
			imprison = { target = scope:hua_gui_fei type = house_arrest }
		}
		stress_impact = {
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 20
			ai_value_modifier = {
				ai_honor = 0.2
				ai_vengefulness = 0.2
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:hua_gui_fei
				min = -50
				max = 50
				multiplier = -1
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:zhen_huan
				min = -50
				max = 50
				multiplier = 1
			}
			modifier = {
				has_trait = compassionate
				add = -25
			}
			modifier = {
				has_trait = forgiving
				add = -25
			}
			modifier = {
				has_trait = temperate
				add = 15
			}
			
			modifier = {
				scope:zhen_huan = {
					any_close_family_member = {
						OR = {
							is_allied_to = root
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
						NOT = {
							is_child_of = root
						}
					}
				}
				add = 15
			}
			#Favor
			modifier = {
				OR = {
					has_relation_lover = scope:zhen_huan
					has_relation_soulmate = scope:zhen_huan
					has_relation_friend = scope:zhen_huan
					has_relation_best_friend = scope:zhen_huan
				}
				add = 15
			}
			modifier = {
				scope:zhen_huan = {
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
			modifier = {
				scope:zhen_huan = {
					is_married = yes
				}
				add = 5
			}			
			
			modifier = {
				scope:hua_gui_fei = {
					any_close_family_member = {
						OR = {
							is_allied_to = root
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
						NOT = {
							is_child_of = root
						}
					}
				}
				add = -20
			}
			#Favor
			modifier = {
				OR = {
					has_relation_lover = scope:hua_gui_fei
					has_relation_soulmate = scope:hua_gui_fei
					has_relation_friend = scope:hua_gui_fei
					has_relation_best_friend = scope:hua_gui_fei
				}
				add = -15
			}
			modifier = {
				scope:hua_gui_fei = {
					has_character_modifier = favored_consort_modifier
				}
				add = -10
			}

			modifier = {
				scope:hua_gui_fei = {
					any_close_family_member = {
						is_liege_or_above_of = root
						NOT = {
							is_child_of = root
						}
					}
				}
				add = -100
			}
			modifier = {
				exists = primary_spouse
				primary_spouse = {
					this = scope:hua_gui_fei
				}
				add = -10
			}
			modifier = {
				scope:hua_gui_fei = {
					has_court_position = grand_consort_court_position
				}
				add = -5
			}
			modifier = {
				scope:zhen_huan = {
					any_close_family_member = {
						is_liege_or_above_of = root
						NOT = {
							is_child_of = root
						}
					}
				}
				add = 100
			}
			modifier = {
				any_child = {
					is_alive = yes
					count = 0
				}
				add = 5
			}
		}
		trigger_event = char_interaction.0231
	}
	
	option = { # Kill Hua
		name = harem_politics.0023.b
		scope:zhen_huan = {
			calyver_favor_big_gain_effect = yes
			hidden_effect  = { 
				add_character_modifier = { 
					modifier = safe_disease_treatment_success_high_modifier 
					days = disease_treatment_short_duration 
				}
			}
			if = { 
				limit = { 
					NOR = { 
						has_trait = forgiving
						has_trait = compassionate
						has_trait = temperate
						has_trait = calm
					}
				}
				add_opinion = {
					modifier = pleased_opinion
					target = root
					opinion = 10
				}
			}
			else = {
				add_opinion = {
					target = root
					modifier = cruelty_opinion
					opinion = -20
				}
			}
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 5
			}
		}
		scope:hua_gui_fei = {
			save_scope_as = secondary_recipient
			death = {
				death_reason = death_punishment
				killer = root
			}
			close_relations_opinion_effect = { VICTIM = scope:hua_gui_fei EXECUTIONER = root }
		}
		stress_impact = {
			forgiving = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
			
			wrathful = medium_stress_impact_loss
			vengeful = medium_stress_impact_loss
			callous = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_honor = -0.2
				ai_vengefulness = 0.25
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:hua_gui_fei
				min = -50
				max = 50
				multiplier = -1
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:zhen_huan
				min = -50
				max = 50
				multiplier = 1
			}
			modifier = {
				has_trait = compassionate
				add = -25
			}
			modifier = {
				has_trait = forgiving
				add = -25
			}
			modifier = {
				has_trait = vengeful
				add = 15
			}
			modifier = {
				has_trait = wrathful
				add = 15
			}
			modifier = {
				has_trait = sadistic
				add = 15
			}
			modifier = {
				has_trait = callous
				add = 15
			}
			modifier = {
				scope:zhen_huan = {
					any_close_family_member = {
						OR = {
							is_allied_to = root
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
						NOT = {
							is_child_of = root
						}
					}
				}
				add = 15
			}
			#Favor
			modifier = {
				OR = {
					has_relation_lover = scope:zhen_huan
					has_relation_soulmate = scope:zhen_huan
					has_relation_friend = scope:zhen_huan
					has_relation_best_friend = scope:zhen_huan
				}
				add = 15
			}
			modifier = {
				scope:zhen_huan = {
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
			modifier = {
				scope:zhen_huan = {
					is_married = yes
				}
				add = 5
			}			
			
			modifier = {
				scope:hua_gui_fei = {
					any_close_family_member = {
						OR = {
							is_allied_to = root
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
						NOT = {
							is_child_of = root
						}
					}
				}
				add = -50
			}
			#Favor
			modifier = {
				NOR = {
					has_relation_lover = scope:hua_gui_fei
					has_relation_soulmate = scope:hua_gui_fei
					has_relation_friend = scope:hua_gui_fei
					has_relation_best_friend = scope:hua_gui_fei
				}
				add = 15
			}
			modifier = {
				scope:hua_gui_fei = {
					NOT = {
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			modifier = {
				scope:hua_gui_fei = {
					is_concubine = yes
				}
				add = 5
			}
			modifier = {
				scope:hua_gui_fei = {
					is_lowborn = yes
				}
				add = 10
			}
			modifier = {
				any_child = {
					is_alive = yes
					count = 0
				}
				add = 15
			}
			modifier = {
				scope:hua_gui_fei = {
					any_close_family_member = {
						is_liege_or_above_of = root
						NOT = {
							is_child_of = root
						}
					}
				}
				add = -200
			}
			modifier = {
				exists = primary_spouse
				primary_spouse = {
					this = scope:hua_gui_fei
				}
				add = -20
			}
			modifier = {
				scope:hua_gui_fei = {
					has_court_position = grand_consort_court_position
				}
				add = -10
			}
			modifier = {
				scope:zhen_huan = {
					any_close_family_member = {
						is_liege_or_above_of = root
						NOT = {
							is_child_of = root
						}
					}
				}
				add = 50
			}
		}
	}
	
	option = { # Ignore Zhen Huan
		name = harem_politics.0022.b
		scope:zhen_huan = {
			calyver_favor_big_loss_effect = yes 
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -25
			}
			if = {
				limit = {
					can_set_relation_rival_trigger = { CHARACTER = root }
				}
				set_relation_rival = { 
					reason = ignored_suffering_reason
					target = root
				}
			}
			if = {
				limit = {
					has_character_modifier = favored_consort_modifier
				}
				remove_character_modifier = favored_consort_modifier
			}
			add_character_modifier = {
				modifier = unfavored_consort_modifier
				years = 5
			}
		}
		scope:hua_gui_fei = {
			calyver_favor_medium_gain_effect = yes
			add_opinion = {
				modifier = pleased_opinion
				target = root
				opinion = 10
			}
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 5
			}
		}
		hidden_effect = {
			every_consort = {
				if = {
					limit = {
						NOR = {
							this = scope:hua_gui_fei
							this = scope:zhen_huan
							has_relation_friend = scope:hua_gui_fei
							has_relation_best_friend = scope:hua_gui_fei
							has_relation_lover = scope:hua_gui_fei
							has_relation_soulmate = scope:hua_gui_fei
						}
					}
					add_opinion = {
						target = root
						modifier = disappointed_opinion
						opinion = -15
					}
				}
			}
		}
		stress_impact = {
			wrathful = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
		}
		ai_chance = {
			base = 5
			ai_value_modifier = {
				ai_honor = -0.4
				ai_vengefulness = -0.5
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:hua_gui_fei
				min = -50
				max = 50
				multiplier = -1
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:zhen_huan
				min = -50
				max = 60
				multiplier = 1
			}
			modifier = {
				has_trait = compassionate
				add = 15
			}
			modifier = {
				has_trait = forgiving
				add = 15
			}
			modifier = {
				has_trait = vengeful
				add = -25
			}
			modifier = {
				has_trait = wrathful
				add = -25
			}
			modifier = {
				has_trait = sadistic
				add = -25
			}
			modifier = {
				has_trait = callous
				add = -25
			}
			modifier = {
				has_trait = diligent
				add = -15
			}
			modifier = {
				scope:hua_gui_fei = {
					any_close_family_member = {
						OR = {
							is_allied_to = root
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
						NOT = {
							is_child_of = root
						}
					}
				}
				add = 10
			}
			#Favor
			modifier = {
				OR = {
					has_relation_lover = scope:hua_gui_fei
					has_relation_soulmate = scope:hua_gui_fei
					has_relation_friend = scope:hua_gui_fei
					has_relation_best_friend = scope:hua_gui_fei
				}
				add = 5
			}
			modifier = {
				scope:hua_gui_fei = {
					has_character_modifier = favored_consort_modifier
				}
				add = 5
			}
			modifier = {
				scope:hua_gui_fei = {
					is_married = yes
				}
				add = 5
			}			
			
			modifier = {
				scope:zhen_huan = {
					any_close_family_member = {
						OR = {
							is_allied_to = root
							is_powerful_vassal_of = root
							is_councillor_of = root
						}
						NOT = {
							is_child_of = root
						}
					}
				}
				add = -20
			}
			#Favor
			modifier = {
				NOR = {
					has_relation_lover = scope:zhen_huan
					has_relation_soulmate = scope:zhen_huan
					has_relation_friend = scope:zhen_huan
					has_relation_best_friend = scope:zhen_huan
				}
				add = 15
			}
			modifier = {
				scope:zhen_huan = {
					NOT = {
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			modifier = {
				scope:zhen_huan = {
					is_concubine = yes
				}
				add = 10
			}
			modifier = {
				scope:zhen_huan = {
					is_lowborn = yes
				}
				add = 10
			}
			modifier = {
				scope:hua_gui_fei = {
					any_close_family_member = {
						is_liege_or_above_of = root
						NOT = {
							is_child_of = root
						}
					}
				}
				add = 50
			}
			modifier = {
				exists = primary_spouse
				primary_spouse = {
					this = scope:hua_gui_fei
				}
				add = 5
			}
			modifier = {
				scope:zhen_huan = {
					any_close_family_member = {
						is_liege_or_above_of = root
						NOT = {
							is_child_of = root
						}
					}
				}
				add = -100
			}
			modifier = {
				any_child = {
					is_alive = yes
					count = 0
				}
				add = -15
			}
		}
	}
	
	after = {
		add_character_flag = had_hua_gui_fei_event
	}
}

##############################################
##Noble Consort Hua makes Zhen Huan miscarry##
##############################################

scripted_trigger harem_politics_valid_performer_summoning_trigger = {
	is_physically_able_ai_adult = yes
	NOR = {
		has_trait = lunatic_1
		has_trait = lunatic_genetic
		has_trait = possessed_1
		has_trait = possessed_genetic
		has_trait = lisping
		has_trait = stuttering
		has_trait = scaly
		has_trait = clubfooted
		has_trait = hunchbacked
		has_trait = wheezing
		has_trait = spindly
		has_trait = one_eyed
		has_trait = one_legged
		has_trait = disfigured
		has_trait = maimed
		has_trait = blind
		has_trait = ill
		has_trait = bubonic_plague
		has_trait = cancer
		has_trait = consumption
		has_trait = great_pox
		has_trait = gout_ridden
		has_trait = leper
		has_trait = lovers_pox
		has_trait = pneumonic
		has_trait = smallpox
		has_trait = typhus
		
		has_trait = beauty_bad
		has_trait = pregnant
		has_trait = ill
		has_trait = wounded

		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
	}
	is_courtier_of = root
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
	OR = { #They must be good at something
		diplomacy >= 9
		has_trait = poet
	}
}

scripted_effect consort_performance_effect = {
	random_list = {
		50 = { #Good performance
			simple_attraction_modifier = {
				WHO = $CONSORT$
				TARGET = root
				MAX_PERSONALITY = 10 # -50 at low trait combatibility, +150 at high trait combatibility.
				MAX_PHYSICAL = 10 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
			}
			opinion_modifier = {
				opinion_target = $CONSORT$
				min = -10
				max = 10
				multiplier = 0.1
			}
			opinion_modifier = {
				who = $CONSORT$
				opinion_target = root
				min = -10
				max = 10
				multiplier = 0.1
			}
			modifier = {
				has_relation_lover = $CONSORT$
				add = 5
			}
			modifier = {
				has_relation_friend = $CONSORT$
				add = 5
			}
			modifier = {
				has_relation_soulmate = $CONSORT$
				add = 10
			}
			modifier = {
				has_relation_best_friend = $CONSORT$
				add = 10
			}
			
			modifier = { #diplomacy
				add = 5
				$CONSORT$ = {	
					diplomacy >= 12
				}
			}
			modifier = { #diplomacy
				add = 5
				$CONSORT$ = {	
					diplomacy >= 15
				}
			}
			modifier = { #diplomacy
				add = 5
				$CONSORT$ = {	
					diplomacy >= 20
				}
			}
			modifier = { #Poet
				add = 20
				$CONSORT$ = {	
					has_trait = poet
				}
			}
			
			modifier = { #Diplomat
				add = 10
				$CONSORT$ = {	
					has_trait = education_diplomacy_3
				}
			}
			modifier = { #Diplomat
				add = 15
				$CONSORT$ = {	
					has_trait = education_diplomacy_4
				}
			}
			modifier = { #Diplomat
				add = 20
				$CONSORT$ = {	
					has_trait = education_diplomacy_5
				}
			}
			
			modifier = { #Diplomatic consorts will try their best to sleep with root
				$CONSORT$ = { 
					has_character_modifier = diplomatic_consort_modifier
				}
				add = 5
			}

			modifier = {
				NOT = { $CONSORT$ = { is_attracted_to_gender_of = root } }
				factor = 0
			}
			modifier = {
				NOT = { is_attracted_to_gender_of = $CONSORT$ }
				factor = 0
			}
			trigger_event = {
				id = harem_politics.0025
				days = 7
			}	
		}
		50 = { #Bad visit
			simple_attraction_modifier = {
				WHO = $CONSORT$
				TARGET = root
				MAX_PERSONALITY = 10 # -50 at low trait combatibility, +150 at high trait combatibility.
				MAX_PHYSICAL = 10 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
			}
			opinion_modifier = {
				opinion_target = $CONSORT$
				min = -10
				max = 10
				multiplier = -0.1
			}
			opinion_modifier = {
				who = $CONSORT$
				opinion_target = root
				min = -10
				max = 10
				multiplier = -0.1
			}
			modifier = {
				has_relation_rival = $CONSORT$
				add = 10
			}
			modifier = {
				has_relation_nemesis = $CONSORT$
				add = 20
			}
			
			modifier = { #diplomacy
				add = 5
				$CONSORT$ = {	
					diplomacy <= 10
				}
			}
			modifier = { #diplomacy
				add = 5
				$CONSORT$ = {	
					diplomacy = 9
				}
			}
			
			modifier = { #Diplomat
				add = 10
				$CONSORT$ = {	
					has_trait = education_diplomacy_1
				}
			}
			modifier = { #Diplomat
				add = 5
				$CONSORT$ = {	
					has_trait = education_diplomacy_2
				}
			}

			modifier = {
				NOT = { $CONSORT$ = { is_attracted_to_gender_of = root } }
				add = 20
			}
			modifier = {
				NOT = { is_attracted_to_gender_of = $CONSORT$ }
				add = 20
			}
			trigger_event = {
				id = harem_politics.0026
				days = 7
			}	
		}
	}
}

harem_politics.0024 = {
	type = character_event
	title = harem_politics.0024.t
	desc = harem_politics.0024.desc
	theme = family
	override_background = {
		reference = study
	}
	
	right_portrait = { 	
		character = root
		animation = boredom
	}
	left_portrait = { 	
		character = scope:performer_1
		animation = flirtation_left
	}
	
	lower_left_portrait = { 	
		character = scope:performer_2
	}
	lower_left_portrait = { 	
		trigger = {
			exists = scope:performer_3
		}
		character = scope:performer_3
	}
	
	trigger = {
		any_consort = {
			harem_politics_valid_performer_summoning_trigger = yes
			count >= 2
		}
		
		NOT = {	
			has_character_flag = summoned_performer_event_flag
		}
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = { #Many consorts
			add = 0.2
			any_consort = {
				count >= 4
			}
		}
		modifier = { #Poets
			add = 0.4
			any_consort = {
				has_trait = poet
				is_courtier_of = root
			}
		}
		modifier = { #Stress
			add = 0.1
			stress_level >= 1
		}
		modifier = { #Stress
			add = 0.1
			stress_level >= 2
		}
		modifier = { #Stress
			add = 0.5
			stress_level = 3
		}
		modifier = { #Royal consorts do care
			add = 0.1
			highest_held_title_tier >= tier_kingdom
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				harem_politics_valid_performer_summoning_trigger = yes
			}
			weight = {
				base = 10
				modifier = { #Concubines will learn poetry just to be noticed
					is_concubine = yes
					add = 10
				}
				modifier = { #Lowborns too
					is_lowborn = yes
					add = 10
				}

				modifier = { #And unfavored consorts
					has_variable = favor
					var:favor >= favorite_consort_lower_limit
					add = 10
				}
				modifier = { #... and forgotten consorts
					has_variable = favor
					var:favor >= beloved_consort_lower_limit
					add = 10
				}
				modifier = { #Var:favor doesn't exist
					NOT = { has_variable = favor }
					has_character_modifier = favored_consort_modifier
					add = 10
				}
				modifier = { #Var:favor doesn't exist
					NOT = { has_variable = favor }
					has_character_modifier = beloved_consort_modifier
					add = 20
				}

				modifier = { #Diplomacy
					add = diplomacy
					multiply = 1.5
				}

				modifier = { #Diplomacy
					add = 5
					has_trait = education_diplomacy_3
				}
				modifier = { #Diplomacy
					add = 10
					has_trait = education_diplomacy_4
				}
				modifier = { #Diplomacy
					add = 10
					has_trait = education_diplomacy_5
				}

				modifier = { #Beautiful
					add = 10
					has_trait = beauty_good
				}
				modifier = { #Beautiful
					add = 5
					has_trait = beauty_good_2
				}
				modifier = { #Beautiful
					add = 10
					has_trait = beauty_good_3
				}

				modifier = { #Intelligent
					add = 5
					has_trait = intellect_good
				}
				modifier = { #Intelligent
					add = 10
					has_trait = intellect_good_2
				}
				modifier = { #Intelligent
					add = 15
					has_trait = intellect_good_3
				}

				modifier = { #Diplomatic consorts
					add = 10
					has_character_modifier = diplomatic_consort_modifier
				}

				modifier = { #Intelligent
					add = 25
					has_trait = poet
				}
			}
			save_scope_as = performer_1
		}
		
		random_consort = {
			limit = {
				harem_politics_valid_performer_summoning_trigger = yes
				NOT = {
					this = scope:performer_1
				}
			}
			weight = {
				base = 10
				modifier = { #Concubines will learn poetry just to be noticed
					is_concubine = yes
					add = 10
				}
				modifier = { #Lowborns too
					is_lowborn = yes
					add = 10
				}

				modifier = { #And unfavored consorts
					has_variable = favor
					var:favor >= favorite_consort_lower_limit
					add = 10
				}
				modifier = { #... and forgotten consorts
					has_variable = favor
					var:favor >= beloved_consort_lower_limit
					add = 10
				}
				modifier = { #Var:favor doesn't exist
					NOT = { has_variable = favor }
					has_character_modifier = favored_consort_modifier
					add = 10
				}
				modifier = { #Var:favor doesn't exist
					NOT = { has_variable = favor }
					has_character_modifier = beloved_consort_modifier
					add = 20
				}

				modifier = { #Diplomacy
					add = diplomacy
					multiply = 1.5
				}

				modifier = { #Diplomacy
					add = 5
					has_trait = education_diplomacy_3
				}
				modifier = { #Diplomacy
					add = 10
					has_trait = education_diplomacy_4
				}
				modifier = { #Diplomacy
					add = 10
					has_trait = education_diplomacy_5
				}

				modifier = { #Beautiful
					add = 10
					has_trait = beauty_good
				}
				modifier = { #Beautiful
					add = 5
					has_trait = beauty_good_2
				}
				modifier = { #Beautiful
					add = 10
					has_trait = beauty_good_3
				}

				modifier = { #Intelligent
					add = 5
					has_trait = intellect_good
				}
				modifier = { #Intelligent
					add = 10
					has_trait = intellect_good_2
				}
				modifier = { #Intelligent
					add = 15
					has_trait = intellect_good_3
				}

				modifier = { #Diplomatic consorts
					add = 10
					has_character_modifier = diplomatic_consort_modifier
				}

				modifier = { #Intelligent
					add = 25
					has_trait = poet
				}
			}
			save_scope_as = performer_2
		}

		if = {
			limit = {
				any_consort = {
					harem_politics_valid_performer_summoning_trigger = yes
					count >= 3
				}
			}
			random_consort = {
				limit = {
					harem_politics_valid_performer_summoning_trigger = yes
					NOR = {
						this = scope:performer_1
						this = scope:performer_2
					}
				}
				weight = {
					base = 10
					modifier = { #Concubines will learn poetry just to be noticed
						is_concubine = yes
						add = 10
					}
					modifier = { #Lowborns too
						is_lowborn = yes
						add = 10
					}
	
					modifier = { #And unfavored consorts
						has_variable = favor
						var:favor >= favorite_consort_lower_limit
						add = 10
					}
					modifier = { #... and forgotten consorts
						has_variable = favor
						var:favor >= beloved_consort_lower_limit
						add = 10
					}
					modifier = { #Var:favor doesn't exist
						NOT = { has_variable = favor }
						has_character_modifier = favored_consort_modifier
						add = 10
					}
					modifier = { #Var:favor doesn't exist
						NOT = { has_variable = favor }
						has_character_modifier = beloved_consort_modifier
						add = 20
					}
	
					modifier = { #Diplomacy
						add = diplomacy
						multiply = 1.5
					}
	
					modifier = { #Diplomacy
						add = 5
						has_trait = education_diplomacy_3
					}
					modifier = { #Diplomacy
						add = 10
						has_trait = education_diplomacy_4
					}
					modifier = { #Diplomacy
						add = 10
						has_trait = education_diplomacy_5
					}
	
					modifier = { #Beautiful
						add = 10
						has_trait = beauty_good
					}
					modifier = { #Beautiful
						add = 5
						has_trait = beauty_good_2
					}
					modifier = { #Beautiful
						add = 10
						has_trait = beauty_good_3
					}
	
					modifier = { #Intelligent
						add = 5
						has_trait = intellect_good
					}
					modifier = { #Intelligent
						add = 10
						has_trait = intellect_good_2
					}
					modifier = { #Intelligent
						add = 15
						has_trait = intellect_good_3
					}
	
					modifier = { #Diplomatic consorts
						add = 10
						has_character_modifier = diplomatic_consort_modifier
					}
	
					modifier = { #Intelligent
						add = 25
						has_trait = poet
					}
				}
				save_scope_as = performer_3
			}
		}
	}
	
	option = { #Summon the first performer
        name = harem_politics.0016.a
		
		hidden_effect = {
			scope:performer_1 = {
				save_scope_as = chosen_performer
			}
			visited_consort_scope_effect = { CONSORT = scope:performer_1 }	
		}
		
		stress_impact = {
			shy = minor_stress_impact_gain
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_energy = 0.10
   			}
			opinion_modifier = {
				opinion_target = scope:performer_1
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:performer_1
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}

			modifier = {
            	add = 10
            	scope:performer_1 = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = {
            	add = 20
            	scope:performer_1 = {
            		has_character_modifier = beloved_consort_modifier
            	}
            }

			modifier = {
            	add = 10
            	scope:performer_1 = {
            		has_variable = favor
					var:favor >= favorite_consort_lower_limit
            	}
            }
			modifier = {
            	add = 20
            	scope:performer_1 = {
            		has_variable = favor
					var:favor >= beloved_consort_lower_limit
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:performer_1
					has_relation_soulmate = scope:performer_1
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:performer_1
					has_relation_friend = scope:performer_1
            	}
            }
            modifier = {
				add = 15
				has_trait = lustful
			}
			modifier = {
				add = -25
				has_trait = shy
			}
			modifier = {
				add = 15
				has_trait = lifestyle_reveler
			}
			modifier = {	#Weight up for stress.
				add = 15
				stress_level >= 1
				NOT = {
					has_trait = shy
				}
			}
			modifier = {	#Weight up for stress.
				add = 15
				stress_level >= 2
				NOT = {
					has_trait = shy
				}
			}
			modifier = {	#Weight up for stress.
				add = 15
				stress_level = 3
				NOT = {
					has_trait = shy
				}
			}
			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:performer_1
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:performer_1
				}
			}
			
			modifier = { #High diplomacy
				add = scope:performer_1.diplomacy
			}
			modifier = { #Beauty
				scope:performer_1 = { 
					has_trait = beauty_good_3
				}
				add = 15
			}
			modifier = { #Beauty
				scope:performer_1 = { 
					has_trait = beauty_good_2
				}
				add = 10
			}
			modifier = { #Beauty
				scope:performer_1 = { 
					has_trait = beauty_good_1
				}
				add = 5
			}
			modifier = { #Grand Consort
				scope:performer_1 = { 
					has_court_position = grand_consort_court_position
				}
				add = 5
			}
			modifier = { #PS
				scope:performer_1 = { 
					exists = primary_spouse
					primary_spouse = scope:performer_1
				}
				add = 10
			}

			modifier = {
				add = 25
				scope:performer_1 = { 
					has_trait = poet
				}
			}
        }
    }
	
	option = { #Summon the second performer
		name = harem_politics.0016.b
		

		hidden_effect = {
			scope:performer_2 = {
				save_scope_as = chosen_performer
			}
			visited_consort_scope_effect = { CONSORT = scope:performer_2 }	
		}
		
		stress_impact = {
			shy = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_energy = 0.10
			}
			opinion_modifier = {
				opinion_target = scope:performer_2
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:performer_2
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}

			modifier = {
				add = 10
				scope:performer_2 = {
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = {
				add = 20
				scope:performer_2 = {
					has_character_modifier = beloved_consort_modifier
				}
			}

			modifier = {
				add = 10
				scope:performer_2 = {
					has_variable = favor
					var:favor >= favorite_consort_lower_limit
				}
			}
			modifier = {
				add = 20
				scope:performer_2 = {
					has_variable = favor
					var:favor >= beloved_consort_lower_limit
				}
			}
			modifier = {
				add = 15
				OR = {
					has_relation_lover = scope:performer_2
					has_relation_soulmate = scope:performer_2
				}
			}
			modifier = {
				add = 10
				OR = {
					has_relation_best_friend = scope:performer_2
					has_relation_friend = scope:performer_2
				}
			}
			modifier = {
				add = 15
				has_trait = lustful
			}
			modifier = {
				add = -25
				has_trait = shy
			}
			modifier = {
				add = 15
				has_trait = lifestyle_reveler
			}
			modifier = {	#Weight up for stress.
				add = 15
				stress_level >= 1
				NOT = {
					has_trait = shy
				}
			}
			modifier = {	#Weight up for stress.
				add = 15
				stress_level >= 2
				NOT = {
					has_trait = shy
				}
			}
			modifier = {	#Weight up for stress.
				add = 15
				stress_level = 3
				NOT = {
					has_trait = shy
				}
			}
			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:performer_2
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:performer_2
				}
			}
			
			modifier = { #High diplomacy
				add = scope:performer_2.diplomacy
			}
			modifier = { #Beauty
				scope:performer_2 = { 
					has_trait = beauty_good_3
				}
				add = 15
			}
			modifier = { #Beauty
				scope:performer_2 = { 
					has_trait = beauty_good_2
				}
				add = 10
			}
			modifier = { #Beauty
				scope:performer_2 = { 
					has_trait = beauty_good_1
				}
				add = 5
			}
			modifier = { #Grand Consort
				scope:performer_2 = { 
					has_court_position = grand_consort_court_position
				}
				add = 5
			}
			modifier = { #PS
				scope:performer_2 = { 
					exists = primary_spouse
					primary_spouse = scope:performer_2
				}
				add = 10
			}

			modifier = {
				add = 25
				scope:performer_2 = { 
					has_trait = poet
				}
			}
		}
	}

	option = { #Summon the third performer
		name = harem_politics.0016.c
		trigger = {
			exists = scope:performer_3
		}

		hidden_effect = {
			scope:performer_3 = {
				save_scope_as = chosen_performer
			}
			visited_consort_scope_effect = { CONSORT = scope:performer_3 }	
		}
		
		stress_impact = {
			shy = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_energy = 0.10
			}
			opinion_modifier = {
				opinion_target = scope:performer_3
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:performer_3
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}

			modifier = {
				add = 10
				scope:performer_3 = {
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = {
				add = 20
				scope:performer_3 = {
					has_character_modifier = beloved_consort_modifier
				}
			}

			modifier = {
				add = 10
				scope:performer_3 = {
					has_variable = favor
					var:favor >= favorite_consort_lower_limit
				}
			}
			modifier = {
				add = 20
				scope:performer_3 = {
					has_variable = favor
					var:favor >= beloved_consort_lower_limit
				}
			}
			modifier = {
				add = 15
				OR = {
					has_relation_lover = scope:performer_3
					has_relation_soulmate = scope:performer_3
				}
			}
			modifier = {
				add = 10
				OR = {
					has_relation_best_friend = scope:performer_3
					has_relation_friend = scope:performer_3
				}
			}
			modifier = {
				add = 15
				has_trait = lustful
			}
			modifier = {
				add = -25
				has_trait = shy
			}
			modifier = {
				add = 15
				has_trait = lifestyle_reveler
			}
			modifier = {	#Weight up for stress.
				add = 15
				stress_level >= 1
				NOT = {
					has_trait = shy
				}
			}
			modifier = {	#Weight up for stress.
				add = 15
				stress_level >= 2
				NOT = {
					has_trait = shy
				}
			}
			modifier = {	#Weight up for stress.
				add = 15
				stress_level = 3
				NOT = {
					has_trait = shy
				}
			}
			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:performer_3
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:performer_3
				}
			}
			
			modifier = { #High diplomacy
				add = scope:performer_3.diplomacy
			}
			modifier = { #Beauty
				scope:performer_3 = { 
					has_trait = beauty_good_3
				}
				add = 15
			}
			modifier = { #Beauty
				scope:performer_3 = { 
					has_trait = beauty_good_2
				}
				add = 10
			}
			modifier = { #Beauty
				scope:performer_3 = { 
					has_trait = beauty_good_1
				}
				add = 5
			}
			modifier = { #Grand Consort
				scope:performer_3 = { 
					has_court_position = grand_consort_court_position
				}
				add = 5
			}
			modifier = { #PS
				scope:performer_3 = { 
					exists = primary_spouse
					primary_spouse = scope:performer_3
				}
				add = 10
			}

			modifier = {
				add = 25
				scope:performer_3 = {
					has_trait = poet
				}
			}
		}
	}

	option = { #Forget it
		name = harem_politics.0020.d
		
		stress_impact = {
			lustful = minor_stress_impact_gain
			lifestyle_reveler = minor_stress_gain
		}
		
		ai_chance = {
			base = 70
			ai_value_modifier = {
				ai_energy = -0.10
				ai_sociability = -0.50
			}
			modifier = {
				add = 15
				has_trait = shy
			}
			modifier = {
				add = -25
				has_trait = lustful
			}
			modifier = {
				add = -25
				has_trait = lifestyle_reveler
			}
			modifier = {	#Weight up for stress.
				add = -15
				stress_level >= 1
				NOT = {
					has_trait = shy
				}
			}
			modifier = {	#Weight up for stress.
				add = -15
				stress_level >= 2
				NOT = {
					has_trait = shy
				}
			}
			modifier = {	#Weight up for stress.
				add = -15
				stress_level = 3
				NOT = {
					has_trait = shy
				}
			}
		}
	}

	after = {
		add_character_flag = {
			flag = summoned_performer_event_flag
			years = 4
		}
	}
}

#Good performance#
harem_politics.0025 = {
	type = character_event
	title = harem_politics.0025.t
	desc = {
		desc = harem_politics.0025.start.desc
		first_valid = {
			triggered_desc = { #They're playing an instrument
				trigger = {
					exists = local_var:playing_instrument_variable
				}
				desc = harem_politics.0025.instrument.desc
			}
			triggered_desc = { #They're singing
				trigger = {
					exists = local_var:singing_variable
				}
				desc = harem_politics.0025.singing.desc
			}
			triggered_desc = { #They're reading poetry
				trigger = {
					exists = local_var:poetry_variable
				}
				desc = harem_politics.0025.poetry.desc
			}
			triggered_desc = { #Dancin'
				desc = harem_politics.0025.dancing.desc
			}
		}
		desc = harem_politics.0025.end.desc
	}
	theme = family
	override_background = {
		reference = study
	}
	
	right_portrait = { 	
		character = scope:chosen_performer
		animation = happiness
	}
	left_portrait = { 	
		character = root
		animation = ecstasy
	}
	
	trigger = {
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
	}
	
	immediate = {
		
		random_list = {
			50 = { #Play an instrument
				modifier = {
					add = {
						value = scope:chosen_performer.diplomacy
						multiply = 0.7
						max = 50
					}
				}
				modifier = {
					scope:chosen_performer = {
						has_trait = gregarious
					}
					add = 10
				}
				modifier = {
					scope:chosen_performer = {
						has_trait = shy
					}
					add = -15
				}
				modifier = {
					scope:chosen_performer = {
						has_trait = craven
					}
					add = -15
				}
				modifier = {
					scope:chosen_performer = {
						has_court_position = court_musician_court_position
					}
					add = 25
				}
				set_local_variable = {
					name = playing_instrument_variable
					value = yes
				}
			}
			
			50 = { #Sing
				modifier = {
					add = {
						value = scope:chosen_performer.diplomacy
						multiply = 0.7
						max = 50
					}
				}
				modifier = {
					scope:chosen_performer = {
						has_trait = poet
					}
					add = 10
				}
				modifier = {
					scope:chosen_performer = {
						has_trait = shy
					}
					add = -15
				}
				modifier = {
					scope:chosen_performer = {
						has_trait = craven
					}
					add = -15
				}
				modifier = {
					scope:chosen_performer = {
						has_court_position = court_musician_court_position
					}
					add = 25
				}
				set_local_variable = {
					name = singing_variable
					value = yes
				}
			}
			50 = { #Dance
				modifier = {
					add = {
						value = scope:chosen_performer.diplomacy
						multiply = 0.7
						max = 50
					}
				}
				modifier = {
					scope:chosen_performer = {
						has_trait = gregarious
					}
					add = 10
				}
				modifier = {
					scope:chosen_performer = {
						has_trait = shy
					}
					add = -15
				}
				modifier = {
					scope:chosen_performer = {
						has_trait = craven
					}
					add = -15
				}
				set_local_variable = {
					name = dancing_variable
					value = yes
				}
			}
			
			50 = { #Read poetry
				modifier = {
					add = {
						value = scope:chosen_performer.learning
						multiply = 0.7
						max = 50
					}
				}
				modifier = {
					scope:chosen_performer = {
						has_trait = poet
					}
					add = 50
				}
				
				modifier = {
					scope:chosen_performer = {
						has_trait = education_learning_1
					}
					add = 5
				}
				modifier = {
					scope:chosen_performer = {
						has_trait = education_learning_2
					}
					add = 10
				}
				modifier = {
					scope:chosen_performer = {
						has_trait = education_learning_3
					}
					add = 15
				}
				modifier = {
					scope:chosen_performer = {
						OR = {
							has_trait = education_learning_4
							has_trait = education_learning_5
						}
					}
					add = 20
				}
				modifier = {
					scope:chosen_performer = {
						has_court_position = court_poet_court_position
					}
					add = 25
				}
				set_local_variable = {
					name = poetry_variable
					value = yes
				}
			}
		}

		if = {
			limit = {
				NOT = { has_trait = shy }
			}
			stress_impact = {
				base = minor_stress_impact_loss
			}
		}
		add_opinion = {
			target = scope:chosen_performer
			modifier = admiration_opinion
			opinion = 10
		}
	}
	
	option = { #Spend the night with chosen_performer
        name = harem_events.0025.a
		
		had_sex_with_effect = {
			CHARACTER = scope:chosen_performer
			PREGNANCY_CHANCE = pregnancy_chance
		}
		if = {
			limit = {
				NOR = {
					has_relation_potential_lover = scope:chosen_performer
					has_relation_lover = scope:chosen_performer
					has_relation_soulmate = scope:chosen_performer
				}
			}
			set_relation_potential_lover = scope:chosen_performer
			scope:chosen_performer = {
				add_opinion = {
					target = root
					modifier = romance_opinion
					opinion = 5
				}
			}
			add_opinion = {
				target = scope:chosen_performer
				modifier = romance_opinion
				opinion = 5
			}
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			modifier = {
				add = 25
				has_trait = lustful
			}
			modifier = {
				add = -20
				has_trait = irritable
			}
			modifier = {
				add = -20
				has_trait = reclusive
			}
			modifier = {
				add = -25
				has_trait = shy
			}
			modifier = {
				add = -25
				has_trait = craven
			}
        }
    }

	option = { #Enough!
        name = harem_events.0002.b
		
		scope:chosen_performer = {
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -10
			}
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = -0.20
				ai_energy = -0.35
   			}
			opinion_modifier = {
				opinion_target = scope:chosen_performer
				min = -50
				max = 50
				multiplier = -0.5
			}
			modifier = {
				add = -15
				has_trait = lustful
			}
			modifier = {
				add = 20
				has_trait = lazy
			}
			modifier = {
				add = 20
				has_trait = shy
			}
			modifier = {
				add = 20
				has_trait = reclusive
			}
			modifier = {
				add = 20
				has_trait = craven
			}
			modifier = {
				add = 20
				has_trait = chaste
			}
        }
    }
}

#Bad performance#
harem_politics.0026 = {
	type = character_event
	title = harem_politics.0025.t
	desc = harem_politics.0026.desc
	theme = family
	override_background = {
		reference = study
	}
	
	right_portrait = { 	
		character = scope:chosen_performer
		animation = shame
	}
	left_portrait = { 	
		character = root
		animation = disapproval
	}
	
	trigger = {
		is_physically_able_adult = yes
		is_at_war = no
		is_landed = yes
	}
	
	immediate = {
		add_opinion = {
			target = scope:chosen_performer
			modifier = disappointed_opinion
			opinion = -5
		}
	}

	option = { #Enough!
        name = bride_show.0007.a
		
		scope:chosen_performer = {
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -5
			}
		}
		
        ai_chance = {
            base = 100
        }
    }
}
#Check the beggar and recipient effects and make sure everything is accordingly
