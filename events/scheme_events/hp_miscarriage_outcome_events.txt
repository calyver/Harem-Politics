#Events handling miscarriage outcomes

# System by Petter Vilberg

namespace = miscarriage_outcome

##################################
# MAINTENANCE EVENTS 0000 - 0099
##################################

miscarriage_outcome.0001 = {

	hidden = yes

	immediate = {
		add_character_flag = { #Only resolve one miscarriage in the same day
			flag = is_in_event_miscarriage_outcome_0001
			days = 1
		}
		trigger_event = {
			on_action = miscarriage_setup
		}
	}
}


#################
# METHOD SELECTION EVENTS
# 1000-1999
#################

######################
# Success or Failure
######################
miscarriage_outcome.1001 = {
	type = character_event
	title = miscarriage_outcome.1001.t
	theme = intrigue
	override_background = { reference = bedchamber }
	left_portrait = {
		character = scope:miscarriage_target
		animation = shock
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}
	desc = {
		desc = miscarriage_outcome.1001.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:arrival
				}
				desc = miscarriage_outcome.1001.arrival
			}
			desc = miscarriage_outcome.1001.no_arrival
		}
		desc = miscarriage_outcome.1001.ending
	}

	immediate = {
		save_scope_value_as = {
			name = miscarriage_method
			value = flag:miscarriage_poison
		}
		miscarriage_outcome_roll_setup_effect = yes
		
		scope:target.capital_province = { save_scope_as = departure }

		# Save arrival location
		if = {
			limit = { scope:target = { is_travelling = yes } }
			scope:target = {
				current_travel_plan = {
					next_destination_province = { save_scope_as = arrival }
				}
			}
		}
		else = {
			scope:owner.top_liege = {
				random_sub_realm_county = {
					limit = {
						NOR = {
							this = scope:departure
							holder = scope:owner
						}
						scope:departure = {
							squared_distance = {
								target = prev
								value < 100000
							}
						}
					}
					save_scope_as = arrival
				}
			}
		}
	}

	option = {
		name = miscarriage_outcome.1001.a
		miscarriage_outcome_roll_effect = yes
	}
}

######################
# Success or Failure
######################
miscarriage_outcome.1002 = {
	type = character_event
	title = miscarriage_outcome.1002.t
	desc = miscarriage_outcome.1002.desc
	theme = intrigue
	override_background = { reference = bedchamber }
	left_portrait = {
		character = scope:miscarriage_target
		animation = shock
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}

	immediate = {
		save_scope_value_as = {
			name = miscarriage_method
			value = flag:miscarriage_fall
		}
		miscarriage_outcome_roll_setup_effect = yes

		# Save travel information for loc 
		scope:target = {
			capital_province = { save_scope_as = departure }
			current_travel_plan = {
				next_destination_province = { save_scope_as = arrival }
			}
		}
	}

	option = {
		name = miscarriage_outcome.1002.a
		miscarriage_outcome_roll_effect = yes
	}
}

######################
# Success or Failure
######################
miscarriage_outcome.1003 = {
	type = character_event
	title = miscarriage_outcome.1003.t
	desc = miscarriage_outcome.1003.desc
	theme = intrigue
	override_background = { reference = bedchamber }
	left_portrait = {
		character = scope:miscarriage_target
		animation = shock
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}

	immediate = {
		miscarriage_outcome_roll_setup_effect = yes
		scope:target.court_owner.capital_province.barony = {
			save_scope_as = court_location
		}
		save_scope_value_as = {
			name = miscarriage_method
			value = flag:miscarriage_attack
		}
		miscarriage_outcome_roll_setup_effect = yes
	}

	option = {
		name = miscarriage_outcome.1003.a
		miscarriage_outcome_roll_effect = yes
	}
}


#####################################
# SUCCESS OUTCOMES 2001 - 2999
#####################################

#######################
# Success
#######################
miscarriage_outcome.2001 = {
	type = character_event
	desc = miscarriage_outcome.2001.desc
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = fear
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}

	trigger = {
		scope:miscarriage_method = flag:miscarriage_poison
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
		miscarriage_success_effect = yes
	}

	option = {
		name = miscarriage_outcome.2001.a
	}
}

#######################
# Success
#######################
miscarriage_outcome.2002 = {
	type = character_event
	desc = miscarriage_outcome.2002.desc
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = fear
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}

	trigger = {
		scope:miscarriage_method = flag:miscarriage_fall
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
		miscarriage_success_effect = yes
	}

	option = {
		name = miscarriage_outcome.2002.a
	}
}

#######################
# Success
#######################
miscarriage_outcome.2003 = {
	type = character_event
	desc = miscarriage_outcome.2003.desc
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = fear
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}

	trigger = {
		scope:miscarriage_method = flag:miscarriage_attack
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
		miscarriage_success_effect = yes
	}

	option = {
		name = miscarriage_outcome.2003.a
	}
}


#################################
# FAILURE OUTCOMES 4000 - 4999
#################################

### Failure
miscarriage_outcome.4001 = {
	type = character_event
	theme = intrigue
	override_background = { reference = bedchamber }
	left_portrait = {
		character = scope:miscarriage_target
		animation = shock
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}
	desc = {
		desc = miscarriage_outcome.4001.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:scheme_discovered
				}
				desc = miscarriage_outcome.4001.owner_discovered
			}
			desc = miscarriage_outcome.4001.owner_secret
		}
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
		miscarriage_failure_effect = yes
	}

	option = {
		name = miscarriage_outcome.4001.a
	}
}

### Failure
miscarriage_outcome.4002 = {
	type = character_event
	theme = intrigue
	override_background = { reference = bedchamber }
	left_portrait = {
		character = scope:miscarriage_target
		animation = shock
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}
	desc = {
		desc = miscarriage_outcome.4002.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:scheme_discovered
				}
				desc = miscarriage_outcome.4002.owner_discovered
			}
			desc = miscarriage_outcome.4002.owner_secret
		}
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
		miscarriage_failure_effect = yes
	}

	option = {
		name = miscarriage_outcome.4002.a
	}
}

### Failure
miscarriage_outcome.4003 = {
	type = character_event
	theme = intrigue
	override_background = { reference = bedchamber }
	left_portrait = {
		character = scope:miscarriage_target
		animation = shock
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}
	desc = {
		desc = miscarriage_outcome.4003.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:scheme_discovered
				}
				desc = miscarriage_outcome.4003.owner_discovered
			}
			desc = miscarriage_outcome.4003.owner_secret
		}
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
		miscarriage_failure_effect = yes
	}

	option = {
		name = miscarriage_outcome.4003.a
	}
}


########################################
# TARGET SUCCESS NOTIFICATIONS
########################################

#
miscarriage_outcome.5001 = {
	type = character_event
	title = miscarriage_outcome.5001.t
	theme = intrigue
	override_background = { reference = bedchamber }
	left_portrait = {
		character = scope:miscarriage_target
		animation = shock
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}
	desc = {
		desc = miscarriage_outcome.5001.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_poison
				}
				desc = miscarriage_outcome.5001.miscarriage_poison
			}
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_fall
				}
				desc = miscarriage_outcome.5001.miscarriage_fall
			}
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_attack
				}
				desc = miscarriage_outcome.5001.miscarriage_attack
			}
		}
	}


	immediate = {
		pregnancy_termination_attempt_effect = yes
	}

	option = {
		name = miscarriage_outcome.5001.a
		pregnancy_termination_attempt_effect = yes
	}
}

###################################
# TARGET FAILURE NOTIFICATIONS
###################################

#
miscarriage_outcome.5002 = {
	type = character_event
	title = miscarriage_outcome.5002.t
	theme = intrigue
	override_background = { reference = bedchamber }
	left_portrait = {
		character = scope:miscarriage_target
		animation = shock
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}
	desc = {
		desc = miscarriage_outcome.5002.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_poison
				}
				desc = miscarriage_outcome.5002.miscarriage_poison
			}
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_fall
				}
				desc = miscarriage_outcome.5002.miscarriage_fall
			}
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_attack
				}
				desc = miscarriage_outcome.5002.miscarriage_attack
			}
		}
	}

	immediate = {
		if = {
			limit = {
				exists = scope:scheme_discovered
			}
			scope:owner = {
				save_scope_as = revealed_owner
			}
		}
	}

	option = {
		name = miscarriage_outcome.5002.a
		trigger = {
			exists = scope:scheme_discovered
		}
		add_character_modifier = {
			modifier = watchful_modifier
			days = watchful_modifier_duration
		}
	}

	option = {
		name = miscarriage_outcome.5002.b
		trigger = {
			NOT = { exists = scope:scheme_discovered }
		}
		add_character_modifier = {
			modifier = watchful_modifier
			days = watchful_modifier_duration
		}
	}
}

########################################
# OWNER SUCCESS NOTIFICATIONS
########################################

#
miscarriage_outcome.5003 = {
	type = character_event
	title = miscarriage_outcome.5003.t
	theme = intrigue
	override_background = { reference = bedchamber }
	left_portrait = {
		character = scope:miscarriage_target
		animation = shock
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}
	desc = {
		desc = miscarriage_outcome.5003.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_poison
				}
				desc = miscarriage_outcome.5003.miscarriage_poison
			}
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_fall
				}
				desc = miscarriage_outcome.5003.miscarriage_fall
			}
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_attack
				}
				desc = miscarriage_outcome.5003.miscarriage_attack
			}
		}
	}


	immediate = {
		successful_miscarriage_outcome_event_option_effect = yes
	}

	option = {
		name = miscarriage_outcome.5003.a
		trigger = {
			exists = scope:scheme_successful
		}
	}
}

###################################
# OWNER FAILURE NOTIFICATIONS
###################################

#
miscarriage_outcome.5004 = {
	type = character_event
	title = miscarriage_outcome.5004.t
	theme = intrigue
	override_background = { reference = bedchamber }
	left_portrait = {
		character = scope:miscarriage_target
		animation = shock
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}
	desc = {
		desc = miscarriage_outcome.5004.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_poison
				}
				desc = miscarriage_outcome.5004.miscarriage_poison
			}
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_fall
				}
				desc = miscarriage_outcome.5004.miscarriage_fall
			}
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_attack
				}
				desc = miscarriage_outcome.5004.miscarriage_attack
			}
		}
	}

	immediate = {
		if = {
			limit = {
				exists = scope:scheme_discovered
			}
			scope:owner = {
				save_scope_as = revealed_owner
			}
		}
	}

	option = {
		name = miscarriage_outcome.5004.a
		trigger = {
			exists = scope:scheme_discovered
		}
		if = {
			limit = {
				has_character_modifier = favored_consort_modifier
			}
			remove_character_modifier = favored_consort_modifier
		}
		add_character_modifier = {
			modifier = unfavored_consort_modifier
			days = 720
		}
	}

	option = {
		name = miscarriage_outcome.5004.b
		trigger = {
			NOT = { exists = scope:scheme_discovered }
		}
		add_character_modifier = {
			modifier = watchful_modifier
			days = watchful_modifier_duration
		}
	}
}

########################################
# PRIMARY SPOUSE SUCCESS NOTIFICATIONS
########################################

#
miscarriage_outcome.5005 = {
	type = character_event
	title = miscarriage_outcome.5005.t
	theme = intrigue
	override_background = { reference = bedchamber }
	left_portrait = {
		character = scope:miscarriage_target
		animation = shock
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}
	desc = {
		desc = miscarriage_outcome.5005.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_poison
				}
				desc = miscarriage_outcome.5005.miscarriage_poison
			}
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_fall
				}
				desc = miscarriage_outcome.5005.miscarriage_fall
			}
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_attack
				}
				desc = miscarriage_outcome.5005.miscarriage_attack
			}
		}
	}


	immediate = {
		successful_miscarriage_outcome_event_option_effect = yes
	}

	option = {
		name = miscarriage_outcome.5005.a
		trigger = {
			exists = scope:scheme_successful
		}
	}
}

###################################
# PRIMARY SPOUSE FAILURE NOTIFICATIONS
###################################

#
miscarriage_outcome.5006 = {
	type = character_event
	title = miscarriage_outcome.5006.t
	theme = intrigue
	override_background = { reference = bedchamber }
	left_portrait = {
		character = scope:miscarriage_target
		animation = shock
	}
	right_portrait = {
		character = scope:miscarriage_target.primary_spouse
		triggered_animation = {
			trigger = { has_any_bad_relationship_with_character_trigger = { CHARACTER = root } }
			animation = stress
		}
		animation = shock
	}
	desc = {
		desc = miscarriage_outcome.5006.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_poison
				}
				desc = miscarriage_outcome.5006.miscarriage_poison
			}
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_fall
				}
				desc = miscarriage_outcome.5006.miscarriage_fall
			}
			triggered_desc = {
				trigger = {
					scope:miscarriage_method = flag:miscarriage_attack
				}
				desc = miscarriage_outcome.5006.miscarriage_attack
			}
		}
	}

	immediate = {
		if = {
			limit = {
				exists = scope:scheme_discovered
			}
			scope:owner = {
				save_scope_as = revealed_owner
			}
		}
	}

	option = {
		name = miscarriage_outcome.5006.a
		trigger = {
			exists = scope:scheme_discovered
		}
		if = {
			limit = {
				has_character_modifier = favored_consort_modifier
			}
			remove_character_modifier = favored_consort_modifier
		}
		add_character_modifier = {
			modifier = unfavored_consort_modifier
			days = 720
		}
	}

	option = {
		name = miscarriage_outcome.5006.b
		trigger = {
			NOT = { exists = scope:scheme_discovered }
		}
		add_character_modifier = {
			modifier = watchful_modifier
			days = watchful_modifier_duration
		}
	}
}