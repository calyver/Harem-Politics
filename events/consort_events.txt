#These are minor events that will only happen among consorts. 
#They're not supposed to happen to the player. The player will be notified of their outcomes.
#If the player is married to a character with more than 1 consort, they might
#have these events

namespace = consort_events

#####################
##Scripted triggers##
#####################
scripted_trigger mei_daying_trigger = {
	is_physically_able_ai_adult = yes
	is_concubine = yes
	age <= 21
	exists = court_owner
	court_owner = {
		any_consort = {
			this = root
		}
	}
	NOR = {
		this = root
		has_court_position = grand_consort_court_position
		has_character_modifier = unfavored_consort_modifier
		has_trait = pregnant
		has_trait = craven
		has_trait = shy
		has_trait = wounded
		has_trait = ill
		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
		has_relation_best_friend = root
		has_relation_friend = root
		has_relation_lover = root
		has_relation_soulmate = root
		has_hook = root
		has_strong_hook = root
	}
	harem_politics_evil_consort_trigger = yes
	has_character_flag = flag_new_consort
	opinion = {
		target = root
		value <= 10
	}
}

scripted_trigger shen_trigger = {
	harem_politics_evil_consort_trigger = no
	is_physically_able_ai_adult = yes
	is_concubine = yes
	exists = court_owner
	court_owner = {
		OR = {
			any_consort = {
				this = root
			}
			any_parent = {
				this = root
			}
		}
	}
	NOR = {
		has_court_position = grand_consort_court_position
		has_trait = ill
		has_trait = wounded
		has_trait = pregnant
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = $PARTNER$
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = $PARTNER$
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger xia_changzai_trigger = {
	harem_politics_evil_consort_trigger = yes
	NOR = { 
		this = root
		this = $TARGET$
		has_relation_best_friend = root
		has_relation_friend = root
		has_relation_soulmate = root
		has_relation_lover = root
		
		has_relation_best_friend = $TARGET$
		has_relation_friend = $TARGET$
		has_relation_soulmate = $TARGET$
		has_relation_lover = $TARGET$
		
		has_trait = pregnant
		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
		has_trait = wounded
		has_trait = ill
		
		has_hook = root
		has_strong_hook = root
		
		has_court_position = grand_consort_court_position
		
		has_trait = craven
		has_trait = shy
	}
	opinion = {
		target = $TARGET$
		value <= 10
	}
	is_concubine = yes
	is_physically_able_ai_adult = yes
	exists = court_owner
	court_owner = {
		OR = {
			any_consort = {
				this = root
			}
			any_parent = {
				this = root
			}
		}
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = $PARTNER$
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = $PARTNER$
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger valid_partner_trigger = {
	is_landed = yes
	OR = {
		any_courtier = {
			this = root
		}
		any_vassal_or_below = {
			this = root
		}
	}
	is_physically_able_adult = yes
	NOR = { 
		has_character_flag = has_consort_event_flag
		has_character_flag = had_hua_fei_event_flag 
		location = {
			OR = {
				has_province_modifier = winter_harsh_modifier
				has_province_modifier = winter_normal_modifier
			}
		}
	}
	any_consort = {
		is_physically_able_adult = yes
		count >= 3
	}
	save_temporary_scope_as = temporary_partner
	any_concubine = {
		shen_trigger = { PARTNER = scope:temporary_partner }
		save_temporary_scope_as = target_concubine
	}
	any_concubine = {
		xia_changzai_trigger = { TARGET = scope:target_concubine PARTNER = scope:temporary_partner }
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = scope:temporary_partner
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = scope:temporary_partner
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger ranting_consort_trigger = {
	is_physically_able_ai_adult = yes
	is_concubine = yes
	exists = court_owner
	court_owner = {
		any_consort = {
			this = root
		}
	}
	NOR = {
		this = root
		this = $TARGET$
		has_court_position = grand_consort_court_position
		has_trait = pregnant
		has_trait = craven
		has_trait = shy
		has_trait = ill
		has_trait = wounded
		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
		has_relation_best_friend = $TARGET$
		has_relation_friend = $TARGET$
		has_relation_lover = $TARGET$
		has_relation_soulmate = $TARGET$
		has_hook = root
		has_strong_hook = root
	}
	harem_politics_evil_consort_trigger = yes
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = $PARTNER$
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = $PARTNER$
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger superior_consort_trigger = {
	is_physically_able_adult = yes
	AND = {
		OR = {
			is_married = yes
			has_court_position = grand_consort_court_position
		}
		OR = {
			AND = {
				is_landed = yes
				any_liege_or_above = { 
					any_consort = { 
						this = root
					}
				}
			}
			AND = {
				exists = court_owner
				court_owner = {
					any_consort = {
						this = root
					}
				}
			}
		}
	}
}

scripted_trigger arrogant_consort_trigger = {
	is_physically_able_ai_adult = yes
	
	harem_politics_evil_consort_trigger = yes
	has_character_modifier = favored_consort_modifier
	is_courtier_of = $PARTNER$
	opinion = {
		target = root
		value <= 10
	}
	
	NOR = {
		this = root
		has_trait = craven
		has_trait = shy
		has_trait = ill
		has_trait = wounded
		has_trait = pregnant
		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
		has_relation_best_friend = root
		has_relation_friend = root
		has_relation_lover = root
		has_relation_soulmate = root
		has_hook = root
		has_strong_hook = root
		this = $PARTNER$.primary_spouse
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = $PARTNER$
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = $PARTNER$
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger yanwan_trigger = {
	has_character_flag = flag_yanwan
	is_physically_able_adult = yes
	is_courtier_of = $PARTNER$
	NOR = {
		this = root
		
		has_trait = pregnant
		has_trait = ill
		has_trait = wounded
		
		has_character_flag = flag_courted_favor
		has_character_flag = flag_scolded_consort
		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
		has_character_modifier = favored_consort_modifier
	}
	OR = { 
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = $PARTNER$
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = $PARTNER$
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger valid_partner_yanwan_trigger = {
	has_character_modifier = mourner_modifier
	is_landed = yes
	OR = {
		any_courtier = {
			this = root
		}
		any_vassal_or_below = {
			this = root
		}
	}
	exists = primary_spouse
	primary_spouse = {
		this = root
	}
	is_physically_able_adult = yes
	
	NOR = { 
		has_character_flag = has_consort_event_flag
		has_character_flag = flag_had_yanwan_singing_event 
		location = {
			OR = {
				has_province_modifier = winter_harsh_modifier
				has_province_modifier = winter_normal_modifier
			}
		}
	}
	
	any_consort = {
		is_physically_able_adult = yes
		count >= 3
	}
	save_temporary_scope_as = temporary_partner
	OR = { 
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = scope:temporary_partner
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = scope:temporary_partner
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
	any_consort = {
		yanwan_trigger = { PARTNER = scope:temporary_partner }
	}
}

scripted_trigger eligible_heir_trigger = {
	age >= 9
	is_child_of = $PARTNER$
	OR = {
		AND = {
			is_landed = yes
			any_liege_or_above = { this = $PARTNER$ }
		}
		AND = {
			exists = court_owner
			court_owner = {
				this = $PARTNER$
			}
		}
	}
	character_gender_can_rule_title_trigger = {
		GENDER = this
		TITLE = $PARTNER$.primary_title
	}
	NOR = {
		has_trait = eunuch
		has_trait = bastard
		has_trait = devoted
		has_trait = order_member
		has_trait = bastard_founder
		has_trait = disinherited
		has_trait = denounced
	}
}

scripted_trigger threatening_consort_trigger = {
	is_physically_able_ai_adult = yes
	age <= 44
	sex_opposite_of = $PARTNER$
	is_courtier_of = $PARTNER$
	OR = {
		has_character_modifier = favored_consort_modifier
		has_trait = beauty_good_2
		has_trait = beauty_good_3
		AND = {
			exists = $PARTNER$.primary_spouse
			this = $PARTNER$.primary_spouse
		}
		has_court_position = grand_consort_court_position
		any_close_family_member = {
			OR = {
				is_powerful_vassal_of = $PARTNER$
				is_councillor_of = $PARTNER$
				is_parent_of = $PARTNER$
				is_liege_or_above_of = $PARTNER$
				AND = {	
					is_knight_of = $PARTNER$
					is_acclaimed = yes
				}
			}
		}
	}
	
	NOR = {
		this = root
		has_trait = pregnant
		has_character_modifier = unfavored_consort_modifier
		has_character_modifier = langhua_bracelet
		has_character_modifier = lingrong_ointment
		has_opinion_modifier = {
			target = root
			modifier = gifted_me_poison_opinion
		}
		has_character_flag = flag_considered_consort
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = $PARTNER$
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = $PARTNER$
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger is_valid_harem_authority_trigger = {
	is_healthy = yes
	is_courtier_of = root
	OR = {
		is_spouse_of = root
		has_court_position = grand_consort_court_position
		is_parent_of = root
	}
	NOR = {
		exists = scope:is_being_divorced
		exists = scope:is_being_set_aside
		
		has_trait = pregnant
		has_trait = ill
		has_trait = wounded
		
		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_flag = flag_scolded_consort
	}
	is_physically_able_ai_adult = yes
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
	NOR = {
		has_trait = craven
		has_trait = shy
		has_trait = forgiving
		has_trait = compassionate
	}
	OR = { 	
		accepts_concubinage = yes
		accepts_polygamy = yes
	}
}

scripted_trigger is_valid_harem_victim_trigger = {
	is_healthy = yes
	is_physically_able_ai_adult = yes
	is_courtier_of = root
	NOR = {
		this = $CONSORT_AUTHORITY$
		
		AND = {	
			exists = root.primary_spouse
			this = root.primary_spouse
		}
		is_parent_of = root
		exists = scope:is_being_divorced
		exists = scope:is_being_set_aside
		has_trait = pregnant
		has_trait = ill
		has_trait = wounded
		
		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
		
		has_relation_soulmate = $CONSORT_AUTHORITY$
		has_relation_lover = $CONSORT_AUTHORITY$
		
		has_relation_best_friend = $CONSORT_AUTHORITY$
		has_relation_friend = $CONSORT_AUTHORITY$
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
	OR = {
		is_concubine_of = root
		AND = {
			is_spouse_of = root
			$CONSORT_AUTHORITY$ = {
				OR = {
					is_parent_of = root
					AND = {	
						exists = root.primary_spouse
						this = root.primary_spouse
					}
					has_court_position = grand_consort_court_position
				}
			}
		}
	}
}

scripted_trigger is_valid_generic_consort_trigger = {
	OR = {
		is_consort_of = root
		is_parent_of = root
	}
	is_healthy = yes
	is_physically_able_ai_adult = yes
	is_courtier_of = root
	NOR = {
		
		exists = scope:is_being_divorced
		exists = scope:is_being_set_aside
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}
####################
##Scripted effects##
####################

##The victim cries to a higher-ranked person about being punished##
scripted_effect begging_punished_consort_effect = {
	if = {
		limit = {
			$BEGGAR$ = {
				is_alive = yes
				OR = {
					has_character_modifier = recently_tortured
					has_character_modifier = hunt_tasted_the_belt_modifier
					has_character_modifier = sleep_deprived_modifier
					has_character_modifier = intrigue_starved_and_deprived_modifier
				}
			}
		}
		random_list = {
			50 = { #The victim whines
				opinion_modifier = { #Opinion
					WHO = $BEGGAR$
					opinion_target = $AUTHORITY$
					min = -50
					max = 50
					multiplier = 0.50
				}
				opinion_modifier = { #Opinion
					WHO = $AUTHORITY$
					opinion_target = $BEGGAR$
					min = -50
					max = 20
					multiplier = 0.50
				}
				modifier = { #Traits
					$BEGGAR$ = { has_trait = brave }
					add = 10
				}
				modifier = { #Traits
					$BEGGAR$ = { has_trait = vengeful }
					add = 15
				}
				modifier = { #Traits
					$BEGGAR$ = { has_trait = callous }
					add = 15
				}
				modifier = { #Traits
					$BEGGAR$ = { has_trait = craven }
					add = -20
				}
				modifier = { #Traits
					$BEGGAR$ = { has_trait = shy }
					add = -20
				}
				modifier = { #Harem consorts wouldn't see it as worth it
					$BEGGAR$ = { 
						NOR = { 	
							accepts_concubinage = yes
							accepts_polygamy = yes
						}
					}
					add = -30
				}
				modifier = { #Evil consorts won't take punishment really well
					$BEGGAR$ = { harem_politics_evil_consort_trigger = yes }
					add = 10
				}
				modifier = { #Favored consort
					$BEGGAR$ = { has_character_modifier = favored_consort_modifier }
					add = 10
				}
				modifier = { #Arrogant consorts won't take disrespect lightly
					$BEGGAR$ = { 
						OR = {
							has_trait = arrogant
							any_close_family_member = {
								OR = {
									is_powerful_vassal_of = $AUTHORITY$
									is_councillor_of = $AUTHORITY$
									is_close_family_of = $AUTHORITY$
									is_liege_or_above_of = $AUTHORITY$
									AND = {
										is_knight_of = $AUTHORITY$
										is_acclaimed = yes
									}
								}
							}
						}
					}
					add = 10
				}
				compare_modifier = { #Diplomacy
					value = $BEGGAR$.diplomacy
					multiplier = 0.5
				}
				modifier = { #scope:secondary_actor is unfavored
					scope:secondary_actor = { has_character_modifier = unfavored_consort_modifier }
					add = 10
				}
				modifier = { #scope:secondary_actor isn't influential
					scope:secondary_actor = { 
						any_close_family_member = {
							NOR = {
								is_powerful_vassal_of = $AUTHORITY$
								is_councillor_of = $AUTHORITY$
								is_close_family_of = $AUTHORITY$
								is_liege_or_above_of = $AUTHORITY$
								AND = {
									is_knight_of = $AUTHORITY$
									is_acclaimed = yes
								}
							}
						}
					}
					add = 10
				}
				$BEGGAR$ = {
					save_scope_as = beggar
				}
				scope:secondary_actor = {
					save_scope_as = recipient
				}
				clear_saved_scope = secondary_actor
				$AUTHORITY$ = {
					trigger_event = {
						id = harem_politics.0014
						days = 3
					}
				}
			}
			50 = { #Nothing happens
				opinion_modifier = { #Opinion
					WHO = $BEGGAR$
					opinion_target = $AUTHORITY$
					min = -15
					max = 50
					multiplier = -0.50
				}
				opinion_modifier = { #Opinion
					WHO = $AUTHORITY$
					opinion_target = $BEGGAR$
					min = -15
					max = 50
					multiplier = -0.50
				}
				modifier = { #Unfavored consort
					$BEGGAR$ = { has_character_modifier = unfavored_consort_modifier }
					add = 15
				}
				modifier = { #Traits
					$BEGGAR$ = { has_trait = content }
					add = 10
				}
				modifier = { #Traits
					$BEGGAR$ = { has_trait = humble }
					add = 10
				}
				modifier = { #Traits
					$BEGGAR$ = { has_trait = craven }
					add = 10
				}
				modifier = { #Traits
					$BEGGAR$ = { has_trait = shy }
					add = 10
				}
				modifier = { #Traits
					$BEGGAR$ = { has_trait = forgiving }
					add = 15
				}
				modifier = { #Traits
					$BEGGAR$ = { has_trait = compassionate }
					add = 15
				}
				modifier = { #Arrogant consorts won't take disrespect lightly
					$BEGGAR$ = { 
						NOR = {
							has_trait = arrogant
							any_close_family_member = {
								OR = {
									is_powerful_vassal_of = $AUTHORITY$
									is_councillor_of = $AUTHORITY$
									is_close_family_of = $AUTHORITY$
									is_liege_or_above_of = $AUTHORITY$
									AND = {
										is_knight_of = $AUTHORITY$
										is_acclaimed = yes
									}
								}
							}
						}
					}
					add = 10
				}
				modifier = { #scope:secondary_actor is favored
					scope:secondary_actor = { has_character_modifier = favored_consort_modifier }
					add = 15
				}
				modifier = { #scope:secondary_actor is influential
					scope:secondary_actor = { 
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = $AUTHORITY$
								is_councillor_of = $AUTHORITY$
								is_close_family_of = $AUTHORITY$
								is_liege_or_above_of = $AUTHORITY$
								AND = {
									is_knight_of = $AUTHORITY$
									is_acclaimed = yes
								}
							}
						}
					}
					add = 15
				}
				modifier = { #scope:secondary_actor is influential
					scope:secondary_actor = { 
						any_child = {
							this = $AUTHORITY$
						}
					}
					add = 25
				}
			}
		}
	}
}

scripted_effect close_relations_torture_opinion_effect = {
	# Victim's family & spouse hates executioner
	every_close_family_member = {
		limit = { 
			AND = {
				NOT = { this = $EXECUTIONER$ } 
				OR = {
					AND = {
						is_spouse_of = $VICTIM$
						opinion = {
							target = $VICTIM$
							value >= 20
						}
					}
					NOT = { is_spouse_of = $VICTIM$ } 
				}
			}
		}
		add_to_temporary_list = victim_family_list
	}
	
	if = {
		limit = {
			any_in_list = {
				list = victim_family_list
				count > 0
			}
		}
		if = {
			limit = {
				$EXECUTIONER$ = {
					has_execute_reason = $VICTIM$
				}
			}
			every_in_list = {
				list = victim_family_list
				custom = all_close_family_and_spouses
				add_opinion = {
					target = $EXECUTIONER$
					modifier = executed_close_family
				}
			}
		}
		else = {
			every_in_list = {
				list = victim_family_list
				custom = all_close_family_and_spouses
				add_opinion = {
					target = $EXECUTIONER$
					modifier = executed_close_family_crime
				}
			}
		}
	}

	# Victim's dynasty hates executioner
	if = {
		limit = {
			exists = dynasty
			exists = $EXECUTIONER$.dynasty
			NOT = { dynasty = $EXECUTIONER$.dynasty }
			NOT = {
				$EXECUTIONER$ = {
					has_execute_reason = $VICTIM$
				}
			}
		}
		dynasty = {
			every_dynasty_member = {
				limit = {
					AND = {
						NOR = {
							this = $VICTIM$
							is_in_list = victim_family_list
						}
						OR = {
							AND = {
								is_spouse_of = $VICTIM$
								opinion = {
									target = $VICTIM$
									value >= 20
								}
							}
							NOT = { is_spouse_of = $VICTIM$ } 
						}
					}
				}
				custom = all_dynasty_members
				add_to_temporary_list = victim_dynasty_list
				add_opinion = {
					target = $EXECUTIONER$
					modifier = executed_dynasty_member
				}
			}
		}
	}
	
	# Victim's friends and lovers
	every_relation = {
		type = friend
		limit = {
			NOR = {
				this = $VICTIM$
				is_in_list = victim_family_list
				is_in_list = victim_dynasty_list
			}
		}
		add_to_list = victim_close_relations_list
	}
	every_relation = {
		type = lover
		limit = {
			NOR = {
				this = $VICTIM$
				is_in_list = victim_family_list
				is_in_list = victim_dynasty_list
				is_in_list = victim_close_relations_list
			}
		}
		add_to_list = victim_close_relations_list
	}
	if = {
		limit = {
			any_in_list = {
				list = victim_close_relations_list
				always = yes
			}
		}
		every_in_list = {
			list = victim_close_relations_list
			custom = all_friends_and_lovers
			add_opinion = {
				target = $EXECUTIONER$
				modifier = executed_close_relation_opinion
			}
		}
	}
}

scripted_effect mild_close_relations_torture_opinion_effect = {
	# Victim's family & spouse hates executioner
	every_close_family_member = {
		limit = { 
			AND = {
				NOT = { this = $EXECUTIONER$ } 
				OR = {
					AND = {
						is_spouse_of = $VICTIM$
						opinion = {
							target = $VICTIM$
							value >= 20
						}
					}
					NOT = { is_spouse_of = $VICTIM$ } 
				}
			}
		}
		add_to_temporary_list = victim_family_list
	}
	
	if = {
		limit = {
			any_in_list = {
				list = victim_family_list
				count > 0
			}
		}
		show_as_tooltip = {
			every_in_list = {
				list = victim_family_list
				custom = all_close_family_and_spouses
				add_opinion = {
					target = $EXECUTIONER$
					modifier = cruelty_opinion
					opinion = -15
				}
			}
		}
		hidden_effect = {
			every_in_list = {
				list = victim_family_list
				limit = { NOT = { is_spouse_of = $VICTIM$ } }
				send_interface_toast = {
					type = event_generic_bad
					title = punished_relative_t
					right_icon = scope:secondary_recipient
					left_icon = scope:secondary_actor
					custom_tooltip = punished_consort_severe_desc
					add_opinion = {
						target = $EXECUTIONER$
						modifier = cruelty_opinion
						opinion = -15
					}
				}
			}
		}
	}
	
	# Victim's friends and lovers
	every_relation = {
		type = friend
		limit = {
			NOR = {
				any_consort = {
					this = $VICTIM$
				}
				this = $VICTIM$
				is_in_list = victim_family_list
			}
		}
		add_to_list = victim_close_relations_list
	}
	every_relation = {
		type = lover
		limit = {
			NOR = {
				any_consort = {
					this = $VICTIM$
				}
				this = $VICTIM$
				is_in_list = victim_family_list
				is_in_list = victim_close_relations_list
			}
		}
		add_to_list = victim_close_relations_list
	}
	if = {
		limit = {
			any_in_list = {
				list = victim_close_relations_list
				always = yes
			}
		}
		show_as_tooltip = {
			every_in_list = {
			list = victim_close_relations_list
			custom = all_friends_and_lovers
				add_opinion = {
					target = $EXECUTIONER$
					modifier = cruelty_opinion
					opinion = -10
				}
			}
		}
		hidden_effect = {
			every_in_list = {
				list = victim_close_relations_list
				send_interface_toast = {
					type = event_generic_bad
					title = punished_acquaintance_t
					right_icon = scope:secondary_recipient
					left_icon = scope:secondary_actor
					custom_tooltip = punished_consort_severe_desc
					add_opinion = {
						target = $EXECUTIONER$
						modifier = cruelty_opinion
						opinion = -10
					}
				}
			}
		}
	}
}

scripted_effect partner_consorts_opinion_effect = {
	show_as_tooltip = {
		if = {
			limit = {
				AND = {
					OR = {
						has_relation_best_friend = scope:valid_target_consort
						has_relation_friend = scope:valid_target_consort
						has_relation_lover = scope:valid_target_consort
						has_relation_soulmate = scope:valid_target_consort
						opinion = {
							target = scope:valid_target_consort
							value >= 20
						}
						has_trait = forgiving
						has_trait = compassionate
					}
					NOT = {
						any_close_family_member = {
							this = scope:valid_target_consort
						}
					}
				}
			}
			add_opinion = {
				target = scope:secondary_actor
				modifier = cruelty_opinion
				opinion = -20
			}
		}
	}
	hidden_effect = {
		send_interface_toast = {
			type = event_generic_bad
			title = punished_consort_t
			right_icon = scope:secondary_recipient
			left_icon = scope:secondary_actor
			custom_tooltip = punished_consort_severe_desc
			if = {
				limit = {
					AND = {
						OR = {
							has_relation_best_friend = scope:valid_target_consort
							has_relation_friend = scope:valid_target_consort
							has_relation_lover = scope:valid_target_consort
							has_relation_soulmate = scope:valid_target_consort
							opinion = {
								target = scope:valid_target_consort
								value >= 20
							}
							has_trait = forgiving
							has_trait = compassionate
						}
						NOT = {
							any_close_family_member = {
								this = scope:valid_target_consort
							}
						}
					}
				}
				add_opinion = {
					target = scope:secondary_actor
					modifier = cruelty_opinion
					opinion = -20
				}
			}
		}
		every_consort = {
			limit = {
				NOR = {
					this = scope:valid_target_consort
					this = scope:secondary_actor
				}
			}
			send_interface_toast = {
				type = event_generic_bad
				title = punished_consort_t
				right_icon = scope:secondary_recipient
				left_icon = scope:secondary_actor
				custom_tooltip = punished_consort_severe_desc
				if = {
					limit = {
						AND = {
							NOR = {
								any_close_family_member = {
									this = scope:valid_target_consort
								}
								has_relation_rival = scope:valid_target_consort
								has_relation_soulmate = scope:valid_target_consort
							}
							OR = {
								is_concubine = yes
								AND = {
									is_married = yes
									scope:valid_target_consort = {
										is_married = yes
									}
									NOT = {
										this = scope:partner.primary_spouse
									}
								}
							}
						}
					}
					stress_impact = {
						base = minor_stress_impact_gain
					}
					add_opinion = {
						target = scope:secondary_actor
						modifier = cruelty_opinion
						opinion = -20
					}
				}
				if = {
					limit = {
						AND = {
							NOT = {
								any_close_family_member = {
									this = scope:valid_target_consort
								}
							}
							OR = {
								has_relation_rival = scope:valid_target_consort
								has_relation_soulmate = scope:valid_target_consort
							}
						}
					}
					stress_impact = {
						base = minor_stress_impact_loss
					}
				}
			}
		}
	}
}

scripted_effect consort_torture_effect = {
	stress_impact = {
		temperate = minor_stress_impact_gain
	}
	
	add_dread = medium_dread_gain
	
	#Original torture effects
	scope:valid_target_consort = {
		worsening_relationship_consort_effect = yes
		add_character_flag = {
			flag = is_being_tortured
			months = 6 # Players in MP can keep the event window open...
		}
		save_scope_as = recipient
		save_scope_as = secondary_recipient
		scope:partner = {
			partner_consorts_opinion_effect = yes
		}
		#Wounds
		if = {
			limit = {
				NOT = {
					has_trait = wounded
				}
			}
			random = {
				chance = 100
				random_list = {
					95 = {
						modifier = { #Weak
							add = 10
							has_trait = physique_bad_1							
						}
						modifier = { #Weak
							add = 15
							has_trait = physique_bad_2							
						}
						modifier = { #Weak
							add = 20
							has_trait = physique_bad_3							
						}
						modifier = { #Weak
							add = 10
							has_trait = bleeder							
						}
						#Effect
						add_trait = wounded_1
					}
					
					95 = {
						modifier = { #Strong
							add = 10
							has_trait = physique_good_1 							
						}
						modifier = { #Strong
							add = 15
							has_trait = physique_good_2							
						}
						modifier = { #Strong
							add = 20
							has_trait = physique_good_3							
						}
						modifier = { #Strong
							add = 10
							has_trait = strong						
						}
					}
					10 = {
						modifier = { #Weak
							add = 13
							has_trait = physique_bad_1							
						}
						modifier = { #Weak
							add = 23
							has_trait = physique_bad_2							
						}
						modifier = { #Weak
							add = 33
							has_trait = physique_bad_3							
						}
						modifier = { #Weak
							add = 10
							has_trait = bleeder							
						}
						#Effect
						death = {
							death_reason = death_punishment
							killer = scope:secondary_actor
						}
						hidden_effect = {
							close_relations_torture_opinion_effect = { VICTIM = scope:valid_target_consort EXECUTIONER = scope:secondary_actor }
						}
					}
				}
			}
		}
		if = {
			limit = {
				is_alive = yes
			}
			scope:secondary_actor = {
				save_scope_as = actor
				###EFFECT TOOLTIP###
				torture_interaction_actor_effect = yes
				show_as_tooltip = {
					scope:recipient = {
						add_character_modifier = {
							modifier = recently_tortured
							years = 5
						}
					}
				}

				###EVENTS###
				hidden_effect = {
					#Torture method for descs
					random_list = {
						3 = { save_scope_value_as = { name = torture_method value = flag:rack } }
						3 = { save_scope_value_as = { name = torture_method value = flag:whip } }
						1 = { save_scope_value_as = { name = torture_method value = flag:rats } }
						8 = {
							trigger = {
								scope:actor = { has_trait = poet }
							}
							save_scope_value_as = {
								name = torture_method
								value = flag:poetry
							}
						}
					}

					#They have a secret I want to know about
					if = {
						limit = {
							scope:recipient = {	
								OR = {
									any_secret = {
										torture_secret_trigger = { PARTICIPANT = scope:recipient }
									}
									any_known_secret = {
										secret_owner = { save_temporary_scope_as = torture_secret_owner }
										torture_secret_trigger = { PARTICIPANT = scope:torture_secret_owner }
									}
								}
							}
						}
						scope:recipient = {
							trigger_event = {
								id = prison_c.1001
								days = 1
							}
						}
					}
					else = {
						scope:actor = {
							trigger_event = {
								id = prison_c.1010
								days = 1
							}
						}
					}	
				}

				# Dark Insights Perk:
				if = {
					limit = {
						scope:actor = { has_perk = dark_insights_perk }
					}
					scope:actor = {
						dark_insights_skill_gain_roll_effect = yes
					}
				}
			}
		}
		clear_saved_scope = recipient
		clear_saved_scope = actor
	}
	
	hidden_effect = {
		scope:secondary_actor = {
			add_opinion = {
				target = scope:valid_target_consort
				modifier = insolent_consort_opinion
				opinion = -10
			}
		}
	}
}

scripted_effect sleep_deprieved_starved_effect = {
	stress_impact = {
		compassionate = minor_stress_impact_gain
		forgiving = minor_stress_impact_gain
		calm = minor_stress_impact_gain
		temperate = minor_stress_impact_gain
		callous = minor_stress_impact_loss
		vengeful = minor_stress_impact_loss
		sadistic = minor_stress_impact_loss
	}
	
	add_dread = medium_dread_gain
	
	scope:valid_target_consort = {
		worsening_relationship_consort_effect = yes
		save_scope_as = secondary_recipient
		add_character_modifier = {
			modifier = intrigue_starved_and_deprived_modifier
			years = 2
		}
		add_opinion = {
			target = scope:secondary_actor
			modifier = cruelty_opinion
			opinion = -60
		}
		mild_close_relations_torture_opinion_effect = { VICTIM = scope:valid_target_consort EXECUTIONER = scope:secondary_actor }
	}
	
	scope:partner = {
		partner_consorts_opinion_effect = yes
	}
	hidden_effect = {
		scope:secondary_actor = {
			add_opinion = {
				target = scope:valid_target_consort
				modifier = insolent_consort_opinion
				opinion = -10
			}
		}
	}
}

scripted_effect high_punishment_effect = {
	stress_impact = {
		compassionate = miniscule_stress_impact_gain
		forgiving = miniscule_stress_impact_gain
		calm = miniscule_stress_impact_gain
	}
	
	add_dread = minor_dread_gain
	
	scope:valid_target_consort = {
		worsening_relationship_consort_effect = yes
		add_character_modifier = {
			modifier = hunt_tasted_the_belt_modifier
			years = 2
		}
		add_opinion = {
			target = scope:secondary_actor
			modifier = cruelty_opinion
			opinion = -15
		}
		save_scope_as = secondary_recipient
	}
	
	scope:partner = {
		hidden_effect = {
			send_interface_toast = {
				type = event_generic_bad
				title = punished_consort_t
				right_icon = scope:secondary_recipient
				left_icon = scope:secondary_actor
				custom_tooltip = punished_consort_desc
			}
			every_consort = {
				limit = {
					NOR = {
						this = scope:valid_target_consort
						this = scope:secondary_actor
					}
				}
				send_interface_toast = {
					type = event_generic_bad
					title = punished_consort_t
					right_icon = scope:secondary_recipient
					left_icon = scope:secondary_actor
					custom_tooltip = punished_consort_desc
				}
			}
		}
	}
	hidden_effect = {
		scope:secondary_actor = {
			add_opinion = {
				target = scope:valid_target_consort
				modifier = insolent_consort_opinion
				opinion = -10
			}
		}
	}
}

scripted_effect moderate_punishment = {
	stress_impact = {
		compassionate = miniscule_stress_impact_gain
		forgiving = miniscule_stress_impact_gain
		calm = miniscule_stress_impact_gain
	}
	
	add_dread = minor_dread_gain
	
	scope:valid_target_consort = {
		worsening_relationship_consort_effect = yes
		add_character_modifier = {
			modifier = sleep_deprived_modifier
			years = 2
		}
		add_opinion = {
			target = scope:secondary_actor
			modifier = cruelty_opinion
			opinion = -15
		}
		save_scope_as = secondary_recipient
	}
	
	scope:partner = {
		hidden_effect = {
			send_interface_toast = {
				type = event_generic_bad
				title = punished_consort_t
				right_icon = scope:secondary_recipient
				left_icon = scope:secondary_actor
				custom_tooltip = punished_consort_desc
			}
			every_consort = {
				limit = {
					NOR = {
						this = scope:valid_target_consort
						this = scope:secondary_actor
					}
				}
				send_interface_toast = {
					type = event_generic_bad
					title = punished_consort_t
					right_icon = scope:secondary_recipient
					left_icon = scope:secondary_actor
					custom_tooltip = punished_consort_desc
				}
				
			}
		}				
	}
	hidden_effect = {
		scope:secondary_actor = {
			add_opinion = {
				target = scope:valid_target_consort
				modifier = insolent_consort_opinion
				opinion = -10
			}
		}
	}
}

scripted_effect scolding_punishment = {
	stress_impact = {
		sadistic = minor_stress_impact_gain
		callous = minor_stress_impact_gain
		vengeful = minor_stress_impact_gain
		calm = minor_stress_impact_loss
	}
	scope:valid_target_consort = {
		add_opinion = {
			target = scope:secondary_actor
			modifier = scolded_me_opinion
			opinion = -5
		}
		add_character_flag = {
			flag = flag_scolded_consort
			years = 1
		}
	}
	hidden_effect = {
		scope:secondary_actor = {
			add_opinion = {
				target = scope:valid_target_consort
				modifier = insolent_consort_opinion
				opinion = -5
			}
		}
	}
}

scripted_effect worsening_relationship_consort_effect = {
	if = {
		limit = {
			can_set_relation_potential_rival_trigger = { CHARACTER = scope:secondary_actor }
		}
		set_relation_potential_rival = scope:secondary_actor
	}
	else_if = {
		limit = {
			has_relation_potential_rival = scope:secondary_actor
		}
		set_relation_rival = { 
			target = scope:secondary_actor
			reason = consort_rival_reason
		}
	}
	else_if = {
		limit = {
			has_relation_rival = scope:secondary_actor
			can_set_relation_nemesis_trigger = { CHARACTER = scope:secondary_actor }
		}
		set_relation_nemesis = { 
			target = scope:secondary_actor
			reason = consort_rival_reason 
		}
	}
}

##################################
##The Noble Consort punishes Mei##
##################################
consort_events.0001 = {
	type = character_event
	title = consort_events.0001.t
	desc = consort_events.0001.desc
	theme = family
	override_background = {
		reference = garden
	}
	
	left_portrait = { 	
		character = scope:valid_target_consort
		animation = schadenfreude
	}
	right_portrait = { 	
		character = root
		animation = rage
	}
	
	trigger = {
		age >= 27
		OR = {
			has_court_position = grand_consort_court_position
			is_married = yes
		}
		any_consort = {
			NOR = { 
				has_character_flag = had_mei_event_flag 
				has_character_flag = has_consort_event_flag 
			}
			is_physically_able_adult = yes
			any_consort = {
				is_physically_able_adult = yes
				count >= 2
			}
			save_temporary_scope_as = temporary_partner
			any_concubine = {
				mei_daying_trigger = yes
				OR = {
					AND = {
						is_travelling = yes
						current_travel_plan ={
							travel_plan_owner = scope:temporary_partner
						}
						root = {
							is_travelling = yes
							current_travel_plan ={
								travel_plan_owner = scope:temporary_partner
							}
						}
					}
					AND = {
						is_travelling = no
						root = {
							is_travelling = no
						}
					}
				}
			}
		}
		OR = {
			AND = {
				is_landed = yes
				any_liege_or_above = { 
					this = scope:temporary_partner
				}
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
		}
		is_physically_able_adult = yes
	}
	
	immediate = {
		random_consort = {
			limit = {
				AND = {
					NOR = { 
						has_character_flag = had_mei_event_flag 
						has_character_flag = has_consort_event_flag 
					}
					is_physically_able_adult = yes
					any_consort = {
						is_physically_able_adult = yes
						count >= 2
					}
					save_temporary_scope_as = temporary_partner
					any_concubine = {
						mei_daying_trigger = yes
						OR = {
							AND = {
								is_travelling = yes
								current_travel_plan ={
									travel_plan_owner = scope:temporary_partner
								}
								root = {
									is_travelling = yes
									current_travel_plan ={
										travel_plan_owner = scope:temporary_partner
									}
								}
							}
							AND = {
								is_travelling = no
								root = {
									is_travelling = no
								}
							}
						}
					}
				}
			}
			save_scope_as = partner
		}
		scope:partner = {
			add_character_flag = {
				flag = has_consort_event_flag
				months = 5
			}
			every_concubine = {
				limit = {
					AND = {
						mei_daying_trigger = yes
						OR = {
							AND = {
								is_travelling = yes
								current_travel_plan ={
									travel_plan_owner = scope:partner
								}
								root = {
									is_travelling = yes
									current_travel_plan ={
										travel_plan_owner = scope:partner
									}
								}
							}
							AND = {
								is_travelling = no
								root = {
									is_travelling = no
								}
							}
						}
					}
				}
				add_to_list = mei_list 
			}
			random_in_list = {
				list = mei_list
				weight = {
					base = 10
					modifier = {
						OR = {
							has_trait = arrogant
							has_trait = ambitious
							has_trait = brave
						}
						add = 20
					}
					modifier = {
						opinion = {
							target = root
							value <= low_negative_opinion
						}
						add = 20
					}
					modifier = {
						is_lowborn = yes
						add = 20
					}
					modifier = {
						has_character_modifier = favored_consort_modifier
						add = 20
					}
					modifier = {
						any_close_or_extended_family_member = {
							NOR = {
								this = scope:partner.primary_spouse
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								is_liege_or_above_of = scope:partner
								this = scope:partner
							}
						}
						add = 20
					}
				}
				save_scope_as = valid_target_consort
			}
		}
		save_scope_as = secondary_actor
	}
	
	#Torture Mei
	option = {
		name = consort_events.0001.a
		flavor = consort_events.0001.a_tt
		trait = callous
		trait = vengeful
		trait = sadistic
		trigger = {
			OR = {
				has_trait = callous
				has_trait = vengeful
				has_trait = sadistic
				has_relation_rival = scope:valid_target_consort
				has_relation_nemesis = scope:valid_target_consort
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
			}
		}
		
		consort_torture_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.25
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -30
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -10
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = temperate
					has_trait = calm
				}
				add = -50
			}
			modifier = { #Stress management
				OR = {
					has_trait = callous
					has_trait = vengeful
					has_trait = sadistic
				}
				add = 25
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -25
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						NOR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 25
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			modifier = { #More if good contacts
				OR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
		}
	}
	
	#Discipline Mei
	option = {
		name = consort_events.0001.b
		
		high_punishment_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = 0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -30
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 10
			}
			modifier = { #More if high target opinion
				AND = {
					opinion = {
						target = scope:valid_target_consort
						value > low_negative_opinion
					}
					opinion = {
						target = scope:valid_target_consort
						value <= 10
					}
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = calm
				}
				add = -25
			}
			modifier = { #Stress management
				OR = {
					has_trait = temperate
					has_trait = just
					has_trait = diligent
				}
				add = 25
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -25
			}
			
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						NOR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 20
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			modifier = { #More if good contacts
				OR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
		}
	}
	
	#Lecture them
	option = {
		name = consort_events.0001.c
		
		scolding_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = 10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 10
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 20
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value >= medium_positive_opinion
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = calm
				}
				add = 25
			}
			modifier = { #Stress management
				OR = {
					has_trait = callous
					has_trait = vengeful
					has_trait = sadistic
				}
				add = -50
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 15
			}
			
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 40
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 50
			}
			modifier = { #More if bad contacts
				NOR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
					AND = {	
						exists = scope:partner.primary_spouse
						this = scope:partner.primary_spouse
					}
				}
				add = 10
			}
		}
	}
	
	#Ignore them
	option = {
		name = consort_events.0001.d
		stress_impact = {
			diligent = miniscule_stress_impact_gain
			just = miniscule_stress_impact_gain
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			lazy = minor_stress_impact_loss
			cynical = minor_stress_impact_loss
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = 10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 10
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 20
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value >= medium_positive_opinion
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = lazy
					has_trait = cynical
				}
				add = 25
			}
			modifier = { #Stress management
				OR = {
					has_trait = just
					has_trait = diligent
				}
				add = -25
			}
			modifier = { #Stress management
				OR = {
					has_trait = callous
					has_trait = vengeful
					has_trait = sadistic
				}
				add = -50
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 15
			}
			
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 40
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					NOR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 10
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 50
			}
			modifier = { #More if good contacts
				NOR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
		}
	}
	
	after = {
		scope:partner = {
			add_character_flag = {
				flag = had_mei_event_flag
				years = 5
			}
		}
		begging_punished_consort_effect = { BEGGAR = scope:valid_target_consort AUTHORITY = scope:partner }
	}
}

############################
##Consort Hua tortures Xia##
############################
consort_events.0002 = {
	type = character_event
	title = consort_events.0002.t
	desc = consort_events.0002.desc
	theme = family
	override_background = {
		reference = garden
	}
	
	left_portrait = { 	
		character = scope:valid_target_consort
		animation = rage
	}
	right_portrait = { 	
		character = scope:shen
		animation = disgust
	}
	
	trigger = {
		OR = {
			AND = {
				OR = {
					has_court_position = grand_consort_court_position
					is_married = yes
				}
				any_consort = {
					valid_partner_trigger = yes
				}
			}
			any_child = {
				valid_partner_trigger = yes
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
		}
		is_physically_able_adult = yes
	}
	
	immediate = {
		if = {
			limit = {
				any_consort = {	
					valid_partner_trigger = yes
				}
			}
			random_consort = {
				limit = {
					valid_partner_trigger = yes
				}
				save_scope_as = partner
			}
		}
		else_if = {
			limit = {
				any_child = {	
					valid_partner_trigger = yes
				}
			}
			random_child = {
				limit = {
					valid_partner_trigger = yes
				}
				save_scope_as = partner
			}
		}
		scope:partner = {
			add_character_flag = {
				flag = has_consort_event_flag
				months = 5
			}
			random_consort = {
				limit = {
					shen_trigger = { PARTNER = scope:partner }
				}
				save_scope_as = shen 
			}
			every_consort = {
				add_to_list = xia_changzai_list
			}
			random_in_list = {
				list = xia_changzai_list
				limit = {
					xia_changzai_trigger = { TARGET = scope:shen PARTNER = scope:partner }
				}
				weight = {
					base = 10
					modifier = {
						OR = {
							has_trait = arrogant
							has_trait = ambitious
						}
						add = 20
					}
					modifier = {
						has_character_flag = flag_new_consort
						add = 20
					}
				}
				save_scope_as = valid_target_consort
			}
			
			scope:shen = {
				if = {
					limit = { 
						NOR = { 
							has_relation_rival = scope:valid_target_consort
							has_relation_nemesis = scope:valid_target_consort
							has_relation_potential_rival = scope:valid_target_consort
						} 
					}
					set_relation_potential_rival = scope:valid_target_consort
				}
				add_opinion = {
					target = scope:valid_target_consort
					modifier = hatred_spouse_opinion
				}
			}
			scope:valid_target_consort = {
				add_opinion = {
					target = scope:shen
					modifier = hatred_spouse_opinion
				}
			}
		}
		save_scope_as = secondary_actor
	}
	
	#Investigate the matter
	option = {
		name = consort_events.0002.a
		flavor = consort_events.0002.a_tt
		hidden_effect = {
			trigger_event = consort_events.0003
		}
		stress_impact = {
			cynical = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
			craven = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_sociability = 1
				ai_energy = 0.5
			}
			modifier = { #Stress management
				OR = {
					has_trait = shy
					has_trait = craven
					has_trait = lazy
					has_trait = cynical
					has_trait = paranoid
				}
				add = -50
			}
		}
	}
	
	#Ignore them
	option = {
		name = consort_events.0002.b
		stress_impact = {
			diligent = minor_stress_impact_gain
			just = minor_stress_impact_gain
			lazy = minor_stress_impact_loss
			cynical = minor_stress_impact_loss
		}
		ai_chance = {
			base = 10
			modifier = { #Stress management
				OR = {
					has_trait = diligent
					has_trait = just
				}
				add = -50
			}
			modifier = { #Stress management
				OR = {
					has_trait = lazy
					has_trait = cynical
				}
				add = 50
			}
			ai_value_modifier = {
				ai_sociability = -1
				ai_energy = -0.5
			}
		}
	}
}

consort_events.0003 = {
	type = character_event
	title = consort_events.0002.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					any_child = {
						this = scope:partner
					}
				}
				desc = consort_events.0003.parent.desc
			}
			triggered_desc = {
				trigger = {
					any_consort = {
						this = scope:partner
					}
				}
				desc = consort_events.0003.consort.desc
			}
		}
		desc = consort_events.0003.end.desc
	}
	theme = family
	override_background = {
		reference = garden
	}
	
	left_portrait = { 	
		character = scope:valid_target_consort
		animation = beg
	}
	
	right_portrait = { 	
		character = root
		animation = eyeroll
	}
	
	lower_center_portrait = { 	
		character = scope:shen
	}
	
	trigger = {
		exists = scope:shen
		exists = scope:valid_target_consort
	}
	
	#Torture Xia
	option = {
		name = consort_events.0001.a
		flavor = consort_events.0001.a_tt
		trait = callous
		trait = vengeful
		trait = sadistic
		trigger = {
			OR = {
				has_trait = callous
				has_trait = vengeful
				has_trait = sadistic
				has_relation_rival = scope:valid_target_consort
				has_relation_nemesis = scope:valid_target_consort
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
			}
		}
		
		consort_torture_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.25
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -30
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -10
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:shen
					value >= medium_positive_opinion
				}
				add = 15
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = temperate
					has_trait = calm
				}
				add = -50
			}
			modifier = { #Stress management
				OR = {
					has_trait = callous
					has_trait = vengeful
					has_trait = sadistic
				}
				add = 25
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -25
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						NOR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 25
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			modifier = { #More if good contacts
				OR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
		}
	}
	
	#Discipline Xia
	option = {
		name = consort_events.0001.b
		
		high_punishment_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = 0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -30
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 10
			}
			modifier = { #More if high target opinion
				AND = {
					opinion = {
						target = scope:shen
						value >= 10
					}
					opinion = {
						target = scope:shen
						value < medium_positive_opinion
					}
				}
				add = 10
			}
			modifier = { #More if high target opinion
				AND = {
					opinion = {
						target = scope:valid_target_consort
						value > low_negative_opinion
					}
					opinion = {
						target = scope:valid_target_consort
						value <= 10
					}
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = calm
				}
				add = -25
			}
			modifier = { #Stress management
				OR = {
					has_trait = temperate
					has_trait = just
					has_trait = diligent
				}
				add = 25
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -25
			}
			
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						NOR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 20
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			modifier = { #More if good contacts
				OR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
		}
	}
	
	#Lecture them
	option = {
		name = consort_events.0001.c
		
		scolding_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = 10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 10
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 20
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value >= medium_positive_opinion
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = calm
				}
				add = 25
			}
			modifier = { #Stress management
				OR = {
					has_trait = callous
					has_trait = vengeful
					has_trait = sadistic
				}
				add = -50
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 15
			}
			
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 40
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 50
			}
			modifier = { #More if bad contacts
				NOR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
					AND = {	
						exists = scope:partner.primary_spouse
						this = scope:partner.primary_spouse
					}
				}
				add = 10
			}
		}
	}
	
	#Ignore them
	option = {
		name = consort_events.0001.d
		add_hook = {
			target = scope:valid_target_consort
			type = indebted_hook
		}
		scope:shen = {
			add_opinion = {
				target = root
				modifier = ignored_consort_opinion
			}
		}
		stress_impact = {
			diligent = miniscule_stress_impact_gain
			just = miniscule_stress_impact_gain
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			lazy = minor_stress_impact_loss
			cynical = minor_stress_impact_loss
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = 10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 10
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:shen
					value < low_positive_opinion
				}
				add = 10
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value >= medium_positive_opinion
				}
				add = 10
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 20
			}
			modifier = { #Stress management
				OR = {
					has_trait = lazy
					has_trait = cynical
				}
				add = 25
			}
			modifier = { #Stress management
				OR = {
					has_trait = just
					has_trait = diligent
				}
				add = -25
			}
			modifier = { #Stress management
				OR = {
					has_trait = callous
					has_trait = vengeful
					has_trait = sadistic
				}
				add = -50
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 15
			}
			
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 40
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					NOR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 10
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 50
			}
			modifier = { #More if good contacts
				NOR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
		}
	}
	after = {
		scope:partner = {
			add_character_flag = {
				flag = had_hua_fei_event_flag
				years = 2
			}
		}
		begging_punished_consort_effect = { BEGGAR = scope:valid_target_consort AUTHORITY = scope:partner }
	}
}

####################################
##A consort talks about a superior##
####################################

consort_events.0004 = {
	type = character_event
	title = consort_events.0004.t
	desc = consort_events.0004.desc
	theme = family
	override_background = {
		reference = garden
	}
	
	left_portrait = { 	
		character = scope:valid_target_consort
		animation = rage
	}
	right_portrait = { 	
		character = root
		animation = eavesdrop
	}
	
	trigger = {
		OR = {
			is_married = yes
			has_court_position = grand_consort_court_position
		}
		any_consort = {
			NOR = { 
				has_character_flag = ranting_consort_event 
				has_character_flag = has_consort_event_flag  
			}
			any_consort = {
				count >= 2
			}
			is_physically_able_adult = yes
			save_temporary_scope_as = temporary_partner
			any_consort = {
				superior_consort_trigger = yes
				save_temporary_scope_as = concubine_target
			}
			any_consort = {
				ranting_consort_trigger = { TARGET = scope:concubine_target PARTNER = scope:temporary_partner }
			}
		}
		OR = {
			AND = {
				is_landed = yes
				any_liege_or_above = { 
					this = scope:temporary_partner
				}
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
		}
		is_physically_able_adult = yes
	}
	
	immediate = {
		random_consort = {
			limit = {
				AND = {
					NOR = { 
						has_character_flag = ranting_consort_event 
						has_character_flag = has_consort_event_flag  
					}
					any_consort = {
						count >= 2
					}
					is_physically_able_adult = yes
					save_temporary_scope_as = temporary_partner
					any_consort = {
						superior_consort_trigger = yes
						save_temporary_scope_as = concubine_target
					}
					any_consort = {
						ranting_consort_trigger = { TARGET = scope:concubine_target PARTNER = scope:temporary_partner }
					}
				}
			}
			save_scope_as = partner
		}
		scope:partner = {
			add_character_flag = {
				flag = has_consort_event_flag
				months = 5
			}
			random_consort = {
				limit = {
					superior_consort_trigger = yes
				}
				save_scope_as = target_consort
			}
			every_consort = {
				limit = {
					ranting_consort_trigger = { TARGET = scope:target_consort PARTNER = scope:partner }
				}
				add_to_list = unruly_consorts_list
			}
		}
		random_in_list = {
			list = unruly_consorts_list
			weight = {
				base = 10
				modifier = {
					OR = {
						has_trait = arrogant
						has_trait = ambitious
						has_trait = brave
					}
					add = 20
				}
				modifier = {
					opinion = {
						target = scope:target_consort
						value <= low_negative_opinion
					}
					add = 20
				}
				modifier = {
					is_lowborn = no
					add = 20
				}
				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 20
				}
				modifier = {
					any_close_or_extended_family_member = {
						NOR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
					add = 20
				}
			}
			save_scope_as = valid_target_consort
		}
		if = {
			limit = {
				scope:target_consort = {
					this = root
				}
			}
			add_opinion = {
				target = scope:valid_target_consort
				modifier = hatred_spouse_opinion
			}
		}
		save_scope_as = secondary_actor
	}
	
	#Torture them
	option = {
		name = consort_events.0004.a
		trait = callous
		trait = vengeful
		trait = sadistic
		trigger = {
			OR = {
				has_trait = callous
				has_trait = vengeful
				has_trait = sadistic
				has_relation_rival = scope:valid_target_consort
				has_relation_nemesis = scope:valid_target_consort
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
			}
		}
		
		sleep_deprieved_starved_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.25
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -30
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -10
			}
			modifier = { #More if the target is root
				scope:target_consort = {
					this = root
				}
				add = 30
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:target_consort
					value >= medium_positive_opinion
				}
				add = 15
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = temperate
					has_trait = calm
				}
				add = -50
			}
			modifier = { #Stress management
				OR = {
					has_trait = callous
					has_trait = vengeful
					has_trait = sadistic
				}
				add = 25
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -25
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						NOR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 25
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			modifier = { #More if good contacts
				OR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
		}
	}
	
	#Deprive them from sleep
	option = {
		name = consort_events.0004.b
		
		moderate_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = 0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -30
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 10
			}
			modifier = { #More if high target opinion
				AND = {
					opinion = {
						target = scope:target_consort
						value >= 10
					}
					opinion = {
						target = scope:target_consort
						value < medium_positive_opinion
					}
				}
				add = 10
			}
			modifier = { #More if high target opinion
				AND = {
					opinion = {
						target = scope:valid_target_consort
						value > low_negative_opinion
					}
					opinion = {
						target = scope:valid_target_consort
						value <= 10
					}
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = calm
				}
				add = -25
			}
			modifier = { #Stress management
				OR = {
					has_trait = temperate
					has_trait = just
					has_trait = diligent
				}
				add = 25
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -25
			}
			
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						NOR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 20
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			modifier = { #More if good contacts
				OR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
		}
	}
	
	#Lecture them
	option = {
		name = consort_events.0001.c
		
		scolding_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = 10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 10
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 20
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value >= medium_positive_opinion
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = calm
				}
				add = 25
			}
			modifier = { #Stress management
				OR = {
					has_trait = callous
					has_trait = vengeful
					has_trait = sadistic
				}
				add = -50
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 15
			}
			
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 40
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 50
			}
			modifier = { #More if bad contacts
				NOR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
					AND = {	
						exists = scope:partner.primary_spouse
						this = scope:partner.primary_spouse
					}
				}
				add = 10
			}
		}
	}
	
	#Ignore them
	option = {
		name = consort_events.0001.d
		stress_impact = {
			diligent = miniscule_stress_impact_gain
			just = miniscule_stress_impact_gain
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			lazy = minor_stress_impact_loss
			cynical = minor_stress_impact_loss
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = 10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 10
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:target_consort
					value < low_positive_opinion
				}
				add = 10
			}
			modifier = { #More if high target opinion
				scope:target_consort = {
					this = root
				}
				add = -25
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value >= medium_positive_opinion
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = lazy
					has_trait = cynical
				}
				add = 25
			}
			modifier = { #Stress management
				OR = {
					has_trait = just
					has_trait = diligent
				}
				add = -25
			}
			modifier = { #Stress management
				OR = {
					has_trait = callous
					has_trait = vengeful
					has_trait = sadistic
				}
				add = -50
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 15
			}
			
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 40
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 20
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					NOR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 10
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 50
			}
			modifier = { #More if good contacts
				NOR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
		}
	}
	after = {
		scope:partner = {
			add_character_flag = {
				flag = ranting_consort_event
				years = 2
			}
		}
		begging_punished_consort_effect = { BEGGAR = scope:valid_target_consort AUTHORITY = scope:partner }
	}
}

###############################
##Favored consort is arrogant##
###############################

consort_events.0005 = {
	type = character_event
	title = consort_events.0005.t
	desc = {
		desc = consort_events.0005.start.desc
		first_valid = {
			triggered_desc = { #GC
				trigger = {
					has_court_position = grand_consort_court_position
				}
				desc = consort_events.0005.gc.desc
			}
			triggered_desc = {
				desc = consort_events.0005.ps.desc
			}
		}
		desc = consort_events.0005.end.desc
	}
	theme = family
	override_background = {
		reference = throne_room
	}
	
	right_portrait = { 	
		character = scope:valid_target_consort
		animation = personality_bold
	}
	left_portrait = { 	
		character = root
		animation = rage
	}
	
	trigger = {
		any_consort = {
			NOR = {
				has_character_flag = flag_had_arrogant_consort_event
				has_character_flag = has_consort_event_flag  
			}
			is_physically_able_adult = yes
			OR = {
				AND = {
					OR = {
						NOT = {
							exists = primary_spouse
						}
						AND = {
							exists = primary_spouse
							primary_spouse = {
								NOT = {
									this = root
								}
								is_landed = yes
							}
						}
					}
					root = {
						has_court_position = grand_consort_court_position
					}
				}
				AND = {
					exists = primary_spouse
					primary_spouse = {
						this = root
					}
				}
			}
			save_temporary_scope_as = temporary_partner
			any_consort = {
				is_physically_able_adult = yes
				is_courtier_of = scope:temporary_partner
				count >= 3
			}
			any_consort = {
				arrogant_consort_trigger = { PARTNER = scope:temporary_partner }
			}
		}
		OR = {
			AND = {
				is_landed = yes
				any_liege_or_above = { 
					this = scope:temporary_partner
				}
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
		}
		is_physically_able_adult = yes
	}
	
	immediate = {
		random_consort = {
			limit = {
				AND = {
					NOR = {
						has_character_flag = flag_had_arrogant_consort_event
						has_character_flag = has_consort_event_flag  
					}
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = prev
						count >= 3
					}
					is_physically_able_adult = yes
					OR = {
						AND = {
							OR = {
								NOT = {
									exists = primary_spouse
								}
								AND = {
									exists = primary_spouse
									primary_spouse = {
										NOT = {
											this = root
										}
										is_landed = yes
									}
								}
							}
							root = {
								has_court_position = grand_consort_court_position
							}
						}
						AND = {
							exists = primary_spouse
							primary_spouse = {
								this = root
							}
						}
					}
					save_temporary_scope_as = temporary_partner
					any_consort = {
						arrogant_consort_trigger = { PARTNER = scope:temporary_partner }
					}
				}
			}
			save_scope_as = partner
		}
		scope:partner = {
			add_character_flag = {
				flag = has_consort_event_flag
				months = 5
			}
			every_consort = {
				limit = {
					arrogant_consort_trigger = { PARTNER = scope:partner }
				}
				add_to_temporary_list = arrogant_consort_list
			}
		}
		random_in_list = {
			list = arrogant_consort_list
			weight = {
				base = 10
				modifier = {
					has_trait = arrogant
					add = 20
				}
				modifier = {
					has_court_position = grand_consort_court_position
					add = 20
				}
				modifier = {
					has_trait = ambitious
					add = 20
				}
				modifier = {
					has_trait = brave
					add = 10
				}
				modifier = {
					has_character_flag = flag_new_consort
					add = 20
				}
				modifier = {
					opinion = {
						target = root
						value <= low_negative_opinion
					}
					add = 20
				}
				modifier = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
					add = 20
				}
			}
			save_scope_as = valid_target_consort
		}
		hidden_effect = {
			scope:partner = {
				every_consort = {
					limit = {
						AND = {
							OR = {
								accepts_concubinage = yes
								accepts_polygamy = yes
							}
							NOR = {
								this = root
								this = scope:valid_target_consort
							}
							opinion = {
								target = scope:valid_target_consort
								value <= 10
							}
						}
					}
					add_opinion = {
						target = scope:valid_target_consort
						modifier = insolent_consort_opinion
						opinion = -10
					}
				}
			}
		}
		save_scope_as = secondary_actor
	}
	
	#Torture them
	option = {
		name = consort_events.0001.a
		flavor = consort_events.0001.a_tt
		trait = callous
		trait = vengeful
		trait = sadistic
		trigger = {
			OR = {
				has_trait = callous
				has_trait = vengeful
				has_trait = sadistic
				has_relation_rival = scope:valid_target_consort
				has_relation_nemesis = scope:valid_target_consort
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
			}
		}
		
		consort_torture_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.25
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -30
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -10
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = temperate
					has_trait = calm
				}
				add = -50
			}
			modifier = { #Stress management
				OR = {
					has_trait = callous
					has_trait = vengeful
					has_trait = sadistic
				}
				add = 25
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -25
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						NOR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 25
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			modifier = { #More if good contacts
				OR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
		}
	}
	
	#Deprive them from sleep
	option = {
		name = consort_events.0004.b
		
		moderate_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = 0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -30
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -10
			}
			modifier = { #More if high target opinion
				AND = {
					opinion = {
						target = scope:valid_target_consort
						value > low_negative_opinion
					}
					opinion = {
						target = scope:valid_target_consort
						value <= 10
					}
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = calm
				}
				add = -25
			}
			modifier = { #Stress management
				OR = {
					has_trait = temperate
					has_trait = just
					has_trait = diligent
				}
				add = 25
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -25
			}
			
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						NOR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 20
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			modifier = { #More if good contacts
				OR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
		}
	}
	
	#Lecture them
	option = {
		name = consort_events.0001.c
		
		scolding_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = 10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 10
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 20
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value >= medium_positive_opinion
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = calm
				}
				add = 25
			}
			modifier = { #Stress management
				OR = {
					has_trait = callous
					has_trait = vengeful
					has_trait = sadistic
				}
				add = -50
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 15
			}
			
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 40
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 50
			}
			modifier = { #More if bad contacts
				NOR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
					AND = {	
						exists = scope:partner.primary_spouse
						this = scope:partner.primary_spouse
					}
				}
				add = 10
			}
		}
	}
	
	#Ignore them
	option = {
		name = consort_events.0001.d
		stress_impact = {
			diligent = miniscule_stress_impact_gain
			just = miniscule_stress_impact_gain
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			lazy = minor_stress_impact_loss
			cynical = minor_stress_impact_loss
		}
		hidden_effect = {
			scope:partner = {
				every_consort = {
					limit = {
						AND = {
							NOR = {
								this = root
								this = scope:valid_target_consort
								has_relation_best_friend = scope:valid_target_consort
								has_relation_friend = scope:valid_target_consort
								has_relation_lover = scope:valid_target_consort
								has_relation_soulmate = scope:valid_target_consort
							}
							is_courtier_of = scope:partner
							is_physically_able_adult = yes
							opinion = {
								target = scope:valid_target_consort
								value <= 50
							}
						}
					}
					add_opinion = {
						target = scope:valid_target_consort
						modifier = cocky_consort_opinion
					}
				}
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = 10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 10
			}
			modifier = { #More if high target opinion
				opinion = {
					target = scope:valid_target_consort
					value >= medium_positive_opinion
				}
				add = 10
			}
			modifier = { #Stress management
				OR = {
					has_trait = lazy
					has_trait = cynical
				}
				add = 25
			}
			modifier = { #Stress management
				OR = {
					has_trait = just
					has_trait = diligent
				}
				add = -25
			}
			modifier = { #Stress management
				OR = {
					has_trait = callous
					has_trait = vengeful
					has_trait = sadistic
				}
				add = -50
			}
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 15
			}
			
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 40
			}
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 20
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					NOR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 10
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 50
			}
			modifier = { #More if good contacts
				NOR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.primary_spouse
						OR = {
							has_relation_friend = scope:partner.primary_spouse
							has_relation_best_friend = scope:partner.primary_spouse
							has_relation_lover = scope:partner.primary_spouse
							has_relation_soulmate = scope:partner.primary_spouse
						}
					}
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
		}
	}
	after = {
		scope:partner = {
			add_character_flag = {
				flag = flag_had_arrogant_consort_event
				years = 3
			}
		}
		begging_punished_consort_effect = { BEGGAR = scope:valid_target_consort AUTHORITY = scope:partner }
	}
}

############################
##Yanwan is courting favor##
############################
consort_events.0006 = {
	type = character_event
	title = consort_events.0006.t
	desc = consort_events.0006.desc
	theme = family
	override_background = {
		reference = garden
	}
	
	right_portrait = { 	
		character = scope:yanwan
		animation = flirty
	}
	left_portrait = { 	
		character = root
		animation = anger
	}
	
	trigger = {
		any_consort = {
			valid_partner_yanwan_trigger = yes
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
		}
		is_physically_able_adult = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = { #Yanwan wants a child so badly
			add = 0.1
			any_consort = {
				any_consort = {
					has_character_flag = flag_yanwan
					any_child = {
						count = 0
					}
				}
			}
		}
		modifier = { #Yanwan wants favor
			add = 0.1
			any_consort = {
				any_consort = {
					has_character_flag = flag_yanwan
					has_character_modifier = unfavored_consort_modifier
				}
			}
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				valid_partner_yanwan_trigger = yes
			}
			save_scope_as = partner
		}
		scope:partner = {
			add_character_flag = {
				flag = has_consort_event_flag
				months = 5
			}
			random_consort = {
				limit = {
					yanwan_trigger = { PARTNER = scope:temporary_partner }
				}
				save_scope_as = yanwan
			}
		}
		
		scope:yanwan = {
			add_diplomacy_skill = 1
			save_scope_as = valid_target_consort
		}
		save_scope_as = secondary_actor
	}
	
	#Torture them
	option = {
		name = consort_events.0001.b
		
		stress_impact = {
			temperate = miniscule_stress_impact_gain
			sadistic = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			wrathful = minor_stress_impact_loss
		}
		
		high_punishment_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -30
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:yanwan
				min = -30
				max = 30
				multiplier = -1
			}
			modifier = { #Stress management
				has_trait = calm
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = 25
			}
			modifier = { #Stress management
				has_trait = callous
				add = 25
			}
			modifier = { #Stress management
				has_trait = wrathful
				add = 25
			}
			
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -15
			}
			
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						NOR = {
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 20
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			modifier = { #More if good contacts
				OR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
			modifier = { #Spouses
				scope:valid_target_consort = {
					is_spouse_of = scope:partner
				}
				add = -10
			}
			modifier = { #GC
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -10
			}
		}
	}
	
	#Deprive them from sleep
	option = {
		name = consort_events.0004.b
		
		moderate_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = 0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -30
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}
			opinion_modifier = { #Opinion
				opinion_target = scope:yanwan
				min = -20
				max = 40
				multiplier = -1
			}
			modifier = { #Stress management
				has_trait = calm
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = -10
			}
			modifier = { #Stress management
				has_trait = callous
				add = -10
			}
			modifier = { #Stress management
				has_trait = wrathful
				add = -10
			}
			modifier = { #Traits
				has_trait = temperate
				add = 10
			}
			modifier = { #Traits
				has_trait = diligent
				add = 20
			}
			modifier = { #Traits
				has_trait = just
				add = 10
			}
			
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -10
			}
			
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						NOR = {
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}
			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = 20
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 5
			}
			modifier = { #More if good contacts
				OR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = 5
			}
		}
	}
	
	#Lecture them
	option = {
		name = consort_events.0001.c
		
		scolding_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.25
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = 10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 10
			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:yanwan
				min = -30
				max = 30
				multiplier = 1
			}
			
			modifier = { #Stress management
				has_trait = calm
				add = 25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = 15
			}
			modifier = { #Stress management
				has_trait = compassionate
				add = 15
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = wrathful
				add = -25
			}
			modifier = { #Traits
				has_trait = temperate
				add = 20
			}
			modifier = { #Traits
				has_trait = diligent
				add = 10
			}
			modifier = { #Traits
				has_trait = just
				add = 10
			}
			
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 10
			}
			
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}
			modifier = { #Less if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = -10
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 10
			}
			modifier = { #Less if good contacts
				OR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = -15
			}
			modifier = { #Spouses
				scope:valid_target_consort = {
					is_spouse_of = scope:partner
				}
				add = 5
			}
			modifier = { #GC
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 5
			}
		}
	}
	
	#Ignore them
	option = {
		name = consort_events.0001.d
		stress_impact = {
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
			diligent = minor_stress_impact_gain
		}
		hidden_effect = {
			scope:partner = {
				trigger_event = {
					id = harem_politics.0018
					days = 3
				}
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.35
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = 20
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 20
			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:yanwan
				min = -40
				max = 40
				multiplier = 1
			}
			
			modifier = { #Stress management
				has_trait = calm
				add = 15
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = 25
			}
			modifier = { #Stress management
				has_trait = compassionate
				add = 25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = wrathful
				add = -25
			}
			modifier = { #Traits
				has_trait = temperate
				add = 15
			}
			modifier = { #Traits
				has_trait = diligent
				add = -25
			}
			modifier = { #Traits
				has_trait = just
				add = -20
			}
			
			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 10
			}
			
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 15
			}
			modifier = { #Less if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						is_liege_or_above_of = scope:partner
						this = scope:partner
					}
				}
				add = -20
			}
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
						
						has_character_modifier = favored_consort_modifier
					}
				}
				add = 15
			}
			modifier = { #Less if good contacts
				OR = {
					has_relation_friend = scope:partner
					has_relation_best_friend = scope:partner
					has_relation_lover = scope:partner
					has_relation_soulmate = scope:partner
					
					AND = {
						exists = scope:partner.mother
						OR = {
							has_relation_friend = scope:partner.mother
							has_relation_best_friend = scope:partner.mother
							has_relation_lover = scope:partner.mother
							has_relation_soulmate = scope:partner.mother
						}
					}
					
					AND = {
						exists = scope:partner.father
						OR = {
							has_relation_friend = scope:partner.father
							has_relation_best_friend = scope:partner.father
							has_relation_lover = scope:partner.father
							has_relation_soulmate = scope:partner.father
						}
					}
					
					has_character_modifier = favored_consort_modifier
				}
				add = -20
			}
			modifier = { #Spouses
				scope:valid_target_consort = {
					is_spouse_of = scope:partner
				}
				add = 5
			}
			modifier = { #GC
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 5
			}
		}
	}
	after = {
		scope:partner = {
			add_character_flag = {
				flag = flag_had_yanwan_singing_event
				years = 5
			}
		}
		scope:yanwan = {
			add_character_flag = flag_courted_favor
		}
		begging_punished_consort_effect = { BEGGAR = scope:valid_target_consort AUTHORITY = scope:partner }
	}
}

#################
##Hidden events##
#################
##An authority punishes a random consort##
consort_events.0007 = {
	#type = character_event
	#title = harem_politics.000.t
	#desc = harem_politics.0000.desc
	#theme = seduce_scheme
	#override_background = {
	#	reference = garden
	#}
	hidden = yes
	
	#right_portrait = { 	
	#	character = scope:harem_authority
	#	animation = idle
	#}
	#left_portrait = { 	
	#	character = scope:valid_target_consort
	#	animation = idle
	#}
	
	trigger = {
		any_courtier = {
			is_valid_harem_authority_trigger = yes
			save_temporary_scope_as = temporary_harem_authority
		}
		any_consort = {
			is_valid_harem_victim_trigger = { CONSORT_AUTHORITY = scope:temporary_harem_authority }
		}
		any_consort = {
			is_physically_able_ai_adult = yes
			is_courtier_of = root
			count >= 3
		}
		is_physically_able_adult = yes
		is_landed = yes
		NOT = {
			has_character_flag = has_consort_event_flag
		}
	}
	
	#weight_multiplier = {
	#	base = 1
	#	modifier = {
	#		add = 0.1
	#		any_consort = {
	#			any_consort = {
	#				count >= 5
	#			}
	#		}
	#	}
	#}
	
	immediate = {
		add_character_flag = {
			flag = has_consort_event_flag
			months = 5
		}
		save_scope_as = partner
		every_courtier = {
			limit = {
				is_valid_harem_authority_trigger = yes
			}
			add_to_list = harem_authority_list
		}
		
		random_in_list = {
			list = harem_authority_list
			weight = {
				base = 10
				modifier = {
					has_trait = just
					add = -10
				}
				modifier = {
					has_trait = calm
					add = -10
				}
				modifier = {
					has_trait = lazy
					add = -10
				}
				modifier = {
					has_trait = arrogant
					add = 5
				}
				modifier = {
					has_trait = ambitious
					add = 5
				}
				modifier = {
					has_trait = brave
					add = 5
				}
				modifier = {
					has_trait = vengeful
					add = 5
				}
				modifier = {
					has_trait = sadistic
					add = 5
				}
				modifier = {
					has_trait = callous
					add = 5
				}
				modifier = {
					has_trait = wrathful
					add = 5
				}
				modifier = {
					has_trait = arbitrary
					add = 5
				}
				modifier = {
					harem_politics_evil_consort_trigger = yes
					add = 10
				}
				modifier = {
					NOT = {
						sex_same_as = root
					}
					add = 15
				}
				modifier = {
					exists = root.primary_spouse
					this = root.primary_spouse
					add = 5
				}
				modifier = {
					is_consort_of = root
					add = 5
				}
				modifier = { #Scheming consorts
					add = 10
					has_character_modifier = scheming_consort_modifier
				}
			}
			save_scope_as = harem_authority
			save_scope_as = secondary_actor
		}
		random_consort = {
			limit = {
				is_valid_harem_victim_trigger = { CONSORT_AUTHORITY = scope:harem_authority }
			}
			weight = {
				base = 60
				opinion_modifier = { #Opinion
					WHO = scope:harem_authority
					opinion_target = prev
					min = -40
					max = 40
					multiplier = -0.40
				}
				modifier = { #Scheming consorts
					add = 10
					has_character_modifier = scheming_consort_modifier
				}
				modifier = { #Potential rivals
					add = 5
					has_relation_potential_rival = scope:harem_authority
				}
				modifier = { #Rivals
					add = 10
					has_relation_rival = scope:harem_authority
				}
				modifier = { #Rivals
					add = 15
					has_relation_nemesis = scope:harem_authority
				}
				modifier = { #Scolded consorts are less likely to misbehave
					add = -10
					has_character_flag = flag_scolded_consort
				}
				modifier = { #The GC is harder to punish
					add = 10
					NOT = {
						has_court_position = grand_consort_court_position
					}
				}
				modifier = { #To make player decide between their PS/parent and favored consorts
					add = 10
					has_character_modifier = favored_consort_modifier
				}
				modifier = { #Evil consorts misbehave more
					add = 10
					harem_politics_evil_consort_trigger = yes
				}
				modifier = { #Concubines are more powerless
					add = 10
					is_concubine = yes
				}
				modifier = { #Lowborn consorts are more powerless
					add = 10
					is_lowborn = yes
				}
				modifier = { #Strong consorts are more likely to misbehave
					add = 10
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_close_family_of = root
							is_liege_or_above_of = root
							AND = {
								is_knight_of = root
								is_acclaimed = yes
							}
						}
					}
				}
			}
			save_scope_as = valid_target_consort
		}
		
		random_list = {
			50 = { #The victim is punished severely
				opinion_modifier = { #Opinion
					WHO = scope:harem_authority
					opinion_target = scope:valid_target_consort
					min = -30
					max = 30
					multiplier = -0.50
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = sadistic
					}
					add = 5
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = callous
					}
					add = 5
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = vengeful
					}
					add = 5
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = just
					}
					add = -10
				}
				modifier = { #New consorts
					scope:valid_target_consort = { 
						has_character_flag = flag_new_consort
					}
					add = 5
				}
				modifier = { #Loved consorts
					scope:valid_target_consort = { 
						OR = {
							has_character_modifier = favored_consort_modifier
							has_relation_lover = root
							has_relation_soulmate = root
							has_relation_friend = root
							has_relation_best_friend = root
						}
					}
					add = -15
				}
				modifier = { #Unfavored consorts
					scope:valid_target_consort = { 
						OR = {
							has_character_modifier = unfavored_consort_modifier
							has_relation_rival = root
							has_relation_potential_rival = root
						}
					}
					add = 15
				}
				
				modifier = { #Concubines
					scope:valid_target_consort = { 
						is_concubine = yes
					}
					add = 10
				}
				modifier = { #GC
					scope:valid_target_consort = { 
						has_court_position = grand_consort_court_position
					}
					add = -15
				}
				modifier = { #Spouses
					scope:valid_target_consort = { 
						is_spouse_of = root
					}
					add = -10
				}
				modifier = { #Fertile consorts
					scope:valid_target_consort = { 
						any_child = {
							is_child_of = root
							count >= 1
						}
					}
					add = -15
				}
				modifier = { #Powerful consorts
					scope:valid_target_consort = { 
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								is_close_family_of = root
								is_liege_or_above_of = root
								AND = {
									is_knight_of = root
									is_acclaimed = yes
								}
							}
						}
					}
					add = -20
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = compassionate
					}
					add = -25
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = forgiving
					}
					add = -25
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = calm
					}
					add = -25
				}
				modifier = { #Scolded consorts
					scope:harem_authority = { 
						has_character_flag = flag_scolded_consort
					}
					add = -15
				}
				modifier = { #Traits
					scope:harem_authority = { 
						harem_politics_evil_consort_trigger = yes
					}
					add = 15
				}
				modifier = { #Traits
					scope:harem_authority = { 
						NOR = {	
							has_trait = sadistic
							has_trait = callous
							has_trait = vengeful
						}
					}
					factor = 0
				}
				
				scope:harem_authority = {
					consort_torture_effect = yes
				}
			}
			50 = { #Very high punishment
				opinion_modifier = { #Opinion
					WHO = scope:harem_authority
					opinion_target = scope:valid_target_consort
					min = -30
					max = 30
					multiplier = -0.50
				}
				modifier = { #Loved consorts
					scope:valid_target_consort = { 
						OR = {
							has_character_modifier = favored_consort_modifier
							has_relation_lover = root
							has_relation_soulmate = root
							has_relation_friend = root
							has_relation_best_friend = root
						}
					}
					add = -15
				}
				modifier = { #Unfavored consorts
					scope:valid_target_consort = { 
						OR = {
							has_character_modifier = unfavored_consort_modifier
							has_relation_rival = root
							has_relation_potential_rival = root
						}
					}
					add = 15
				}
				
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = sadistic
					}
					add = 5
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = callous
					}
					add = 5
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = vengeful
					}
					add = 5
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = just
					}
					add = -10
				}
				modifier = { #New consorts
					scope:valid_target_consort = { 
						has_character_flag = flag_new_consort
					}
					add = 5
				}
				modifier = { #Concubines
					scope:valid_target_consort = { 
						is_concubine = yes
					}
					add = 10
				}
				modifier = { #GC
					scope:valid_target_consort = { 
						has_court_position = grand_consort_court_position
					}
					add = -15
				}
				modifier = { #Spouses
					scope:valid_target_consort = { 
						is_spouse_of = root
					}
					add = -10
				}
				modifier = { #Fertile consorts
					scope:valid_target_consort = { 
						any_child = {
							is_child_of = root
							count >= 1
						}
					}
					add = -15
				}
				modifier = { #Powerful consorts
					scope:valid_target_consort = { 
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								is_close_family_of = root
								is_liege_or_above_of = root
								AND = {
									is_knight_of = root
									is_acclaimed = yes
								}
							}
						}
					}
					add = -15
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = compassionate
					}
					add = -25
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = forgiving
					}
					add = -25
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = calm
					}
					add = -15
				}
				modifier = { #Scolded consorts
					scope:harem_authority = { 
						has_character_flag = flag_scolded_consort
					}
					add = -10
				}
				modifier = { #Traits
					scope:harem_authority = { 
						harem_politics_evil_consort_trigger = yes
					}
					add = 10
				}
				modifier = { #Traits
					scope:harem_authority = { 
						NOR = {	
							has_trait = sadistic
							has_trait = callous
							has_trait = vengeful
						}
					}
					factor = 0
				}
				scope:harem_authority = {
					sleep_deprieved_starved_effect = yes
				}
			}
			50 = { #High punishment
				opinion_modifier = { #Opinion
					WHO = scope:harem_authority
					opinion_target = scope:valid_target_consort
					min = -25
					max = 25
					multiplier = -0.25
				}
				modifier = { #Loved consorts
					scope:valid_target_consort = { 
						OR = {
							has_character_modifier = favored_consort_modifier
							has_relation_lover = root
							has_relation_soulmate = root
							has_relation_friend = root
							has_relation_best_friend = root
						}
					}
					add = -15
				}
				modifier = { #Unfavored consorts
					scope:valid_target_consort = { 
						OR = {
							has_character_modifier = unfavored_consort_modifier
							has_relation_rival = root
							has_relation_potential_rival = root
						}
					}
					add = 15
				}
				modifier = { #Concubines
					scope:valid_target_consort = { 
						is_concubine = yes
					}
					add = 10
				}
				modifier = { #GC
					scope:valid_target_consort = { 
						has_court_position = grand_consort_court_position
					}
					add = -10
				}
				modifier = { #Spouses
					scope:valid_target_consort = { 
						is_spouse_of = root
					}
					add = -5
				}
				modifier = { #Fertile consorts
					scope:valid_target_consort = { 
						any_child = {
							is_child_of = root
							count >= 1
						}
					}
					add = -10
				}
				modifier = { #Powerful consorts
					scope:valid_target_consort = { 
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								is_close_family_of = root
								is_liege_or_above_of = root
								AND = {
									is_knight_of = root
									is_acclaimed = yes
								}
							}
						}
					}
					add = -15
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = compassionate
					}
					add = -20
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = forgiving
					}
					add = -20
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = calm
					}
					add = -15
				}
				modifier = { #Traits
					scope:harem_authority = { 
						harem_politics_evil_consort_trigger = yes
					}
					add = 10
				}
				modifier = { #Scolded consorts
					scope:harem_authority = { 
						has_character_flag = flag_scolded_consort
					}
					add = -15
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = just
					}
					add = -5
				}
				modifier = { #New consorts
					scope:valid_target_consort = { 
						has_character_flag = flag_new_consort
					}
					add = 5
				}
				scope:harem_authority = {
					high_punishment_effect = yes
				}
			}
			50 = { #Moderate punishment
				opinion_modifier = { #Opinion
					WHO = scope:harem_authority
					opinion_target = scope:valid_target_consort
					min = -20
					max = 20
					multiplier = -0.20
				}
				modifier = { #Loved consorts
					scope:valid_target_consort = { 
						OR = {
							has_character_modifier = favored_consort_modifier
							has_relation_lover = root
							has_relation_soulmate = root
							has_relation_friend = root
							has_relation_best_friend = root
						}
					}
					add = -10
				}
				modifier = { #Unfavored consorts
					scope:valid_target_consort = { 
						OR = {
							has_character_modifier = unfavored_consort_modifier
							has_relation_rival = root
							has_relation_potential_rival = root
						}
					}
					add = 10
				}
				modifier = { #GC
					scope:valid_target_consort = { 
						has_court_position = grand_consort_court_position
					}
					add = -5
				}
				modifier = { #Spouses
					scope:valid_target_consort = { 
						is_spouse_of = root
					}
					add = -5
				}
				modifier = { #Fertile consorts
					scope:valid_target_consort = { 
						any_child = {
							is_child_of = root
							count >= 1
						}
					}
					add = -5
				}
				modifier = { #Powerful consorts
					scope:valid_target_consort = { 
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								is_close_family_of = root
								is_liege_or_above_of = root
								AND = {
									is_knight_of = root
									is_acclaimed = yes
								}
							}
						}
					}
					add = -10
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = compassionate
					}
					add = -15
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = forgiving
					}
					add = -15
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = calm
					}
					add = -15
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = temperate
					}
					add = 10
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = diligent
					}
					add = 10
				}
				modifier = { #Traits
					scope:harem_authority = { 
						harem_politics_evil_consort_trigger = yes
					}
					add = 5
				}
				modifier = { #Scolded consorts
					scope:harem_authority = { 
						has_character_flag = flag_scolded_consort
					}
					add = -5
				}
				modifier = { #New consorts
					scope:valid_target_consort = { 
						has_character_flag = flag_new_consort
					}
					add = 5
				}
				scope:harem_authority = {
					moderate_punishment = yes
				}
			}
			50 = { #Scolding
				opinion_modifier = { #Opinion
					WHO = scope:harem_authority
					opinion_target = scope:valid_target_consort
					min = -20
					max = 20
					multiplier = 0.20
				}
				modifier = { #Loved consorts
					scope:valid_target_consort = { 
						OR = {
							has_character_modifier = favored_consort_modifier
							has_relation_lover = root
							has_relation_soulmate = root
							has_relation_friend = root
							has_relation_best_friend = root
						}
					}
					add = 10
				}
				modifier = { #Unfavored consorts
					scope:valid_target_consort = { 
						OR = {
							has_character_modifier = unfavored_consort_modifier
							has_relation_rival = root
							has_relation_potential_rival = root
						}
					}
					add = -5
				}
				modifier = { #GC
					scope:valid_target_consort = { 
						has_court_position = grand_consort_court_position
					}
					add = 10
				}
				modifier = { #Spouses
					scope:valid_target_consort = { 
						is_spouse_of = root
					}
					add = 5
				}
				modifier = { #Fertile consorts
					scope:valid_target_consort = { 
						any_child = {
							is_child_of = root
							count >= 1
						}
					}
					add = 10
				}
				modifier = { #Powerful consorts
					scope:valid_target_consort = { 
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								is_close_family_of = root
								is_liege_or_above_of = root
								AND = {
									is_knight_of = root
									is_acclaimed = yes
								}
							}
						}
					}
					add = 10
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = compassionate
					}
					add = 10
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = forgiving
					}
					add = 10
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = calm
					}
					add = 10
				}
				modifier = { #Traits
					scope:harem_authority = { 
						has_trait = diligent
					}
					add = -10
				}
				modifier = { #Traits
					scope:harem_authority = { 
						OR = {	
							has_trait = sadistic
							has_trait = callous
							has_trait = vengeful
						}
					}
					add = -10
				}
				modifier = { #Traits
					scope:harem_authority = { 
						harem_politics_evil_consort_trigger = yes
					}
					add = -10
				}
				modifier = { #Scolded consorts
					scope:harem_authority = { 
						has_character_flag = flag_scolded_consort
					}
					add = 10
				}
				scope:harem_authority = {
					scolding_punishment = yes
				}
			}
		}
		random_list = {
			1 = { #0001
				modifier = {
					scope:harem_authority = { 
						age >= 27
						is_consort_of = root
					}
					scope:valid_target_consort = {
						has_character_modifier = favored_consort_modifier
						OR = {
							has_trait = arrogant
							has_trait = greedy
							has_trait = ambitious
							has_trait = brave
						}
						age <= 21
					}
					add = 49
				}
				add_character_flag = {
					flag = had_mei_event_flag
					years = 5
				}
			}
			25 = { #0002
				modifier = {
					highest_held_title_tier >= tier_kingdom
					add = 25
				}
				add_character_flag = {
					flag = had_hua_fei_event_flag
					years = 2
				}
			}
			50 = { #0004
				add_character_flag = {
					flag = ranting_consort_event
					years = 2
				}
			}
			1 = { #0005
				modifier = {
					exists = root.primary_spouse
					scope:harem_authority = root.primary_spouse
					scope:valid_target_consort = {
						has_character_modifier = favored_consort_modifier
						OR = {
							has_trait = arrogant
							has_trait = greedy
							has_trait = ambitious
							has_trait = brave
						}
					}

					add = 49
				}
				add_character_flag = {
					flag = flag_had_arrogant_consort_event
					years = 3
				}
			}
			120 = { #Nothing happens

			}
		}
		begging_punished_consort_effect = { BEGGAR = scope:valid_target_consort AUTHORITY = root }
	}
	
	#option = {
	#	name = consort_events.0001.d
	#	ai_chance = {
	#		base = 10
	#	}
	#}
}

##Two consorts become friends##
consort_events.0008 = {
	#type = character_event
	#title = harem_politics.000.t
	#desc = harem_politics.0000.desc
	#theme = seduce_scheme
	#override_background = {
	#	reference = garden
	#}
	hidden = yes
	
	#right_portrait = { 	
	#	character = scope:consort_friend
	#	animation = idle
	#}
	#left_portrait = { 	
	#	character = scope:valid_target_consort
	#	animation = idle
	#}
	
	trigger = {
		any_courtier = {
			is_valid_generic_consort_trigger = yes
			save_temporary_scope_as = temporary_consort_friend
		}
		any_consort = {
			OR = {
				can_set_relation_potential_friend_trigger = { CHARACTER = scope:temporary_consort_friend }
				can_set_relation_friend_trigger = { CHARACTER = scope:temporary_consort_friend }
				can_set_relation_best_friend_trigger = { CHARACTER = scope:temporary_consort_friend }
			}
			is_valid_generic_consort_trigger = yes
		}
		any_consort = {
			is_physically_able_ai_adult = yes
			is_courtier_of = root
			count >= 3
		}
		is_physically_able_adult = yes
		is_landed = yes
		NOT = {
			has_character_flag = had_consort_positive_relation_flag
		}
	}
	
	#weight_multiplier = {
	#	base = 1
	#	modifier = {
	#		add = 0.1
	#		any_consort = {
	#			any_consort = {
	#				count >= 5
	#			}
	#		}
	#	}
	#}
	
	immediate = {
		random_list = {
			50 = {			
				add_character_flag = {
					flag = had_consort_positive_relation_flag
					months = 6
				}
			}
			50 = {			
				add_character_flag = {
					flag = had_consort_positive_relation_flag
					months = 3
				}
			}
			50 = {			
				add_character_flag = {
					flag = had_consort_positive_relation_flag
					years = 1
				}
			}
			50 = {			
				add_character_flag = {
					flag = had_consort_positive_relation_flag
					months = 18
				}
			}
			50 = {			
			}
		}
		save_scope_as = partner
		random_courtier = {
			limit = {
				is_valid_generic_consort_trigger = yes
			}
			weight = {
				base = 20
				modifier = {
					add = 10
					any_relation = {
						type = potential_friend
						is_consort_of = root
					}
				}
				modifier = {
					OR = {
						AND = {	
							exists = root.primary_spouse
							this = root.primary_spouse
						}
						is_spouse_of = root
						has_court_position = grand_consort_court_position
						is_parent_of = root
						has_character_modifier = favored_consort_modifier
					}
					add = 20
				}
				modifier = {
					harem_politics_evil_consort_trigger = no
					add = 10
				}
			}
			save_scope_as = consort_friend
		}
		every_consort = {
			limit = {
				OR = {
					can_set_relation_potential_friend_trigger = { CHARACTER = scope:consort_friend }
					can_set_relation_friend_trigger = { CHARACTER = scope:consort_friend }
					can_set_relation_best_friend_trigger = { CHARACTER = scope:consort_friend }
				}
				is_valid_generic_consort_trigger = yes
			}
			add_to_list = consort_friend_list
		}
		
		random_in_list = {
			list = consort_friend_list
			weight = {
				base = 10
				opinion_modifier = { #Opinion
					opinion_target = scope:consort_friend
					min = 0
					max = 25
					multiplier = 0.25
				}
				modifier = {
					OR = {
						AND = {	
							exists = root.primary_spouse
							this = root.primary_spouse
						}
						is_spouse_of = root
						has_court_position = grand_consort_court_position
						is_parent_of = root
						has_character_modifier = favored_consort_modifier
					}
					add = 20
				}
				modifier = {
					has_character_modifier = unfavored_consort_modifier
					add = -10
				}
				modifier = {
					has_relation_potential_friend = scope:consort_friend
					add = 20
				}
				modifier = {
					harem_politics_evil_consort_trigger = no
					add = 10
				}
				compatibility_modifier = {
					compatibility_target = scope:consort_friend
					multiplier = 2
					min = 0
					max = 30
				}
			}
			save_scope_as = valid_target_consort
		}
		scope:consort_friend = {
			if = {
				limit = {
					can_set_relation_potential_friend_trigger = { CHARACTER = scope:valid_target_consort }
				}
				set_relation_potential_friend = scope:valid_target_consort
				add_opinion = {
					target = scope:valid_target_consort
					modifier = friendliness_opinion
					opinion = 15
				}
				scope:valid_target_consort = {
					add_opinion = {
						target = scope:consort_friend
						modifier = friendliness_opinion
						opinion = 15
					}
				}
				if = {
					limit = {
						debug_only = yes
					}
					root = {
						send_interface_toast = {
							type = event_generic_neutral
							title = new_relation_t
							right_icon = scope:consort_friend
							left_icon = scope:valid_target_consort
							custom_tooltip = new_relation_potential_friend_desc
						}
					}
				}
			}
			else_if = {
				limit = {
					has_relation_potential_friend = scope:valid_target_consort
				}
				set_relation_friend = { 
					target = scope:valid_target_consort
					reason = consort_friendship_reason
				}
				if = {
					limit = {
						debug_only = yes
					}
					root = {
						send_interface_toast = {
							type = event_generic_neutral
							title = new_relation_t
							right_icon = scope:consort_friend
							left_icon = scope:valid_target_consort
							custom_tooltip = new_relation_friend_desc
						}
					}
				}
			}
			else_if = {
				limit = {
					has_relation_friend = scope:valid_target_consort
					can_set_relation_best_friend_trigger = { CHARACTER = scope:valid_target_consort }
				}
				set_relation_best_friend = { 
					target = scope:valid_target_consort
					reason = consort_friendship_reason 
				}
				if = {
					limit = {
						debug_only = yes
					}
					root = {
						send_interface_toast = {
							type = event_generic_neutral
							title = new_relation_t
							right_icon = scope:consort_friend
							left_icon = scope:valid_target_consort
							custom_tooltip = new_relation_bff_desc
						}
					}
				}
			}
		}
	}
	
}

##Two consorts become enemies##
consort_events.0009 = {
	#type = character_event
	#title = harem_politics.000.t
	#desc = harem_politics.0000.desc
	#theme = seduce_scheme
	#override_background = {
	#	reference = garden
	#}
	hidden = yes
	
	#right_portrait = { 	
	#	character = scope:consort_rival
	#	animation = idle
	#}
	#left_portrait = { 	
	#	character = scope:valid_target_consort
	#	animation = idle
	#}
	
	trigger = {
		any_courtier = {
			is_valid_generic_consort_trigger = yes
			save_temporary_scope_as = temporary_consort_rival
		}
		any_consort = {
			OR = {
				can_set_relation_potential_rival_trigger = { CHARACTER = scope:temporary_consort_rival }
				can_set_relation_rival_trigger = { CHARACTER = scope:temporary_consort_rival }
				can_set_relation_nemesis_trigger = { CHARACTER = scope:temporary_consort_rival }
			}
			is_valid_generic_consort_trigger = yes
		}
		any_consort = {
			is_physically_able_ai_adult = yes
			is_courtier_of = root
			count >= 3
		}
		is_physically_able_adult = yes
		is_landed = yes
		NOT = {
			has_character_flag = had_consort_negative_relation_flag
		}
	}
	
	#weight_multiplier = {
	#	base = 1
	#	modifier = {
	#		add = 0.1
	#		any_consort = {
	#			any_consort = {
	#				count >= 5
	#			}
	#		}
	#	}
	#}
	
	immediate = {
		random_list = {
			50 = {			
				add_character_flag = {
					flag = had_consort_negative_relation_flag
					months = 6
				}
			}
			50 = {			
				add_character_flag = {
					flag = had_consort_negative_relation_flag
					months = 3
				}
			}
			50 = {			
				add_character_flag = {
					flag = had_consort_negative_relation_flag
					years = 1
				}
			}
			50 = {			
				add_character_flag = {
					flag = had_consort_negative_relation_flag
					months = 18
				}
			}
			50 = {			
			}
		}
		save_scope_as = partner
		random_courtier = {
			limit = {
				is_valid_generic_consort_trigger = yes
			}
			weight = {
				base = 20
				modifier = {
					add = 20
					any_relation = {
						type = potential_rival
						is_consort_of = root
					}
				}
				modifier = {
					OR = {
						AND = {	
							exists = root.primary_spouse
							this = root.primary_spouse
						}
						is_spouse_of = root
						has_court_position = grand_consort_court_position
						is_parent_of = root
						has_character_modifier = favored_consort_modifier
					}
					add = 10
				}
				modifier = {
					harem_politics_evil_consort_trigger = yes
					add = 10
				}
			}
			save_scope_as = consort_rival
		}
		every_consort = {
			limit = {
				OR = {
					can_set_relation_potential_rival_trigger = { CHARACTER = scope:consort_rival }
					can_set_relation_rival_trigger = { CHARACTER = scope:consort_rival }
					can_set_relation_nemesis_trigger = { CHARACTER = scope:consort_rival }
				}
				is_valid_generic_consort_trigger = yes
			}
			add_to_list = consort_rival_list
		}
		
		random_in_list = {
			list = consort_rival_list
			weight = {
				base = 10
				opinion_modifier = { #Opinion
					opinion_target = scope:consort_rival
					min = -5
					max = 30
					multiplier = -0.30
				}
				modifier = {
					OR = {
						AND = {	
							exists = root.primary_spouse
							this = root.primary_spouse
						}
						is_spouse_of = root
						has_court_position = grand_consort_court_position
						has_character_modifier = favored_consort_modifier
					}
					add = 10
				}
				modifier = {
					has_relation_potential_rival = scope:consort_rival
					add = 20
				}
				modifier = {
					harem_politics_evil_consort_trigger = yes
					add = 10
				}
				modifier = {
					has_trait = gregarious
					add = -10
				}
				modifier = {
					has_trait = forgiving
					add = -10
				}
				modifier = {
					has_trait = compassionate
					add = -10
				}
				modifier = {
					has_trait = vengeful
					add = 10
				}
				compatibility_modifier = {
					compatibility_target = scope:consort_rival
					multiplier = -2
					min = 0
					max = 30
				}
			}
			save_scope_as = valid_target_consort
		}
		scope:consort_rival = {
			if = {
				limit = {
					can_set_relation_potential_rival_trigger = { CHARACTER = scope:valid_target_consort }
				}
				set_relation_potential_rival = scope:valid_target_consort
				add_opinion = {
					target = scope:valid_target_consort
					modifier = unfriendly_opinion
					opinion = -15
				}
				scope:valid_target_consort = {
					add_opinion = {
						target = scope:consort_rival
						modifier = unfriendly_opinion
						opinion = -15
					}
				}
				if = {
					limit = {
						debug_only = yes
					}
					root = {
						send_interface_toast = {
							type = event_generic_neutral
							title = new_relation_t
							right_icon = scope:consort_rival
							left_icon = scope:valid_target_consort
							custom_tooltip = new_relation_potential_rival_desc
						}
					}
				}
			}
			else_if = {
				limit = {
					has_relation_potential_rival = scope:valid_target_consort
				}
				set_relation_rival = { 
					target = scope:valid_target_consort
					reason = consort_rival_reason
				}
				if = {
					limit = {
						debug_only = yes
					}
					root = {
						send_interface_toast = {
							type = event_generic_neutral
							title = new_relation_t
							right_icon = scope:consort_rival
							left_icon = scope:valid_target_consort
							custom_tooltip = new_relation_rival_desc
						}
					}
				}
			}
			else_if = {
				limit = {
					has_relation_rival = scope:valid_target_consort
					can_set_relation_nemesis_trigger = { CHARACTER = scope:valid_target_consort }
				}
				set_relation_nemesis = { 
					target = scope:valid_target_consort
					reason = consort_rival_reason 
				}
				if = {
					limit = {
						debug_only = yes
					}
					root = {
						send_interface_toast = {
							type = event_generic_neutral
							title = new_relation_t
							right_icon = scope:consort_rival
							left_icon = scope:valid_target_consort
							custom_tooltip = new_relation_nemesis_desc
						}
					}
				}
			}
		}
	}
	
}

#Add modifiers for married consorts (SS) and add to this events
#The possibility of having the GC punish another consort

########################
##Choose your approach##
########################
consort_events.0011 = {
	type = character_event
	title = consort_events.0011.t
	desc = consort_events.0011.desc
	theme = corruption
	
	right_portrait = { 	
		character = root
		animation = personality_rational
	}
	
	trigger = {
		any_consort = {
			any_consort = {
				count >= 3
			}
			is_physically_able_adult = yes
			save_temporary_scope_as = temporary_partner
		}
		OR = {
			AND = {
				is_landed = yes
				any_liege_or_above = { 
					this = scope:temporary_partner
				}
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
			has_character_flag = chosen_approach_flag
		}
		is_physically_able_adult = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.15
			is_concubine = yes
		}
		modifier = {
			add = 0.15
			has_character_modifier = unfavored_consort_modifier
		}
		modifier = {
			add = 0.15
			any_child = {
				count = 0
			}
		}
		modifier = {
			add = 0.15
			is_demoted_grand_consort_trigger = yes
		}
		modifier = {
			add = 0.15
			any_consort = {
				any_consort = {
					count >= 5
				}
			}
		}
		modifier = {
			add = -0.25
			any_consort = {
				any_consort = {
					OR = {
						has_character_modifier = scheming_consort_modifier
						has_character_modifier = diplomatic_consort_modifier
					}
				}
			}
		}
		modifier = {
			add = 0.10
			has_character_flag = flag_yanwan
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				any_consort = {
					count >= 3
				}
			}
			save_scope_as = partner
		}
	}
	
	#Scheming consort
	option = {
		name = consort_events.0011.a
		
		add_character_modifier = {
			modifier = scheming_consort_modifier
			years = 5
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_greed = 0.25
				ai_vengefulness = 0.25
				ai_compassion = -0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Consort Ling
				has_character_flag = flag_yanwan
				add = 10
			}
			modifier = { #The PS has to guard their position
				this = scope:partner.primary_spouse
				add = 10
			}
			modifier = { #The GC has to guard their position
				has_court_position = grand_consort_court_position
				add = 5
			}
			modifier = { #A spouse has to guard their position
				is_married = yes
				add = 5
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}
			modifier = { #Intrigue
				add = 10
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 25
				OR = {
					has_focus = intrigue_intimidation_focus
					has_focus = intrigue_skulduggery_focus
					has_focus = intrigue_temptation_focus
				}
			}
			modifier = { #Traits
				add = 15
				OR = {
					has_trait = deceitful
					has_trait = sadistic
					has_trait = callous
					has_trait = ambitious
					has_trait = vengeful
					has_trait = lustful
				}
			}
			modifier = { #Traits
				add = 15
				OR = {
					has_trait = schemer
					has_trait = torturer
					has_trait = seducer
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_intrigue_3
					has_trait = education_intrigue_4
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_intrigue_1
					has_trait = education_intrigue_2
				}
			}
		}
	}
	
	#Diplomatic consort
	option = {
		name = consort_events.0011.b
		
		add_character_modifier = {
			modifier = diplomatic_consort_modifier
			years = 5
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = -0.25
				ai_greed = -0.25
				ai_vengefulness = -0.25
				ai_compassion = 0.25
				ai_honor = 0.25
				ai_energy = -0.15
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 30
			}
			modifier = { #Diplomacy
				add = 10
				diplomacy >= medium_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= decent_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= high_skill_rating
			}
			modifier = { #Diplomacy
				add = 25
				OR = {
					has_focus = diplomacy_majesty_focus
					has_focus = diplomacy_family_focus
					has_focus = diplomacy_foreign_affairs_focus
				}
			}
			modifier = { #Traits
				add = 15
				OR = {
					has_trait = forgiving
					has_trait = generous
					has_trait = gregarious
					has_trait = honest
					has_trait = patient
					has_trait = trusting
					has_trait = compassionate
					has_trait = chaste
					has_trait = craven
				}
			}
			modifier = { #Traits
				add = 15
				OR = {
					has_trait = diplomat
					has_trait = august
					has_trait = family_first
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_diplomacy_3
					has_trait = education_diplomacy_4
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_diplomacy_1
					has_trait = education_diplomacy_2
				}
			}
		}
	}
	
	#No focus
	option = {
		name = consort_events.0011.c
		flavor = consort_events.0011.c_tt
		ai_chance = {
			base = 25
			modifier = { #Traits
				add = 15
				OR = {
					has_trait = humble
					has_trait = just
					has_trait = temperate
				}
			}
			modifier = { #Traits
				add = 15
				OR = {
					has_trait = content
					has_trait = cynical
					has_trait = shy
				}
			}
		}
	}
	after = {
		add_character_flag = {
			flag = chosen_approach_flag
			years = 15
		}
	}
}

####################
##Choosing an ally##
####################
consort_events.0012 = {
	type = character_event
	title = consort_events.0012.t
	desc = consort_events.0012.desc
	theme = corruption
	
	left_portrait = { 	
		character = root
		animation = personality_rational
	}
	right_portrait = { 	
		character = scope:partner
		animation = flirtation
	}
	lower_left_portrait = {
		trigger = {
			exists = scope:first_target
			exists = scope:second_target
		}
		character = scope:first_target
	}
	lower_center_portrait = {
		trigger = {
			NOT = {
				exists = scope:second_target
			}
		}
		character = scope:first_target
	}
	lower_right_portrait = {
		trigger = {
			exists = scope:first_target
			exists = scope:second_target
		}
		character = scope:second_target
	}
	
	trigger = {
		any_consort = {
			is_physically_able_adult = yes
			save_temporary_scope_as = temporary_partner
			OR = {
				AND = {
					exists = primary_spouse
					primary_spouse = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						NOT = { 
							this = root
						}
					}
				}
				any_consort = {
					has_court_position = grand_consort_court_position
					is_courtier_of = scope:temporary_partner
					NOT = { 
						this = root
					}
					is_demoted_grand_consort_trigger = no
					save_temporary_scope_as = temporary_partner_grand_consort
				}
				any_consort = {
					has_court_position = noble_consort_court_position
					is_courtier_of = scope:temporary_partner
					NOT = { 
						this = root
					}
					is_demoted_noble_consort_trigger = no
					save_temporary_scope_as = temporary_partner_noble_consort
				}
				any_consort = {
					has_court_position = noble_lady_court_position
					is_courtier_of = scope:temporary_partner
					NOT = { 
						this = root
					}
					is_demoted_noble_lady_trigger = no
					save_temporary_scope_as = temporary_partner_noble_lady
				}
				any_consort = {
					has_court_position = noble_attendant_court_position
					is_courtier_of = scope:temporary_partner
					NOT = { 
						this = root
					}
					is_demoted_noble_attendant_trigger = no
					save_temporary_scope_as = temporary_partner_noble_lady
				}
				any_consort = {
					has_court_position = consort_court_position
					is_courtier_of = scope:temporary_partner
					NOT = { 
						this = root
					}
					is_demoted_consort_trigger = no
					save_temporary_scope_as = temporary_partner_noble_lady
				}
				any_consort = {
					has_court_position = lady_court_position
					is_courtier_of = scope:temporary_partner
					NOT = { 
						this = root
					}
					is_demoted_lady_trigger = no
					save_temporary_scope_as = temporary_partner_lady
				}
				any_consort = {
					has_court_position = attendant_court_position
					is_courtier_of = scope:temporary_partner
					NOT = { 
						this = root
					}
					is_demoted_attendant_trigger = no
					save_temporary_scope_as = temporary_partner_attendant
				}
				any_consort = {
					is_courtier_of = scope:temporary_partner
					OR = {
						has_character_modifier = favored_consort_modifier
						has_court_position = grand_consort_court_position
					}
					NOT = { 
						this = root
					}
					is_demoted_grand_consort_trigger = no
					save_temporary_scope_as = temporary_partner_favored_consort
				}
				any_parent = {
					is_physically_able_adult = yes
					is_courtier_of = scope:temporary_partner
					NOT = { 
						this = root
					}
				}
			}
			any_consort = {
				is_physically_able_adult = yes
				is_courtier_of = scope:temporary_partner
				count >= 3
			}
		}
		OR = {
			AND = {
				is_landed = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
			has_character_flag = chosen_ally_flag
			has_character_modifier = favored_consort_modifier
			
			has_relation_friend = scope:temporary_partner
			has_relation_best_friend = scope:temporary_partner
			has_relation_lover = scope:temporary_partner
			has_relation_soulmate = scope:temporary_partner
			
			AND = {
				exists = scope:temporary_partner.primary_spouse
				has_relation_friend = scope:temporary_partner.primary_spouse
				has_relation_best_friend = scope:temporary_partner.primary_spouse
				has_relation_lover = scope:temporary_partner.primary_spouse
				has_relation_soulmate = scope:temporary_partner.primary_spouse
			}
			
			AND = {
				exists = scope:temporary_partner.mother
				has_relation_friend = scope:temporary_partner.mother
				has_relation_best_friend = scope:temporary_partner.mother
				has_relation_lover = scope:temporary_partner.mother
				has_relation_soulmate = scope:temporary_partner.mother
			}
			
			AND = {
				exists = scope:temporary_partner.father
				has_relation_friend = scope:temporary_partner.father
				has_relation_best_friend = scope:temporary_partner.father
				has_relation_lover = scope:temporary_partner.father
				has_relation_soulmate = scope:temporary_partner.father
			}
			
			AND = {
				exists = scope:temporary_partner_grand_consort
				has_relation_friend = scope:temporary_partner_grand_consort
				has_relation_best_friend = scope:temporary_partner_grand_consort
				has_relation_lover = scope:temporary_partner_grand_consort
				has_relation_soulmate = scope:temporary_partner_grand_consort
			}
			
			AND = {
				exists = scope:temporary_partner_favored_consort
				has_relation_friend = scope:temporary_partner_favored_consort
				has_relation_best_friend = scope:temporary_partner_favored_consort
				has_relation_lover = scope:temporary_partner_favored_consort
				has_relation_soulmate = scope:temporary_partner_favored_consort
			}
		}
		can_start_scheme = {
			type = seduce
			target = scope:temporary_partner
		}
		any_scheme = {
			scheme_type = seduce
			count = 0
		}
		any_scheme = {
			scheme_type = courting
			count = 0
		}
		any_scheme = {
			scheme_type = befriend
			count = 0
		}
		any_scheme = {
			scheme_type = sway
			count = 0
		}
		is_physically_able_adult = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.15
			is_concubine = yes
		}
		modifier = {
			add = 0.15
			has_character_modifier = unfavored_consort_modifier
		}
		modifier = {
			add = 0.15
			any_child = {
				count = 0
			}
		}
		modifier = {
			add = 0.15
			is_demoted_grand_consort_trigger = yes
		}
		modifier = {
			add = 0.15
			any_consort = {
				any_consort = {
					count >= 5
				}
			}
		}
		modifier = {
			add = 0.10
			has_character_flag = flag_yanwan
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				AND = {
					OR = {
						AND = {
							exists = primary_spouse
							primary_spouse = {
								is_physically_able_adult = yes
								exists = court_owner
								court_owner = {
									any_consort = {
										this = root
									}
								}
								NOT = { 
									this = root
								}
							}
						}
						any_consort = {
							has_court_position = grand_consort_court_position
							exists = court_owner
							court_owner = {
								any_consort = {
									this = root
								}
							}
							NOT = { 
								this = root
							}
							is_demoted_grand_consort_trigger = no
						}
						any_consort = {
							exists = court_owner
							court_owner = {
								any_consort = {
									this = root
								}
							}
							has_character_modifier = favored_consort_modifier
							NOT = { 
								this = root
							}
							is_demoted_grand_consort_trigger = no
						}
						any_parent = {
							is_physically_able_adult = yes
							exists = court_owner
							court_owner = {
								any_consort = {
									this = root
								}
							}
							NOT = { 
								this = root
							}
						}
					}
					any_consort = {
						is_physically_able_adult = yes
						exists = court_owner
						court_owner = {
							any_consort = {
								this = root
							}
						}
						count >= 3
					}
				}
			}
			save_scope_as = partner
		}
		scope:partner = {
			if = {
				limit = {
					AND = {
						exists = primary_spouse
						primary_spouse = {
							is_physically_able_adult = yes
							is_courtier_of = scope:partner
							NOT = { 
								this = root
							}
						}
					}
				}
				primary_spouse = {
					save_scope_as = first_target
				}
			}
			else_if = {
				limit = {
					any_consort = {
						has_court_position = grand_consort_court_position
						is_courtier_of = scope:partner
						NOT = { 
							this = root
						}
						is_demoted_grand_consort_trigger = no
					}
				}
				random_consort = {
					limit = {
						has_court_position = grand_consort_court_position
					}
					save_scope_as = first_target
				}
			}
			else_if = {
				limit = {
					any_consort = {
						is_courtier_of = scope:partner
						has_character_modifier = favored_consort_modifier
						NOT = { 
							this = root
						}
						is_demoted_grand_consort_trigger = no
					}
				}
				random_consort = {
					limit = {
						is_courtier_of = scope:partner
						has_character_modifier = favored_consort_modifier
						NOT = { 
							this = root
						}
						is_demoted_grand_consort_trigger = no
					}
					save_scope_as = first_target
				}
			}
			else_if = {
				limit = {
					any_parent = {
						is_physically_able_adult = yes
						is_courtier_of = scope:partner
						NOT = { 
							this = root
						}
					}
				}
				random_parent = {
					limit = {
						is_physically_able_adult = yes
						is_courtier_of = scope:partner
						NOT = { 
							this = root
						}
					}
					save_scope_as = first_target
				}
			}
			if = {
				limit = {
					AND = {
						exists = scope:partner.primary_spouse
						scope:first_target = {
							this = scope:partner.primary_spouse
						}
						any_consort = {
							OR = {
								has_character_modifier = favored_consort_modifier
								has_court_position = grand_consort_court_position
							}
							is_courtier_of = scope:partner
							NOR = { 
								this = root
								this = scope:first_target
							}
							is_demoted_grand_consort_trigger = no
						}
					}
				}
				every_consort = {
					limit = {
						OR = {
							has_character_modifier = favored_consort_modifier
							has_court_position = grand_consort_court_position
						}
						is_courtier_of = scope:partner
						NOR = { 
							this = root
							this = scope:first_target
						}
						is_demoted_grand_consort_trigger = no
					}
					add_to_temporary_list = consort_list
				}
			}
			if = {
				limit = {
					any_parent = {
						is_physically_able_ai_adult = yes
						is_courtier_of = scope:partner
						NOR = { 
							is_in_list = consort_list 
							this = root
							this = scope:first_target
						}
					}
				}
				every_parent = {
					limit = {
						is_physically_able_ai_adult = yes
						is_courtier_of = scope:partner
						NOR = { 
							is_in_list = consort_list 
							this = root
							this = scope:first_target
						}
					}
					add_to_temporary_list = consort_list
				}
			}
			if = {
				limit = {
					any_in_list = {
						list = consort_list
						count >= 1
					}
				}
				random_in_list = {
					list = consort_list
					weight = {
						base = 10
						modifier = {
							any_child = {
								this = scope:partner
							}
							add = 50
						}
						modifier = {
							has_court_position = grand_consort_court_position
							add = 25
						}
						modifier = {
							has_character_modifier = favored_consort_modifier
							add = 20
						}
						modifier = {
							is_married = yes
							add = 20
						}
					}
					save_scope_as = second_target
				}
			}
		}
	}
	
	#Seduce partner
	option = {
		name = consort_events.0012.a
		trigger = { 
			NOR = {
				has_relation_rival = scope:partner
				has_relation_nemesis = scope:partner
			}
			can_start_scheme = {
				type = seduce
				target = scope:partner
			}
		}
		if = {
			limit = {
				NOT = {
					any_scheme = {
						scheme_type = seduce
						scheme_target = scope:partner
					}
				}
			}
			start_scheme = {
				type = seduce
				target = scope:partner
			}
		}
		stress_impact = {
			chaste = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}
			modifier = { #Traits
				add = 10
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 10
				has_trait = lustful
			}
			modifier = { #Traits
				add = 10
				has_trait = greedy
			}
			modifier = { #Traits
				add = -50
				has_trait = chaste
			}
			modifier = { #Traits
				add = -50
				has_trait = shy
			}
			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				add = 15
				has_character_flag = flag_yanwan
			}
			modifier = { #Opinion
				add = 10
				opinion = {
					target = scope:partner
					value >= 10
				}
			}
			modifier = { #Opinion
				add = 10
				opinion = {
					target = scope:partner
					value >= 30
				}
			}
			modifier = { #Intrigue
				add = 10
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 25
				OR = {
					has_focus = intrigue_intimidation_focus
					has_focus = intrigue_skulduggery_focus
					has_focus = intrigue_temptation_focus
				}
			}
			modifier = { #Traits
				add = 15
				has_trait = seducer
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_intrigue_3
					has_trait = education_intrigue_4
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_intrigue_1
					has_trait = education_intrigue_2
				}
			}
		}
	}
	
	#Sway first_target
	option = {
		name = {
			trigger = { 
				scope:first_target = { 
					exists = scope:partner.primary_spouse 
					this = scope:partner.primary_spouse 
				} 
			} 
			text = consort_events.0012.ps.b
		}
		name = {
			trigger = { scope:first_target = { has_court_position = grand_consort_court_position } } 
			text = consort_events.0012.gc.b
		}
		name = {
			trigger = { 
				scope:first_target = { 
					has_character_modifier = favored_consort_modifier
					NOT = {
						has_court_position = grand_consort_court_position
					} 
				} 
			} 
			text = consort_events.0012.favored.b
		}
		name = {
			trigger = { 
				scope:first_target = { 
					any_child = {
						this = scope:partner
					}
				} 
			} 
			text = consort_events.0012.parent.b
		}
		trigger = { 
			NOR = {
				has_relation_rival = scope:first_target
				has_relation_nemesis = scope:first_target
			}
			OR = {
				can_start_scheme = {
					type = befriend
					target = scope:first_target
				}
				can_start_scheme = {
					type = sway
					target = scope:first_target
				}
			}
		}
		if = {
			limit = {
				AND = {
					NOT = {
						any_scheme = {
							scheme_type = befriend
							scheme_target = scope:first_target
						}
					}
					can_start_scheme = {
						type = befriend
						target = scope:first_target
					}
				}
			}
			start_scheme = {
				type = befriend
				target = scope:first_target
			}
		}
		else_if = {
			limit = {
				AND = {
					NOT = {
						any_scheme = {
							scheme_type = sway
							scheme_target = scope:first_target
						}
					}
					can_start_scheme = {
						type = sway
						target = scope:first_target
					}
				}
			}
			start_scheme = {
				type = sway
				target = scope:first_target
			}
		}
		stress_impact = {
			shy = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_greed = -0.10
				ai_honor = 0.25
				ai_energy = 0.15
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 30
			}
			modifier = { #Traits
				add = 10
				has_trait = gregarious
			}
			modifier = { #Traits
				add = 10
				has_trait = chaste
			}
			modifier = { #Traits
				add = -50
				has_trait = shy
			}
			modifier = { #Diplomatic Consorts
				add = 15
				has_character_modifier = diplomatic_consort_modifier
			}
			modifier = { #Opinion
				add = 10
				opinion = {
					target = scope:first_target
					value >= 10
				}
			}
			modifier = { #Opinion
				add = 10
				opinion = {
					target = scope:first_target
					value >= 30
				}
			}
			
			modifier = { #Diplomacy
				add = 10
				diplomacy >= medium_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= decent_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= high_skill_rating
			}
			modifier = { #Diplomacy
				add = 25
				OR = {
					has_focus = diplomacy_majesty_focus
					has_focus = diplomacy_family_focus
					has_focus = diplomacy_foreign_affairs_focus
				}
			}
			modifier = { #Traits
				add = 15
				OR = {
					has_trait = diplomat
					has_trait = august
					has_trait = family_first
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_diplomacy_3
					has_trait = education_diplomacy_4
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_diplomacy_1
					has_trait = education_diplomacy_2
				}
			}
		}
	}
	
	#Sway second_target
	option = {
		name = {
			trigger = { scope:first_target = { has_court_position = grand_consort_court_position } } 
			text = consort_events.0012.gc.b
		}
		name = {
			trigger = { 
				scope:first_target = { 
					has_character_modifier = favored_consort_modifier
					NOT = {
						has_court_position = grand_consort_court_position
					} 
				} 
			} 
			text = consort_events.0012.favored.b
		}
		name = {
			trigger = { 
				scope:first_target = { 
					any_child = {
						this = scope:partner
					}
				} 
			} 
			text = consort_events.0012.parent.b
		}
		trigger = { 
			exists = scope:second_target
			NOR = {
				has_relation_rival = scope:second_target
				has_relation_nemesis = scope:second_target
			}
			OR = {
				can_start_scheme = {
					type = befriend
					target = scope:second_target
				}
				can_start_scheme = {
					type = sway
					target = scope:second_target
				}
			}
		}
		if = {
			limit = {
				AND = {
					NOT = {
						any_scheme = {
							scheme_type = befriend
							scheme_target = scope:second_target
						}
					}
					can_start_scheme = {
						type = befriend
						target = scope:second_target
					}
				}
			}
			start_scheme = {
				type = befriend
				target = scope:second_target
			}
		}
		else_if = {
			limit = {
				AND = {
					NOT = {
						any_scheme = {
							scheme_type = sway
							scheme_target = scope:second_target
						}
					}
					can_start_scheme = {
						type = sway
						target = scope:second_target
					}
				}
			}
			start_scheme = {
				type = sway
				target = scope:second_target
			}
		}
		stress_impact = {
			shy = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_greed = -0.10
				ai_honor = 0.25
				ai_energy = 0.15
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 30
			}
			modifier = { #Traits
				add = 10
				has_trait = gregarious
			}
			modifier = { #Traits
				add = 10
				has_trait = chaste
			}
			modifier = { #Traits
				add = -50
				has_trait = shy
			}
			modifier = { #Diplomatic Consorts
				add = 15
				has_character_modifier = diplomatic_consort_modifier
			}
			modifier = { #Opinion
				add = 10
				opinion = {
					target = scope:second_target
					value >= 10
				}
			}
			modifier = { #Opinion
				add = 10
				opinion = {
					target = scope:second_target
					value >= 30
				}
			}
			
			modifier = { #Diplomacy
				add = 10
				diplomacy >= medium_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= decent_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= high_skill_rating
			}
			modifier = { #Diplomacy
				add = 25
				OR = {
					has_focus = diplomacy_majesty_focus
					has_focus = diplomacy_family_focus
					has_focus = diplomacy_foreign_affairs_focus
				}
			}
			modifier = { #Traits
				add = 15
				OR = {
					has_trait = diplomat
					has_trait = august
					has_trait = family_first
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_diplomacy_3
					has_trait = education_diplomacy_4
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_diplomacy_1
					has_trait = education_diplomacy_2
				}
			}
		}
	}
	
	#No ally
	option = {
		name = consort_events.0011.c
		flavor = consort_events.0011.c_tt
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_greed = -0.10
				ai_honor = 0.25
				ai_energy = -0.15
			}
			modifier = { #Traits
				add = 15
				OR = {
					has_trait = humble
					has_trait = just
					has_trait = temperate
				}
			}
			modifier = { #Traits
				add = 15
				OR = {
					has_trait = content
					has_trait = cynical
					has_trait = shy
				}
			}
			modifier = { #Traits
				add = 15
				has_trait = craven
			}
			modifier = { #Intrigue
				add = 10
				intrigue < medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue <= mediocre_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue <= low_skill_rating
			}
			
			modifier = { #Diplomacy
				add = 10
				diplomacy < medium_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy <= mediocre_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy <= low_skill_rating
			}
		}
	}
	after = {
		add_character_flag = {
			flag = chosen_ally_flag
			years = 5
		}
	}
}

#########################
##Killing the main heir##
#########################
consort_events.0013 = {
	type = character_event
	title = consort_events.0013.t
	desc = consort_events.0013.desc
	theme = corruption
	
	left_portrait = { 	
		character = root
		animation = personality_dishonorable
	}
	right_portrait = { 	
		character = scope:eligible_child
		animation = personality_honorable
	}
	lower_center_portrait = {
		character = scope:partner.primary_heir
	}
	
	trigger = {
		any_consort = {
			is_physically_able_adult = yes
			save_temporary_scope_as = temporary_partner
		}
		scope:temporary_partner = {
			exists = primary_heir
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
			has_character_flag = considered_killing_main_heir
			scope:temporary_partner = {
				any_consort = {
					any_scheme = {
						scheme_type = murder
						scheme_target = scope:temporary_partner.primary_heir
					}
				}
			}
		}
		
		OR = {
			AND = {
				is_landed = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
				}
			}
		}
		is_physically_able_adult = yes
		any_child = { 
			NOT = { 
				this = { is_primary_heir_of = scope:temporary_partner }
			}
		}
		any_child = {
			count > 0
			eligible_heir_trigger = { PARTNER = scope:temporary_partner }
		}
		can_start_scheme = {
			type = murder
			target = scope:temporary_partner.primary_heir
		}
		any_scheme = {
			scheme_type = murder
			count = 0
		}
		harem_politics_evil_consort_trigger = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 1
			has_character_flag = flag_yanwan
		}
		modifier = {
			add = 0.1
			has_character_modifier = scheming_consort_modifier
		}
		modifier = {
			add = 0.5
			has_trait = ambitious
		}
		modifier = {
			add = 0.1
			has_trait = greedy
		}
		modifier = {
			add = 0.1
			has_trait = arrogant
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				AND = {
					is_landed = yes
					OR = {
						any_vassal_or_below = {
							this = root
						}
						any_courtier = {
							this = root
						}
					}
					exists = primary_heir
				}
			}
			save_scope_as = partner
		}
		every_child = {
			limit = {
				eligible_heir_trigger = { PARTNER = scope:partner }
			}
			add_to_temporary_list = eligible_heirs_list
		}
		random_in_list = {
			list = eligible_heirs_list
			weight = {
				base = 10
				modifier = {
					age >= 16
					add = 50
				}
				modifier = {
					has_trait = intellect_good_1
					add = 10
				}
				modifier = {
					has_trait = intellect_good_2
					add = 15
				}
				modifier = {
					has_trait = intellect_good_3
					add = 20
				}
				
				modifier = {
					has_trait = physique_good_1
					add = 10
				}
				modifier = {
					has_trait = physique_good_2
					add = 15
				}
				modifier = {
					has_trait = physique_good_3
					add = 15
				}
				
				modifier = {
					has_trait = diligent
					add = 15
				}
				modifier = {
					has_trait = lazy
					add = -15
				}
				modifier = {
					has_character_modifier = favored_child_modifier
					add = 15
				}
				
				modifier = {
					any_child = {
						count >= 1
					}
					add = 15
				}
				
				modifier = {
					learning >= 13
					add = 15
				}
				modifier = {
					stewardship >= 13
					add = 15
				}
				modifier = {
					martial >= 13
					add = 15
				}
			}
			save_scope_as = eligible_child
		}
		scope:partner.primary_heir = {
			save_scope_as = player_primary_heir
		}
	}
	
	#Murder the main heir
	option = {
		name = consort_events.0013.a
		trigger = { 
			can_start_scheme = {
				type = murder
				target = scope:partner.primary_heir
			}
		}
		if = {
			limit = {
				NOT = {
					any_scheme = {
						scheme_type = murder
						scheme_target = scope:partner.primary_heir
					}
				}
			}
			start_scheme = {
				type = murder
				target = scope:partner.primary_heir
			}
		}
		stress_impact = {
			temperate = minor_stress_impact_gain
			calm = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Traits
				add = 15
				has_trait = brave
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}
			modifier = { #Traits
				add = 10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = -15
				has_trait = craven
			}
			modifier = { #Traits
				add = -20
				has_trait = zealous
			}
			modifier = { #Traits
				add = -20
				has_trait = lazy
			}
			modifier = { #Traits
				add = -20
				has_trait = temperate
			}
			modifier = { #Traits
				add = -15
				has_trait = calm
			}
			modifier = { #Traits
				add = -10
				has_trait = shy
			}
			modifier = { #Traits
				add = -10
				has_trait = humble
			}
			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				has_character_flag = flag_yanwan
				add = 15
			}
			opinion_modifier = {
				opinion_target = scope:player_primary_heir
				multiplier = -0.5
			}
			
			
			modifier = { #Intrigue
				add = 5
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= very_high_skill_rating
			}
		}
	}
	
	#No action
	option = {
		name = consort_events.0013.b
		flavor = consort_events.0011.c_tt
		stress_impact = {
			ambitious = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_boldness = -0.25
				ai_compassion = 0.25
				ai_greed = -0.25
				ai_honor = 0.25
				ai_energy = -0.15
			}
			modifier = { #Traits
				add = -50
				has_trait = impatient
			}
			modifier = { #Traits
				add = 10
				has_trait = humble
			}
			modifier = { #Traits
				add = 15
				has_trait = temperate
			}
			modifier = { #Traits
				add = 10
				has_trait = calm
			}
			modifier = { #Traits
				add = 10
				has_trait = shy
			}
			modifier = { #Traits
				add = 10
				has_trait = craven
			}
			modifier = { #Traits
				add = 10
				has_trait = lazy
			}
			modifier = { #Traits
				add = -50
				has_trait = greedy
			}
			modifier = { #Traits
				add = -50
				has_trait = ambitious
			}
			modifier = { #Traits
				add = -20
				has_trait = deceitful
			}
			modifier = { #Intrigue
				add = 10
				intrigue < medium_skill_rating
			}
			opinion_modifier = {
				opinion_target = scope:player_primary_heir
				multiplier = 0.5
			}
		}
	}
	after = {
		add_character_flag = {
			flag = considered_killing_main_heir
			years = 5
		}
	}
}

################
##I'm favored!##
################
consort_events.0014 = {
	type = character_event
	title = consort_events.0014.t
	desc = consort_events.0014.desc
	theme = family
	override_background = {
		reference = corridor_day
	}
	
	left_portrait = { 	
		character = root
		animation = personality_greedy
	}
	lower_center_portrait = { 	
		character = scope:partner
	}
	
	trigger = {
		any_consort = {
			is_physically_able_adult = yes
			opinion = {
				target = root
				value >= low_positive_opinion
			}
			save_temporary_scope_as = temporary_partner
			any_consort = {
				is_physically_able_adult = yes
				is_courtier_of = scope:temporary_partner
				count >= 3
			}
		}
		OR = {
			AND = {
				is_landed = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
			has_character_modifier = favored_consort_modifier
			has_character_modifier = unfavored_consort_modifier
			has_opinion_modifier = {
				target = scope:temporary_partner
				modifier = forced_me_concubine_marriage_opinion
			}
			has_relation_rival = scope:temporary_partner
			has_relation_nemesis = scope:temporary_partner
		}
		is_demoted_grand_consort_trigger = no
		OR = {
			has_relation_friend = scope:temporary_partner
			has_relation_best_friend = scope:temporary_partner
			has_relation_lover = scope:temporary_partner
			has_relation_soulmate = scope:temporary_partner
			any_child = {
				is_child_of = scope:temporary_partner
				count >= 3
			}
		}
		OR = {
			accepts_concubinage = yes
			accepts_polygamy = yes
		}
		opinion = {
			target = scope:temporary_partner
			value >= low_positive_opinion
		}
		is_physically_able_adult = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = -0.15
			is_concubine = yes
		}
		modifier = {
			add = 0.15
			any_child = {
				count >= 4
			}
		}
		modifier = {
			add = 0.15
			any_consort = {
				any_consort = {
					is_physically_able_adult = yes
					count >= 5
				}
			}
		}
		modifier = {
			add = -0.75
			any_consort = {
				any_consort = {
					has_character_modifier = favored_consort_modifier
				}
			}
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				AND = {
					is_physically_able_adult = yes
					opinion = {
						target = root
						value >= low_positive_opinion
					}
					any_consort = {
						is_physically_able_adult = yes
						exists = court_owner
						court_owner = {
							any_consort = {
								this = root
							}
						}
						count >= 3
					}
				}
			}
			save_scope_as = partner
		}
	}
	
	#I'm favored!
	option = {
		name = consort_events.0014.a
		
		add_character_modifier = {
			modifier = favored_consort_modifier
			years = 3
		}
		add_opinion = {
			target = scope:partner
			modifier = grateful_opinion
			opinion = 15
		}
		
		stress_impact = {
			arrogant = minor_stress_impact_loss
			ambitious = minor_stress_impact_loss
			greedy = minor_stress_impact_loss
		}
		ai_chance = {
			base = 10
		}
	}
}

#####################
##Unfavored Consort##
#####################

consort_events.0015 = {
	type = character_event
	title = consort_events.0015.t
	desc = consort_events.0015.desc
	theme = family
	override_background = {
		reference = corridor_night
	}
	
	left_portrait = { 	
		character = root
		animation = worry
	}
	lower_center_portrait = { 	
		character = scope:partner
	}
	
	trigger = {
		any_consort = {
			is_physically_able_adult = yes
			opinion = {
				target = root
				value <= 0
			}
			save_temporary_scope_as = temporary_partner
			any_consort = {
				is_physically_able_adult = yes
				is_courtier_of = scope:temporary_partner
				count >= 3
			}
		}
		OR = {
			AND = {
				is_landed = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
			has_character_modifier = favored_consort_modifier
			has_character_modifier = unfavored_consort_modifier
			has_relation_friend = scope:temporary_partner
			has_relation_best_friend = scope:temporary_partner
			has_relation_lover = scope:temporary_partner
			has_relation_soulmate = scope:temporary_partner
		}
		is_demoted_grand_consort_trigger = no
		OR = {
			has_relation_rival = scope:temporary_partner
			has_relation_nemesis = scope:temporary_partner

			AND = {
				age >= 38
				any_child = {
					is_child_of = scope:temporary_partner
					count = 0
				}
			}
		}
		is_physically_able_adult = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.15
			is_concubine = yes
		}
		modifier = {
			add = -0.15
			any_child = {
				count >= 4
			}
		}
		modifier = {
			add = 0.15
			any_consort = {
				any_consort = {
					is_physically_able_adult = yes
					count >= 5
				}
			}
		}
		modifier = {
			add = 0.15
			any_consort = {
				any_consort = {
					has_character_modifier = favored_consort_modifier
				}
			}
		}
		modifier = {
			add = -0.50
			is_married = yes
		}
		modifier = {
			add = -0.50
			any_close_family_member = {
				highest_held_title_tier >= tier_kingdom
			}
		}
		modifier = {
			add = -0.50
			any_consort = {
				is_vassal_or_below_of = root
			}
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				AND = {
					is_physically_able_adult = yes
					opinion = {
						target = root
						value <= 0
					}
					any_consort = {
						is_physically_able_adult = yes
						exists = court_owner
						court_owner = {
							any_consort = {
								this = root
							}
						}
						count >= 3
					}
				}
			}
			save_scope_as = partner
		}
	}
	
	#I'm unfavored
	option = {
		name = consort_events.0015.a
		
		add_character_modifier = {
			modifier = unfavored_consort_modifier
			years = 5
		}
		add_opinion = {
			target = scope:partner
			modifier = ignored_consort_opinion
		}
		
		stress_impact = {
			arrogant = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
		}
	}
}

#####################
##No longer demoted##
#####################
consort_events.0016 = {
	hidden = yes
	
	trigger = {
		OR = {
			AND = {
				is_demoted_grand_consort_trigger = yes
				any_consort = {
					exists = primary_spouse
					primary_spouse = {
						this = root
					}
				}
			}
			AND = {
				OR = {
					has_character_flag = flag_demoted_grand_consort
					has_character_flag = flag_demoted_spouse
				}
				has_court_position = grand_consort_court_position
			}
			AND = {
				is_demoted_noble_consort_trigger = yes
				any_consort = {
					exists = primary_spouse
					primary_spouse = {
						this = root
					}
				}
			}
			AND = {
				OR = {
					has_character_flag = flag_demoted_noble_consort
					has_character_flag = flag_demoted_spouse
				}
				has_court_position = noble_consort_court_position
			}
			AND = {
				is_demoted_noble_lady_trigger = yes
				any_consort = {
					exists = primary_spouse
					primary_spouse = {
						this = root
					}
				}
			}
			AND = {
				OR = {
					has_character_flag = flag_demoted_noble_lady
					has_character_flag = flag_demoted_spouse
				}
				has_court_position = noble_lady_court_position
			}
			AND = {
				is_demoted_lady_trigger = yes
				any_consort = {
					exists = primary_spouse
					primary_spouse = {
						this = root
					}
				}
			}
			AND = {
				OR = {
					has_character_flag = flag_demoted_lady
					has_character_flag = flag_demoted_spouse
				}
				has_court_position = lady_court_position
			}
			AND = {
				is_demoted_attendant_trigger = yes
				any_consort = {
					exists = primary_spouse
					primary_spouse = {
						this = root
					}
				}
			}
			AND = {
				OR = {
					has_character_flag = flag_demoted_attendant
					has_character_flag = flag_demoted_spouse
				}
				has_court_position = attendant_court_position
			}
			AND = {
				has_character_flag = flag_demoted_spouse
				is_married = yes
			}
		}
		is_physically_able_adult = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.50
			is_demoted_grand_consort_trigger = yes
			any_consort = {
				exists = primary_spouse
				primary_spouse = {
					this = root
				}
			}
		}
		modifier = {
			add = 0.25
			has_character_flag = flag_demoted_grand_consort
			OR = {
				has_court_position = grand_consort_court_position
				any_consort = {
					exists = primary_spouse
					primary_spouse = {
						this = root
					}
				}
			}
		}
		modifier = {
			add = 0.15
			has_character_flag = flag_demoted_spouse
			OR = {
				is_married = yes
				any_consort = {
					exists = primary_spouse
					primary_spouse = {
						this = root
					}
				}
			}
		}
		modifier = {
			add = 0.10
			is_landed = yes
		}
	}
	
	immediate = {
		if = { #The PS
			limit = {
				AND = {
					is_demoted_grand_consort_trigger = yes
					any_consort = {
						exists = primary_spouse
						primary_spouse = {
							this = root
						}
					}
				}
			}
			if = {
				limit = {
					has_character_modifier = demoted_primary_spouse_modifier
				}
				remove_character_modifier = demoted_primary_spouse_modifier
			}
			if = {
				limit = {
					OR = {
						has_character_flag = flag_demoted_grand_consort
						has_character_flag = flag_demoted_spouse
					}
				}
				if = {
					limit = {
						has_character_flag = flag_demoted_grand_consort
					}
					remove_character_flag = flag_demoted_grand_consort
				}
				else = {
					remove_character_flag = flag_demoted_spouse
				}
				remove_character_modifier = demoted_spouse_modifier
			}
		}
		if = { #The PS
			limit = {
				AND = {
					is_demoted_noble_consort_trigger = yes
					any_consort = {
						exists = primary_spouse
						primary_spouse = {
							this = root
						}
					}
				}
			}
			if = {
				limit = {
					has_character_modifier = demoted_primary_spouse_modifier
				}
				remove_character_modifier = demoted_primary_spouse_modifier
			}
			if = {
				limit = {
					OR = {
						has_character_flag = flag_demoted_noble_consort
						has_character_flag = flag_demoted_spouse
					}
				}
				if = {
					limit = {
						has_character_flag = flag_demoted_noble_consort
					}
					remove_character_flag = flag_demoted_noble_consort
				}
				else = {
					remove_character_flag = flag_demoted_spouse
				}
				remove_character_modifier = demoted_spouse_modifier
			}
		}
		if = { #The PS
			limit = {
				AND = {
					is_demoted_noble_lady_trigger = yes
					any_consort = {
						exists = primary_spouse
						primary_spouse = {
							this = root
						}
					}
				}
			}
			if = {
				limit = {
					has_character_modifier = demoted_primary_spouse_modifier
				}
				remove_character_modifier = demoted_primary_spouse_modifier
			}
			if = {
				limit = {
					OR = {
						has_character_flag = flag_demoted_noble_lady
						has_character_flag = flag_demoted_spouse
					}
				}
				if = {
					limit = {
						has_character_flag = flag_demoted_noble_lady
					}
					remove_character_flag = flag_demoted_noble_lady
				}
				else = {
					remove_character_flag = flag_demoted_spouse
				}
				remove_character_modifier = demoted_spouse_modifier
			}
		}
		if = { #The PS
			limit = {
				AND = {
					is_demoted_lady_trigger = yes
					any_consort = {
						exists = primary_spouse
						primary_spouse = {
							this = root
						}
					}
				}
			}
			if = {
				limit = {
					has_character_modifier = demoted_primary_spouse_modifier
				}
				remove_character_modifier = demoted_primary_spouse_modifier
			}
			if = {
				limit = {
					OR = {
						has_character_flag = flag_demoted_lady
						has_character_flag = flag_demoted_spouse
					}
				}
				if = {
					limit = {
						has_character_flag = flag_demoted_lady
					}
					remove_character_flag = flag_demoted_lady
				}
				else = {
					remove_character_flag = flag_demoted_spouse
				}
				remove_character_modifier = demoted_spouse_modifier
			}
		}
		if = { #The PS
			limit = {
				AND = {
					is_demoted_attendant_trigger = yes
					any_consort = {
						exists = primary_spouse
						primary_spouse = {
							this = root
						}
					}
				}
			}
			if = {
				limit = {
					has_character_modifier = demoted_primary_spouse_modifier
				}
				remove_character_modifier = demoted_primary_spouse_modifier
			}
			if = {
				limit = {
					OR = {
						has_character_flag = flag_demoted_attendant
						has_character_flag = flag_demoted_spouse
					}
				}
				if = {
					limit = {
						has_character_flag = flag_demoted_attendant
					}
					remove_character_flag = flag_demoted_attendant
				}
				else = {
					remove_character_flag = flag_demoted_spouse
				}
				remove_character_modifier = demoted_spouse_modifier
			}
		}
		else_if = { #The GC
			limit = {
				AND = {
					OR = {
						has_character_flag = flag_demoted_grand_consort
						has_character_flag = flag_demoted_spouse
					}
					has_court_position = grand_consort_court_position
				}
			}
			if = {
				limit = {
					OR = {
						has_character_flag = flag_demoted_grand_consort
						has_character_flag = flag_demoted_spouse
					}
				}
				if = {
					limit = {
						has_character_flag = flag_demoted_grand_consort
					}
					remove_character_flag = flag_demoted_grand_consort
				}
				else = {
					remove_character_flag = flag_demoted_spouse
				}
				remove_character_modifier = demoted_spouse_modifier
			}
		}
		else_if = { #Secondary spouses
			limit = {
				AND = {
					has_character_flag = flag_demoted_spouse
					is_married = yes
				}
			}
			remove_character_flag = flag_demoted_spouse
			remove_character_modifier = demoted_spouse_modifier
		}
	}
}

######################
##Killing a superior##
######################
consort_events.0017 = {
	type = character_event
	title = consort_events.0017.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_court_position = grand_consort_court_position
				}
				desc = consort_events.0017.gc.desc
			}
			triggered_desc = {
				trigger = {
					is_married = yes
				}
				desc = consort_events.0017.secondary_s.desc
			}
			triggered_desc = {
				desc = consort_events.0017.concubine.desc
			}
		}
		desc = consort_events.0017.end.desc
	}
	theme = corruption
	override_background = {
		reference = bedchamber
	}
	
	left_portrait = { 	
		character = root
		animation = personality_dishonorable
	}
	right_portrait = { 	
		character = scope:partner
		animation = flirtation
	}
	lower_left_portrait = {
		trigger = {
			exists = scope:first_target
			exists = scope:second_target
		}
		character = scope:first_target
	}
	lower_center_portrait = {
		trigger = {
			NOT = {
				exists = scope:second_target
			}
		}
		character = scope:first_target
	}
	lower_right_portrait = {
		trigger = {
			exists = scope:first_target
			exists = scope:second_target
		}
		character = scope:second_target
	}
	
	trigger = {
		any_consort = {
			is_landed = yes
			is_physically_able_adult = yes
			any_consort = {
				is_physically_able_adult = yes
				count >= 3
			}
			save_temporary_scope_as = temporary_partner
		}
		OR = {
			AND = {
				is_concubine = yes
				NOT = {
					has_court_position = lady_court_position
					has_court_position = attendant_court_position
					has_court_position = consort_court_position
				}
				scope:temporary_partner = {
					OR = {
						any_consort = {
							is_married = yes
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_any_spouse
						}
						any_consort = {
							has_court_position = attendant_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = lady_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = consort_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = noble_attendant_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = noble_lady_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = noble_consort_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = grand_consort_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
					}
				}
			}
			AND = {
				is_concubine = yes
				has_court_position = attendant_court_position
				scope:temporary_partner = {
					OR = {
						any_consort = {
							is_married = yes
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_any_spouse
						}
						any_consort = {
							has_court_position = lady_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = consort_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = noble_attendant_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = noble_lady_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = noble_consort_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
					}
				}
			}
			AND = {
				is_concubine = yes
				has_court_position = lady_court_position
				scope:temporary_partner = {
					OR = {
						any_consort = {
							is_married = yes
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_any_spouse
						}
						any_consort = {
							has_court_position = consort_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = noble_attendant_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = noble_lady_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = noble_consort_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
					}
				}
			}
			AND = {
				is_spouse_of = scope:temporary_partner
				NOT = {
					this = scope:temporary_partner.primary_spouse
					has_court_position = noble_lady_court_position
					has_court_position = noble_consort_court_position
					has_court_position = noble_attendant_court_position
				}
				scope:temporary_partner = {
					OR = {
						AND = {
							exists = primary_spouse
							scope:temporary_partner.primary_spouse = {
								is_courtier_of = scope:temporary_partner
							}
						}
						any_consort = {
							has_court_position = noble_attendant_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = noble_lady_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = noble_consort_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_spouse = {
							has_court_position = grand_consort_court_position
							is_courtier_of = scope:temporary_partner
							NOT = { this = root }
							save_temporary_scope_as = temporary_partner_grand_consort
						}
					}
				}
			}
			AND = {
				is_spouse_of = scope:temporary_partner
				has_court_position = noble_lady_court_position
				NOT = { 
					this = scope:temporary_partner.primary_spouse
				}
				scope:temporary_partner = {
					OR = {
						AND = {
							exists = primary_spouse
							scope:temporary_partner.primary_spouse = {
								is_courtier_of = scope:temporary_partner
							}
						}
						any_consort = {
							has_court_position = noble_consort_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_spouse = {
							has_court_position = grand_consort_court_position
							is_courtier_of = scope:temporary_partner
							NOT = { this = root }
							save_temporary_scope_as = temporary_partner_grand_consort
						}
					}
				}
			}
			AND = {
				is_spouse_of = scope:temporary_partner
				has_court_position = noble_attendant_court_position
				NOT = { 
					this = scope:temporary_partner.primary_spouse
				}
				scope:temporary_partner = {
					OR = {
						AND = {
							exists = primary_spouse
							scope:temporary_partner.primary_spouse = {
								is_courtier_of = scope:temporary_partner
							}
						}
						any_consort = {
							has_court_position = noble_consort_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_consort = {
							has_court_position = noble_lady_court_position
							is_courtier_of = scope:temporary_partner
							save_temporary_scope_as = temporary_partner_grand_consort
						}
						any_spouse = {
							has_court_position = grand_consort_court_position
							is_courtier_of = scope:temporary_partner
							NOT = { this = root }
							save_temporary_scope_as = temporary_partner_grand_consort
						}
					}
				}
			}
			AND = {
				is_spouse_of = scope:temporary_partner
				has_court_position = noble_consort_court_position
				NOT = { 
					this = scope:temporary_partner.primary_spouse
				}
				scope:temporary_partner = {
					OR = {
						AND = {
							exists = primary_spouse
							scope:temporary_partner.primary_spouse = {
								is_courtier_of = scope:temporary_partner
							}
						}
						any_spouse = {
							has_court_position = grand_consort_court_position
							is_courtier_of = scope:temporary_partner
							NOT = { this = root }
							save_temporary_scope_as = temporary_partner_grand_consort
						}
					}
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
			has_character_flag = considered_killing_higher_ranked_consort
			scope:temporary_partner = {
				OR = {
					AND = {
						exists = scope:temporary_partner.primary_spouse
						any_consort = {
							any_scheme = {
								scheme_type = murder
								scheme_target = scope:temporary_partner.primary_spouse
							}
						}
					}
					AND = {
						exists = scope:temporary_partner_any_spouse
						any_consort = {
							any_scheme = {
								scheme_type = murder
								scheme_target = scope:temporary_partner_any_spouse
							}
						}
					}
					AND = {
						exists = scope:temporary_partner_grand_consort
						any_consort = {
							any_scheme = {
								scheme_type = murder
								scheme_target = scope:temporary_partner_grand_consort
							}
						}
					}
				}
			}
		}
		
		OR = {
			AND = {
				is_landed = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
				}
			}
		}
		OR = {
			
			AND = {
				exists = scope:temporary_partner.primary_spouse
				can_start_scheme = {
					type = murder
					target = scope:temporary_partner.primary_spouse
				}
			}
			AND = {
				exists = scope:temporary_partner_any_spouse
				can_start_scheme = {
					type = murder
					target = scope:temporary_partner_any_spouse
				}
			}
			AND = {
				exists = scope:temporary_partner_grand_consort
				can_start_scheme = {
					type = murder
					target = scope:temporary_partner_grand_consort
				}
			}
		}
		harem_politics_evil_consort_trigger = yes
		is_physically_able_adult = yes
		any_scheme = {
			scheme_type = murder
			count = 0
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 1
			has_character_flag = flag_yanwan
		}
		modifier = {
			add = 0.1
			has_character_modifier = scheming_consort_modifier
		}
		modifier = {
			add = 0.1
			OR = {
				has_character_modifier = favored_consort_modifier
				has_character_modifier = unfavored_consort_modifier
			}
		}
		modifier = {
			add = 0.5
			has_trait = ambitious
		}
		modifier = {
			add = 0.1
			has_trait = greedy
		}
		modifier = {
			add = 0.1
			has_trait = arrogant
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				is_landed = yes
				is_physically_able_adult = yes
				any_consort = {
					is_physically_able_adult = yes
					count >= 3
				}
			}
			save_scope_as = partner
		}
		scope:partner = {
			if = {
				limit = {
					AND = {
						exists = primary_spouse
						primary_spouse = {
							is_physically_able_adult = yes
							is_courtier_of = scope:partner
							NOT = { 
								this = root
							}
						}
					}
				}
				primary_spouse = {
					save_scope_as = first_target
				}
			}
			else_if = {
				limit = {
					any_consort = {
						has_court_position = grand_consort_court_position
						is_courtier_of = scope:partner
						NOT = { 
							this = root
						}
					}
				}
				random_consort = {
					limit = {
						has_court_position = grand_consort_court_position
					}
					save_scope_as = first_target
				}
			}
			else_if = {
				limit = {
					AND = {
						root = {
							is_concubine = yes
						}
						any_spouse = {
							is_courtier_of = scope:partner
						}
					}
				}
				random_spouse = {
					limit = {
						is_courtier_of = scope:partner
					}
					save_scope_as = first_target
				}
			}
			
			if = {
				limit = {
					AND = {
						any_consort = {
							has_court_position = grand_consort_court_position
							is_courtier_of = scope:partner
							NOR = { 
								this = root
								this = scope:first_target
							}
						}
					}
				}
				random_consort = {
					limit = {
						has_court_position = grand_consort_court_position
					}
					save_scope_as = second_target
				}
			}
		}
	}
	
	#Murder the first_target
	option = {
		name = consort_events.0017.a
		trigger = { 
			can_start_scheme = {
				type = murder
				target = scope:first_target
			}
		}
		if = {
			limit = {
				NOT = {
					any_scheme = {
						scheme_type = murder
						scheme_target = scope:first_target
					}
				}
			}
			start_scheme = {
				type = murder
				target = scope:first_target
			}
		}
		stress_impact = {
			lazy = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
			calm = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Traits
				add = 15
				has_trait = brave
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}
			modifier = { #Traits
				add = 10
				has_trait = cynical
			}
			modifier = { #Traits
				add = 10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = -15
				has_trait = craven
			}
			modifier = { #Traits
				add = -20
				has_trait = zealous
			}
			modifier = { #Traits
				add = -50
				has_trait = lazy
			}
			modifier = { #Traits
				add = -20
				has_trait = temperate
			}
			modifier = { #Traits
				add = -20
				has_trait = calm
			}
			modifier = { #Traits
				add = -15
				has_trait = shy
			}
			modifier = { #Traits
				add = -15
				has_trait = humble
			}
			modifier = { #Traits
				add = -10
				has_trait = content
			}
			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				has_character_flag = flag_yanwan
				add = 15
			}
			opinion_modifier = {
				opinion_target = scope:first_target
				multiplier = -0.5
			}
			modifier = {
				add = 10
				OR = {
					has_relation_rival = scope:first_target
					has_relation_nemesis = scope:first_target
					has_relation_potential_rival = scope:first_target
				}
			}
			
			modifier = { #Intrigue
				add = 5
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= very_high_skill_rating
			}
		}
	}
	
	#Murder the second_target
	option = {
		name = consort_events.0017.b
		trigger = { 
			exists = scope:second_target
			can_start_scheme = {
				type = murder
				target = scope:second_target
			}
		}
		if = {
			limit = {
				NOT = {
					any_scheme = {
						scheme_type = murder
						scheme_target = scope:second_target
					}
				}
			}
			start_scheme = {
				type = murder
				target = scope:second_target
			}
		}
		stress_impact = {
			lazy = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
			calm = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Traits
				add = 15
				has_trait = brave
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}
			modifier = { #Traits
				add = 10
				has_trait = cynical
			}
			modifier = { #Traits
				add = 10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = -15
				has_trait = craven
			}
			modifier = { #Traits
				add = -20
				has_trait = zealous
			}
			modifier = { #Traits
				add = -50
				has_trait = lazy
			}
			modifier = { #Traits
				add = -20
				has_trait = temperate
			}
			modifier = { #Traits
				add = -20
				has_trait = calm
			}
			modifier = { #Traits
				add = -15
				has_trait = shy
			}
			modifier = { #Traits
				add = -15
				has_trait = humble
			}
			modifier = { #Traits
				add = -10
				has_trait = content
			}
			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				has_character_flag = flag_yanwan
				add = 15
			}
			opinion_modifier = {
				opinion_target = scope:second_target
				multiplier = -0.5
			}
			modifier = {
				add = 10
				OR = {
					has_relation_rival = scope:second_target
					has_relation_nemesis = scope:second_target
					has_relation_potential_rival = scope:second_target
				}
			}
			
			modifier = { #Intrigue
				add = 5
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= very_high_skill_rating
			}
		}
	}
	
	#Seduce partner
	option = {
		name = consort_events.0012.a
		trigger = { 
			NOR = {
				has_relation_rival = scope:partner
				has_relation_nemesis = scope:partner
			}
			can_start_scheme = {
				type = seduce
				target = scope:partner
			}
		}
		if = {
			limit = {
				NOT = {
					any_scheme = {
						scheme_type = seduce
						scheme_target = scope:partner
					}
				}
			}
			start_scheme = {
				type = seduce
				target = scope:partner
			}
		}
		stress_impact = {
			chaste = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = lustful
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}
			modifier = { #Traits
				add = -50
				has_trait = chaste
			}
			modifier = { #Traits
				add = -25
				has_trait = shy
			}
			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				add = 15
				has_character_flag = flag_yanwan
			}
			opinion_modifier = {
				opinion_target = scope:partner
				multiplier = 0.5
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= very_high_skill_rating
			}
		}
	}
	
	#No action
	option = {
		name = consort_events.0013.b
		flavor = consort_events.0011.c_tt
		stress_impact = {
			ambitious = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_boldness = -0.25
				ai_compassion = 0.25
				ai_greed = -0.25
				ai_honor = 0.25
				ai_energy = -0.15
			}
			modifier = { #Traits
				add = -50
				has_trait = impatient
			}
			modifier = { #Traits
				add = 15
				has_trait = humble
			}
			modifier = { #Traits
				add = 15
				has_trait = temperate
			}
			modifier = { #Traits
				add = 15
				has_trait = calm
			}
			modifier = { #Traits
				add = 15
				has_trait = shy
			}
			modifier = { #Traits
				add = 10
				has_trait = craven
			}
			modifier = { #Traits
				add = 15
				has_trait = lazy
			}
			modifier = { #Traits
				add = -50
				has_trait = greedy
			}
			modifier = { #Traits
				add = -50
				has_trait = ambitious
			}
			modifier = { #Traits
				add = -5
				has_trait = deceitful
			}
			
			modifier = { #Intrigue
				add = 10
				intrigue < medium_skill_rating
			}
			
			opinion_modifier = {
				opinion_target = scope:first_target
				multiplier = 0.5
			}
			modifier = { #Opinion
				add = 15
				exists = scope:second_target
				opinion = {
					target = scope:second_target
					value >= 10
				}
			}
			opinion_modifier = {
				opinion_target = scope:partner
				multiplier = -0.5
			}
		}
	}
	after = {
		add_character_flag = {
			flag = considered_killing_higher_ranked_consort
			years = 7
		}
	}
}

######################
##Killing a favorite##
######################
consort_events.0018 = {
	type = character_event
	title = consort_events.0014.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					this = scope:partner.primary_spouse
				}
				desc = consort_events.0018.ps.desc
			}
			triggered_desc = {
				trigger = {
					has_court_position = grand_consort_court_position
				}
				desc = consort_events.0018.gc.desc
			}
			triggered_desc = {
				trigger = {
					is_married = yes
				}
				desc = consort_events.0018.secondary_s.desc
			}
			triggered_desc = {
				desc = consort_events.0018.concubine.desc
			}
		}
		desc = consort_events.0018.end.desc
	}
	theme = corruption
	override_background = {
		reference = bedchamber
	}
	
	left_portrait = { 	
		character = root
		animation = spymaster
	}
	right_portrait = { 	
		character = scope:partner
		animation = flirtation
	}
	lower_left_portrait = {
		trigger = {
			exists = scope:first_target
			exists = scope:second_target
		}
		character = scope:first_target
	}
	lower_center_portrait = {
		trigger = {
			NOT = {
				exists = scope:second_target
			}
		}
		character = scope:first_target
	}
	lower_right_portrait = {
		trigger = {
			exists = scope:first_target
			exists = scope:second_target
		}
		character = scope:second_target
	}
	
	trigger = {
		any_consort = {
			is_landed = yes
			is_physically_able_adult = yes
			save_temporary_scope_as = temporary_partner
			any_consort = {
				is_physically_able_adult = yes
				has_character_modifier = favored_consort_modifier
				NOT = { this = root }
				is_courtier_of = scope:temporary_partner
				count >= 1
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
			has_character_flag = considered_killing_favored_consort
		}
		
		OR = {
			AND = {
				is_landed = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
				}
			}
		}
		harem_politics_evil_consort_trigger = yes
		is_physically_able_adult = yes
		any_scheme = {
			scheme_type = murder
			count = 0
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 1
			has_character_flag = flag_yanwan
		}
		modifier = {
			add = 0.1
			has_character_modifier = scheming_consort_modifier
		}
		modifier = {
			add = 0.1
			OR = {
				has_character_modifier = favored_consort_modifier
				has_character_modifier = unfavored_consort_modifier
			}
		}
		modifier = {
			add = 0.5
			has_trait = ambitious
		}
		modifier = {
			add = 0.1
			has_trait = greedy
		}
		modifier = {
			add = 0.1
			has_trait = arrogant
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				is_landed = yes
				is_physically_able_adult = yes
				any_consort = {
					is_physically_able_adult = yes
					has_character_modifier = favored_consort_modifier
					NOT = { this = root }
					count >= 1
				}
			}
			save_scope_as = partner
		}
		scope:partner = {
			every_consort = {
				limit = {
					is_physically_able_adult = yes
					has_character_modifier = favored_consort_modifier
					NOT = { this = root }
					is_courtier_of = scope:partner
				}
				add_to_list = favored_consort_list
			}
			random_in_list = {
				list = favored_consort_list
				weight = {
					base = 10
					modifier = {
						this = scope:partner.primary_spouse
						add = 15
					}
					modifier = {
						has_court_position = grand_consort_court_position
						add = 10
					}
					modifier = {
						has_court_position = noble_consort_court_position
						add = 10
					}
					modifier = {
						has_court_position = noble_lady_court_position
						add = 10
					}
					modifier = {
						has_court_position = noble_attendant_court_position
						add = 10
					}
					modifier = {
						has_court_position = consort_court_position
						add = 10
					}
					modifier = {
						has_court_position = lady_court_position
						add = 10
					}
					modifier = {
						has_court_position = attendant_court_position
						add = 10
					}
					modifier = {
						is_married = yes
						add = 10
					}
					modifier = {
						any_child = {
							eligible_heir_trigger = { PARTNER = scope:partner }
						}
						add = 10
					}
					modifier = {
						has_trait = beauty_good_1
						add = 5
					}
					modifier = {
						has_trait = beauty_good_2
						add = 10
					}
					modifier = {
						has_trait = beauty_good_3
						add = 15
					}
				}
				save_scope_as = first_target
			}
			if = {
				limit = {
					any_in_list = {
						list = favored_consort_list
						count > 1
					}
				}
				random_in_list = {
					list = favored_consort_list
					limit = {
						NOT = { this = scope:first_target }
					}
					weight = {
						base = 10
						modifier = {
							this = scope:partner.primary_spouse
							add = 15
						}
						modifier = {
							has_court_position = grand_consort_court_position
							add = 10
						}
						modifier = {
							has_court_position = noble_consort_court_position
							add = 10
						}
						modifier = {
							has_court_position = noble_lady_court_position
							add = 10
						}
						modifier = {
							has_court_position = noble_attendant_court_position
							add = 10
						}
						modifier = {
							has_court_position = consort_court_position
							add = 10
						}
						modifier = {
							has_court_position = lady_court_position
							add = 10
						}
						modifier = {
							has_court_position = attendant_court_position
							add = 10
						}
						modifier = {
							is_married = yes
							add = 10
						}
						modifier = {
							any_child = {
								eligible_heir_trigger = { PARTNER = scope:partner }
							}
							add = 10
						}
						modifier = {
							has_trait = beauty_good_1
							add = 5
						}
						modifier = {
							has_trait = beauty_good_2
							add = 10
						}
						modifier = {
							has_trait = beauty_good_3
							add = 15
						}
					}
					save_scope_as = second_target
				}
			}
		}
	}
	
	#Murder the first_target
	option = {
		name = consort_events.0017.a
		trigger = { 
			can_start_scheme = {
				type = murder
				target = scope:first_target
			}
		}
		if = {
			limit = {
				NOT = {
					any_scheme = {
						scheme_type = murder
						scheme_target = scope:first_target
					}
				}
			}
			start_scheme = {
				type = murder
				target = scope:first_target
			}
		}
		stress_impact = {
			lazy = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
			calm = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Traits
				add = 15
				has_trait = brave
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}
			modifier = { #Traits
				add = 10
				has_trait = cynical
			}
			modifier = { #Traits
				add = 10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = -15
				has_trait = craven
			}
			modifier = { #Traits
				add = -20
				has_trait = zealous
			}
			modifier = { #Traits
				add = -50
				has_trait = lazy
			}
			modifier = { #Traits
				add = -20
				has_trait = temperate
			}
			modifier = { #Traits
				add = -20
				has_trait = calm
			}
			modifier = { #Traits
				add = -15
				has_trait = shy
			}
			modifier = { #Traits
				add = -15
				has_trait = humble
			}
			modifier = { #Traits
				add = -10
				has_trait = content
			}
			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				has_character_flag = flag_yanwan
				add = 15
			}
			opinion_modifier = {
				opinion_target = scope:first_target
				multiplier = -0.5
			}
			modifier = {
				add = 10
				OR = {
					has_relation_rival = scope:first_target
					has_relation_nemesis = scope:first_target
					has_relation_potential_rival = scope:first_target
				}
			}
			
			modifier = { #Intrigue
				add = 5
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= very_high_skill_rating
			}
		}
	}
	
	#Murder the second_target
	option = {
		name = consort_events.0017.b
		trigger = { 
			exists = scope:second_target
			can_start_scheme = {
				type = murder
				target = scope:second_target
			}
		}
		if = {
			limit = {
				NOT = {
					any_scheme = {
						scheme_type = murder
						scheme_target = scope:second_target
					}
				}
			}
			start_scheme = {
				type = murder
				target = scope:second_target
			}
		}
		stress_impact = {
			lazy = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
			calm = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Traits
				add = 15
				has_trait = brave
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}
			modifier = { #Traits
				add = 10
				has_trait = cynical
			}
			modifier = { #Traits
				add = 10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = -15
				has_trait = craven
			}
			modifier = { #Traits
				add = -20
				has_trait = zealous
			}
			modifier = { #Traits
				add = -50
				has_trait = lazy
			}
			modifier = { #Traits
				add = -20
				has_trait = temperate
			}
			modifier = { #Traits
				add = -20
				has_trait = calm
			}
			modifier = { #Traits
				add = -15
				has_trait = shy
			}
			modifier = { #Traits
				add = -15
				has_trait = humble
			}
			modifier = { #Traits
				add = -10
				has_trait = content
			}
			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				has_character_flag = flag_yanwan
				add = 15
			}
			opinion_modifier = {
				opinion_target = scope:second_target
				multiplier = -0.5
			}
			modifier = {
				add = 10
				OR = {
					has_relation_rival = scope:second_target
					has_relation_nemesis = scope:second_target
					has_relation_potential_rival = scope:second_target
				}
			}
			
			modifier = { #Intrigue
				add = 5
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= very_high_skill_rating
			}
		}
	}
	
	#Seduce partner
	option = {
		name = consort_events.0012.a
		trigger = { 
			NOR = {
				has_relation_rival = scope:partner
				has_relation_nemesis = scope:partner
			}
			can_start_scheme = {
				type = seduce
				target = scope:partner
			}
		}
		if = {
			limit = {
				NOT = {
					any_scheme = {
						scheme_type = seduce
						scheme_target = scope:partner
					}
				}
			}
			start_scheme = {
				type = seduce
				target = scope:partner
			}
		}
		stress_impact = {
			chaste = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = lustful
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}
			modifier = { #Traits
				add = -50
				has_trait = chaste
			}
			modifier = { #Traits
				add = -25
				has_trait = shy
			}
			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				add = 15
				has_character_flag = flag_yanwan
			}
			opinion_modifier = {
				opinion_target = scope:partner
				multiplier = 0.5
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= very_high_skill_rating
			}
		}
	}
	
	#No action
	option = {
		name = consort_events.0013.b
		flavor = consort_events.0011.c_tt
		stress_impact = {
			ambitious = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_boldness = -0.25
				ai_compassion = 0.25
				ai_greed = -0.25
				ai_honor = 0.25
				ai_energy = -0.15
			}
			modifier = { #Traits
				add = -50
				has_trait = impatient
			}
			modifier = { #Traits
				add = 15
				has_trait = humble
			}
			modifier = { #Traits
				add = 15
				has_trait = temperate
			}
			modifier = { #Traits
				add = 15
				has_trait = calm
			}
			modifier = { #Traits
				add = 15
				has_trait = shy
			}
			modifier = { #Traits
				add = 10
				has_trait = craven
			}
			modifier = { #Traits
				add = 15
				has_trait = lazy
			}
			modifier = { #Traits
				add = -50
				has_trait = greedy
			}
			modifier = { #Traits
				add = -50
				has_trait = ambitious
			}
			modifier = { #Traits
				add = -5
				has_trait = deceitful
			}
			
			modifier = { #Intrigue
				add = 10
				intrigue < medium_skill_rating
			}
			
			opinion_modifier = {
				opinion_target = scope:first_target
				multiplier = 0.5
			}
			modifier = { #Opinion
				add = 15
				exists = scope:second_target
				opinion = {
					target = scope:second_target
					value >= 10
				}
			}
			opinion_modifier = {
				opinion_target = scope:partner
				multiplier = -0.5
			}
		}
	}
	after = {
		add_character_flag = {
			flag = considered_killing_favored_consort
			years = 7
		}
	}
}

#######################
##Poisoning a consort##
#######################
consort_events.0019 = {
	type = character_event
	title = consort_events.0019.t
	desc = {
		desc = consort_events.0019.start.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					is_male = no
				}
				desc = consort_events.0019.mother.desc
			}
			triggered_desc = {
				desc = consort_events.0019.father.desc
			}
		}
		desc = consort_events.0019.children.desc
		first_valid = { #Reasons
			triggered_desc = { #Primary Spouse
				trigger = {
					exists = scope:partner.primary_spouse
					scope:partner.primary_spouse = {
						this = scope:threatening_consort
					}
				}
				desc = consort_events.0019.ps.desc
			}
			triggered_desc = { #Beauty
				trigger = {
					scope:threatening_consort = {
						has_trait = beauty_good
					}
				}
				desc = consort_events.0019.beauty.desc
			}
			triggered_desc = { #Favor
				trigger = {
					scope:threatening_consort = {
						has_character_modifier = favored_consort_modifier
					}
				}
				desc = consort_events.0019.favor.desc
			}
			triggered_desc = { #Good family
				trigger = {
					scope:threatening_consort = {
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								is_liege_or_above_of = scope:partner
								AND = {	
									is_knight_of = scope:partner
									is_acclaimed = yes
								}
							}
						}
					}
				}
				desc = consort_events.0019.good_family.desc
			}
			triggered_desc = {
				desc = consort_events.0019.generic.desc
			}
		}
		desc = consort_events.0019.mid.desc
		first_valid = { #Reasons
			triggered_desc = { #Primary Spouse
				trigger = {
					scope:threatening_consort = {
						is_male = yes
					}
				}
				desc = consort_events.0019.fathers.desc
			}
			triggered_desc = {
				desc = consort_events.0019.gives_birth.desc
			}
		}
		desc = consort_events.0019.end.desc
	}
	theme = corruption
	override_background = {
		reference = bedchamber
	}
	
	left_portrait = { 	
		character = root
		animation = spymaster
	}
	right_portrait = { 	
		character = scope:threatening_consort
		animation = flirtation
	}
	
	trigger = {
		any_consort = {
			is_landed = yes
			is_physically_able_adult = yes
			save_temporary_scope_as = temporary_partner
			any_consort = {
				threatening_consort_trigger = { PARTNER = scope:temporary_partner }
				count >= 1
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
			has_character_flag = considered_poisoning_threatening_consort
		}
		
		OR = {
			AND = {
				is_landed = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
				}
			}
		}
		harem_politics_evil_consort_trigger = yes
		is_physically_able_adult = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 1
			has_character_flag = flag_yanwan
		}
		modifier = {
			add = 0.1
			has_character_modifier = scheming_consort_modifier
		}
		modifier = {
			add = 0.1
			OR = {
				has_character_modifier = favored_consort_modifier
				has_character_modifier = unfavored_consort_modifier
			}
		}
		modifier = {
			add = 0.15
			has_trait = ambitious
		}
		modifier = {
			add = 0.05
			has_trait = greedy
		}
		modifier = {
			add = 0.05
			is_married = yes
		}
		modifier = {
			add = 0.05
			has_court_position = grand_consort_court_position
		}
		modifier = {
			add = 0.05
			has_court_position = noble_consort_court_position
		}
		modifier = {
			add = 0.05
			has_court_position = noble_lady_court_position
		}
		modifier = {
			add = 0.05
			has_court_position = noble_attendant_court_position
		}
		modifier = {
			add = 0.05
			has_court_position = consort_court_position
		}
		modifier = {
			add = 0.05
			has_court_position = lady_court_position
		}
		modifier = {
			add = 0.05
			has_court_position = attendant_court_position
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				is_landed = yes
				is_physically_able_adult = yes
				any_consort = {
					is_physically_able_ai_adult = yes
					age <= 44
					sex_opposite_of = prev
					is_courtier_of = prev
					OR = {
						has_character_modifier = favored_consort_modifier
						has_trait = beauty_good_2
						has_trait = beauty_good_3
						AND = {
							exists = prev.primary_spouse
							this = prev.primary_spouse
						}
						has_court_position = grand_consort_court_position
						has_court_position = noble_consort_court_position
						has_court_position = noble_lady_court_position
						has_court_position = noble_attendant_court_position
						has_court_position = consort_court_position
						has_court_position = lady_court_position
						has_court_position = attendant_court_position
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = prev
								is_councillor_of = prev
								is_parent_of = prev
								is_liege_or_above_of = prev
								AND = {	
									is_knight_of = prev
									is_acclaimed = yes
								}
							}
						}
					}
					
					NOR = {
						this = root
						has_trait = pregnant
						has_character_modifier = unfavored_consort_modifier
						has_character_modifier = langhua_bracelet
						has_character_modifier = lingrong_ointment
						has_opinion_modifier = {
							target = root
							modifier = gifted_me_poison_opinion
						}
						has_character_flag = flag_considered_consort
					}
					OR = {
						AND = {
							is_travelling = yes
							current_travel_plan ={
								travel_plan_owner = prev
							}
							root = {
								is_travelling = yes
								current_travel_plan ={
									travel_plan_owner = prev
								}
							}
						}
						AND = {
							is_travelling = no
							root = {
								is_travelling = no
							}
						}
					}
					count >= 1
				}
			}
			save_scope_as = partner
		}
		scope:partner = {
			every_consort = {
				limit = {
					threatening_consort_trigger = { PARTNER = scope:partner }
				}
				add_to_list = threatening_consort_list
			}
			random_in_list = {
				list = threatening_consort_list
				weight = {
					base = 10
					modifier = {
						this = scope:partner.primary_spouse
						add = 15
					}
					modifier = {
						has_court_position = grand_consort_court_position
						add = 10
					}
					modifier = {
						has_court_position = noble_consort_court_position
						add = 10
					}
					modifier = {
						has_court_position = noble_lady_court_position
						add = 10
					}
					modifier = {
						has_court_position = noble_attendant_court_position
						add = 10
					}
					modifier = {
						has_court_position = consort_court_position
						add = 10
					}
					modifier = {
						has_court_position = lady_court_position
						add = 10
					}
					modifier = {
						has_court_position = attendant_court_position
						add = 10
					}
					modifier = {
						is_married = yes
						add = 10
					}
					modifier = {
						has_trait = beauty_good_1
						add = 5
					}
					modifier = {
						has_trait = beauty_good_2
						add = 10
					}
					modifier = {
						has_trait = beauty_good_3
						add = 15
					}
					modifier = {
						any_close_family_member = {
							is_liege_or_above_of = scope:partner
						}
						add = 20
					}
					modifier = {
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = prev
								is_councillor_of = prev
								is_parent_of = prev
								is_liege_or_above_of = prev
							}
						}
						add = 10
					}
				}
				save_scope_as = threatening_consort
				scope:threatening_consort = {
					add_character_flag = {
						flag = flag_considered_consort
						days = 2
					}
				}
			}
		}
	}
	
	#Langua's "friendship bracelet"
	option = {
		name = consort_events.0019.a
		trigger = { 
			OR = { 
				any_spouse = { 
					this = scope:partner
				}
				has_court_position = grand_consort_court_position
			}
		}
		random_list = {
			75 = { #The consort accepts it
				opinion_modifier = { #Opinion
					WHO = scope:threatening_consort
					opinion_target = root
					min = -10
					max = 20
					multiplier = 1
				}
				modifier = { #Traits
					scope:threatening_consort = { has_trait = trusting }
					add = 20
				}
				modifier = { #Spouses
					scope:partner = { 
						any_spouse = {
							this = root
						}
					}
					add = 5
				}
				modifier = { #Grand Consort
					root = { 
						has_court_position = grand_consort_court_position
					}
					add = 5
				}
				modifier = { #Noble Consort
					root = { 
						has_court_position = noble_consort_court_position
					}
					add = 5
				}
				modifier = { #Noble Lady
					root = { 
						has_court_position = noble_lady_court_position
					}
					add = 5
				}
				modifier = { #Noble Attendant
					root = { 
						has_court_position = noble_attendant_court_position
					}
					add = 5
				}
				modifier = { #Consort
					root = { 
						has_court_position = consort_court_position
					}
					add = 5
				}
				modifier = { #Lady
					root = { 
						has_court_position = lady_court_position
					}
					add = 5
				}
				modifier = { #Attendant
					root = { 
						has_court_position = attendant_court_position
					}
					add = 5
				}
				modifier = { #Primary Spouse
					scope:partner = { 
						exists = primary_spouse
						primary_spouse = {
							this = root
						}
					}
					add = 50
				}
				modifier = { #Favored consorts
					root = { 
						has_character_modifier = favored_consort_modifier
					}
					add = 5
				}
				compare_modifier = { #Intrigue
					value = intrigue
					multiplier = 1
					max = 25
				}
				scope:threatening_consort = { 
					add_character_modifier = {
						modifier = langhua_bracelet
					}
					add_opinion = {
						target = root
						modifier = gifted_me_poison_opinion
					}
					if = {
						limit = { can_set_relation_potential_friend_trigger = { CHARACTER = root } }
						set_relation_potential_friend = root
					}
				}
			}
			25 = { #They reject the bracelet
				opinion_modifier = { #Opinion
					WHO = scope:threatening_consort
					opinion_target = root
					min = -20
					max = 10
					multiplier = -1
				}
				modifier = { #Traits
					scope:threatening_consort = { has_trait = paranoid }
					add = 10
				}
				compare_modifier = { #Intrigue
					value = scope:threatening_consort.intrigue
					multiplier = 1
					max = 25
				}
				modifier = { #Favored consorts
					root = { 
						has_character_modifier = unfavored_consort_modifier
					}
					add = 10
				}
				modifier = { #Primary Spouse
					scope:partner = { 
						exists = primary_spouse
						primary_spouse = {
							this = root
						}
					}
					add = -20
				}
				add_opinion = {
					target = scope:threatening_consort
					modifier = refusal_opinion
					opinion = -5
				}
			}
		}
		stress_impact = {
			honest = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			just = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
			calm = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Traits
				add = 20
				has_trait = disloyal
			}
			modifier = { #Traits
				add = 15
				has_trait = brave
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}
			modifier = { #Traits
				add = 10
				has_trait = cynical
			}
			modifier = { #Traits
				add = 10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = -15
				has_trait = craven
			}
			modifier = { #Traits
				add = -20
				has_trait = zealous
			}
			modifier = { #Traits
				add = 10
				has_trait = paranoid
			}
			modifier = { #Traits
				add = -50
				has_trait = lazy
			}
			modifier = { #Traits
				add = -50
				has_trait = honest
			}
			modifier = { #Traits
				add = -50
				has_trait = compassionate
			}
			modifier = { #Traits
				add = -50
				has_trait = forgiving
			}
			modifier = { #Traits
				add = -50
				has_trait = just
			}
			modifier = { #Traits
				add = -50
				has_trait = temperate
			}
			modifier = { #Traits
				add = -20
				has_trait = calm
			}
			modifier = { #Traits
				add = -15
				has_trait = shy
			}
			modifier = { #Traits
				add = -15
				has_trait = humble
			}
			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				has_character_flag = flag_yanwan
				add = 15
			}
			
			opinion_modifier = {
				who = root
				opinion_target = scope:threatening_consort
				min = -20
				max = 15
				multiplier = -1
			}
		}
	}
	
	#Lingrong's "ointment"
	option = {
		name = consort_events.0019.b
		random_list = {
			50 = { #The consort accepts it
				opinion_modifier = { #Opinion
					WHO = scope:threatening_consort
					opinion_target = root
					min = -30
					max = 30
					multiplier = 1
				}
				modifier = { #Traits
					scope:threatening_consort = { has_trait = trusting }
					add = 20
				}
				modifier = { #Spouses
					scope:partner = { 
						any_spouse = {
							this = root
						}
					}
					add = 5
				}
				modifier = { #Grand Consort
					root = { 
						has_court_position = grand_consort_court_position
					}
					add = 5
				}
				modifier = { #Noble Consort
					root = { 
						has_court_position = noble_consort_court_position
					}
					add = 5
				}
				modifier = { #Noble Lady
					root = { 
						has_court_position = noble_lady_court_position
					}
					add = 5
				}
				modifier = { #Noble Attendant
					root = { 
						has_court_position = noble_attendant_court_position
					}
					add = 5
				}
				modifier = { #Consort
					root = { 
						has_court_position = consort_court_position
					}
					add = 5
				}
				modifier = { #Lady
					root = { 
						has_court_position = lady_court_position
					}
					add = 5
				}
				modifier = { #Attendant
					root = { 
						has_court_position = attendant_court_position
					}
					add = 5
				}
				modifier = { #Primary Spouse
					scope:partner = { 
						exists = primary_spouse
						primary_spouse = {
							this = root
						}
					}
					add = 10
				}
				modifier = { #Favored consorts
					root = { 
						has_character_modifier = favored_consort_modifier
					}
					add = 5
				}
				compare_modifier = { #Intrigue
					value = intrigue
					multiplier = 1
					max = 25
				}
				scope:threatening_consort = { 
					add_character_modifier = {
						modifier = lingrong_ointment
					}
					add_opinion = {
						target = root
						modifier = gifted_me_poison_opinion
					}
					if = {
						limit = { can_set_relation_potential_friend_trigger = { CHARACTER = root } }
						set_relation_potential_friend = root
					}
				}
			}
			50 = { #They reject the ointment
				opinion_modifier = { #Opinion
					WHO = scope:threatening_consort
					opinion_target = root
					min = -30
					max = 30
					multiplier = -1
				}
				modifier = { #Traits
					scope:threatening_consort = { has_trait = paranoid }
					add = 30
				}
				modifier = { #Traits
					scope:threatening_consort = { has_trait = lifestyle_herbalist }
					add = 30
				}
				compare_modifier = { #Intrigue
					value = scope:threatening_consort.intrigue
					multiplier = 1
					max = 25
				}
				modifier = { #Favored consorts
					root = { 
						has_character_modifier = unfavored_consort_modifier
					}
					add = 10
				}
			}
		}
		stress_impact = {
			honest = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			just = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
			calm = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Traits
				add = 20
				has_trait = disloyal
			}
			modifier = { #Traits
				add = 15
				has_trait = brave
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}
			modifier = { #Traits
				add = 10
				has_trait = cynical
			}
			modifier = { #Traits
				add = 10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = -15
				has_trait = craven
			}
			modifier = { #Traits
				add = -20
				has_trait = zealous
			}
			modifier = { #Traits
				add = 10
				has_trait = paranoid
			}
			modifier = { #Traits
				add = -50
				has_trait = lazy
			}
			modifier = { #Traits
				add = -50
				has_trait = honest
			}
			modifier = { #Traits
				add = -50
				has_trait = compassionate
			}
			modifier = { #Traits
				add = -50
				has_trait = forgiving
			}
			modifier = { #Traits
				add = -50
				has_trait = just
			}
			modifier = { #Traits
				add = -50
				has_trait = temperate
			}
			modifier = { #Traits
				add = -20
				has_trait = calm
			}
			modifier = { #Traits
				add = -15
				has_trait = shy
			}
			modifier = { #Traits
				add = -15
				has_trait = humble
			}
			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				has_character_flag = flag_yanwan
				add = 15
			}
			
			modifier = { #Intrigue
				add = -20
				intrigue < medium_skill_rating
			}
			modifier = { #Intrigue
				add = -20
				intrigue <= mediocre_skill_rating
			}
			modifier = { #Intrigue
				add = -20
				intrigue <= low_skill_rating
			}
			
			modifier = { #Intrigue
				add = 5
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 10
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 10
				intrigue >= very_high_skill_rating
			}
			modifier = { #Intrigue
				add = 25
				OR = {
					has_focus = intrigue_intimidation_focus
					has_focus = intrigue_skulduggery_focus
					has_focus = intrigue_temptation_focus
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_intrigue_3
					has_trait = education_intrigue_4
				}
			}
			modifier = { #Education
				add = 5
				OR = {
					has_trait = education_intrigue_1
					has_trait = education_intrigue_2
				}
			}
			modifier = { #Spymaster
				has_council_position = councillor_spymaster
				add = 15
			}
			opinion_modifier = {
				who = scope:threatening_consort
				opinion_target = root
				min = -20
				max = 15
				multiplier = 1
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:threatening_consort
				min = -20
				max = 15
				multiplier = -1
			}
		}
	}
	
	#Don't do anything
	option = {
		name = harem_politics.0012.d
		stress_impact = {
			paranoid = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Traits
				add = -50
				has_trait = impatient
			}
			modifier = { #Traits
				add = -50
				has_trait = paranoid
			}
			modifier = { #Traits
				add = 20
				has_trait = temperate
			}
			modifier = { #Traits
				add = 20
				has_trait = calm
			}
			modifier = { #Traits
				add = 15
				has_trait = shy
			}
			modifier = { #Scheming Consorts
				add = -15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				has_character_flag = flag_yanwan
				add = -15
			}
			
			modifier = { #Intrigue
				add = -20
				intrigue < medium_skill_rating
			}
			modifier = { #Intrigue
				add = -20
				intrigue <= mediocre_skill_rating
			}
			modifier = { #Intrigue
				add = -20
				intrigue <= low_skill_rating
			}
			
			modifier = { #Intrigue
				add = 5
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 10
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 10
				intrigue >= very_high_skill_rating
			}
			modifier = { #Intrigue
				add = 25
				OR = {
					has_focus = intrigue_intimidation_focus
					has_focus = intrigue_skulduggery_focus
					has_focus = intrigue_temptation_focus
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_intrigue_3
					has_trait = education_intrigue_4
				}
			}
			modifier = { #Education
				add = 5
				OR = {
					has_trait = education_intrigue_1
					has_trait = education_intrigue_2
				}
			}
			modifier = { #Spymaster
				has_council_position = councillor_spymaster
				add = 15
			}
			opinion_modifier = {
				who = root
				opinion_target = scope:threatening_consort
				min = -20
				max = 20
				multiplier = 1
			}
		}
	}
	
	after = {
		add_character_flag = {
			flag = considered_poisoning_threatening_consort
			years = 5
		}
	}
}