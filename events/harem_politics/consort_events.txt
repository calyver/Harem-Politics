#These are minor events that will only happen among consorts. 
#They're not supposed to happen to the player. The player will be notified of their outcomes.
#If the player is married to a character with more than 1 consort, they might
#have these events

namespace = consort_events

#####################
##Scripted triggers##
#####################
scripted_trigger mei_daying_trigger = {
	is_physically_able_ai_adult = yes
	is_concubine = yes

	harem_politics_evil_consort_trigger = yes
	is_demoted_consort_trigger = no
	harem_politics_punished_consort_trigger = no
	harem_politics_unfavored_consort_trigger = no

	hp_accepts_harems = yes

	age <= 21

	has_character_flag = flag_new_consort
	opinion = {
		target = root
		value <= 10
	}

	exists = court_owner
	court_owner = {
		any_consort = {
			this = root
		}
	}
	NOR = {
		this = root
		has_court_position = grand_consort_court_position
		
		has_trait = pregnant
		has_trait = craven
		has_trait = shy
		has_trait = wounded
		has_trait = ill

		has_relation_best_friend = root
		has_relation_friend = root
		has_relation_lover = root
		has_relation_soulmate = root
		has_hook = root
		has_strong_hook = root

		any_close_or_extended_family_member = {
			is_liege_or_above_of = scope:temporary_partner
		}
	}
	
	OR = { #Mei isn't unfavored
		AND = {
			has_variable = favor
			var:favor >= neutral_consort_lower_limit
		}
		NOT = {
			has_variable = favor
		}
	}
}

scripted_trigger shen_trigger = {
	is_physically_able_ai_adult = yes

	harem_politics_favored_consort_trigger = no

	is_concubine = yes
	exists = court_owner
	court_owner = {
		OR = {
			any_consort = {
				this = root
			}
			any_parent = {
				this = root
			}
		}
	}

	NOR = {
		this = root
		has_court_position = grand_consort_court_position
		has_trait = ill
		has_trait = wounded
		has_trait = pregnant
	}

	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan = {
				travel_plan_owner = $PARTNER$
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = $PARTNER$
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}

	OR = { #Xia can't bully a favored consort
		AND = {
			has_variable = favor
			var:favor < favorite_consort_lower_limit
		}
		NOT = {
			has_variable = favor
		}
	}
}

scripted_trigger xia_changzai_trigger = {
	is_physically_able_ai_adult = yes

	is_concubine = yes

	harem_politics_evil_consort_trigger = yes

	is_demoted_consort_trigger = no
	harem_politics_punished_consort_trigger = no
	harem_politics_unfavored_consort_trigger = no

	hp_accepts_harems = yes

	NOR = { 
		this = root
		this = $TARGET$
		
		has_relation_best_friend = root
		has_relation_friend = root
		has_relation_soulmate = root
		has_relation_lover = root
		
		has_relation_best_friend = $TARGET$
		has_relation_friend = $TARGET$
		has_relation_soulmate = $TARGET$
		has_relation_lover = $TARGET$
		
		has_trait = pregnant

		has_trait = wounded
		has_trait = ill
		
		has_hook = root
		has_strong_hook = root
		
		has_court_position = grand_consort_court_position
		
		has_trait = craven
		has_trait = shy
		has_trait = calm
	}

	opinion = {
		target = $TARGET$
		value <= 10
	}

	exists = court_owner
	court_owner = {
		OR = {
			any_consort = {
				this = root
			}
			any_parent = {
				this = root
			}
		}
	}
	
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = $PARTNER$
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = $PARTNER$
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}

	OR = { #Xia isn't unfavored
		AND = {
			has_variable = favor
			var:favor >= neutral_consort_lower_limit
		}
		NOT = {
			has_variable = favor
		}
	}
}

scripted_trigger valid_partner_trigger = {
	is_landed_or_landless_administrative = yes
	OR = {
		any_courtier = {
			this = root
		}
		any_vassal_or_below = {
			this = root
		}
	}
	is_physically_able_adult = yes
	NOR = { 
		has_character_flag = has_consort_event_flag
		has_character_flag = had_hua_fei_event_flag 
		location = {
			OR = {
				has_province_modifier = winter_harsh_modifier
				has_province_modifier = winter_normal_modifier
			}
		}
	}
	any_consort = {
		is_physically_able_adult = yes
		count >= 3
	}
	save_temporary_scope_as = temporary_partner
	any_concubine = {
		shen_trigger = { PARTNER = scope:temporary_partner }
		save_temporary_scope_as = target_concubine
	}
	any_concubine = {
		xia_changzai_trigger = { TARGET = scope:target_concubine PARTNER = scope:temporary_partner }
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = scope:temporary_partner
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = scope:temporary_partner
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger ranting_consort_trigger = {
	is_physically_able_ai_adult = yes

	harem_politics_evil_consort_trigger = yes
	is_demoted_consort_trigger = no
	harem_politics_punished_consort_trigger = no

	hp_accepts_harems = yes

	is_concubine = yes

	exists = court_owner
	court_owner = {
		any_consort = {
			this = root
		}
	}
	NOR = {
		this = root
		this = $TARGET$
		has_court_position = grand_consort_court_position
		has_trait = pregnant
		has_trait = craven
		has_trait = shy
		has_trait = ill
		has_trait = wounded

		has_relation_best_friend = $TARGET$
		has_relation_friend = $TARGET$
		has_relation_lover = $TARGET$
		has_relation_soulmate = $TARGET$

		has_hook = root
		has_strong_hook = root
	}

	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = $PARTNER$
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = $PARTNER$
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger superior_consort_trigger = {
	is_physically_able_adult = yes
	AND = {
		OR = {
			is_married = yes
			has_court_position = grand_consort_court_position
		}
		OR = {
			AND = {
				is_landed_or_landless_administrative = yes
				any_liege_or_above = { 
					any_consort = { 
						this = root
					}
				}
			}
			AND = {
				exists = court_owner
				court_owner = {
					any_consort = {
						this = root
					}
				}
			}
		}
	}
}

scripted_trigger arrogant_consort_trigger = {
	is_physically_able_ai_adult = yes
	
	harem_politics_evil_consort_trigger = yes
	is_demoted_consort_trigger = no
	harem_politics_punished_consort_trigger = no
	harem_politics_unfavored_consort_trigger = no

	hp_accepts_harems = yes

	is_courtier_of = $PARTNER$
	
	opinion = {
		target = root
		value <= 10
	}
	
	NOR = {
		this = root

		has_trait = craven
		has_trait = shy
		has_trait = ill
		has_trait = wounded
		has_trait = pregnant

		has_relation_best_friend = root
		has_relation_friend = root
		has_relation_lover = root
		has_relation_soulmate = root

		has_hook = root
		has_strong_hook = root
		AND = {
			exists = $PARTNER$.primary_spouse
			this = $PARTNER$.primary_spouse
		}
	}

	OR = { #Correct traits
		has_trait = arrogant
		has_trait = ambitious
		has_trait = greedy
	}

	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = $PARTNER$
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = $PARTNER$
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}

	OR = { #Can't unfavored
		AND = {
			has_variable = favor
			var:favor >= neutral_consort_lower_limit
		}
		NOT = {
			has_variable = favor
		}
	}
}

scripted_trigger yanwan_trigger = {
	has_character_flag = flag_yanwan

	is_physically_able_adult = yes

	is_demoted_consort_trigger = no
	harem_politics_punished_consort_trigger = no
	#Yanwan isn't favored
	harem_politics_favored_consort_trigger = no

	is_courtier_of = $PARTNER$

	NOR = {
		this = root
		
		has_trait = pregnant
		has_trait = ill
		has_trait = wounded
		
		has_character_flag = flag_courted_favor

	}
	OR = { 
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = $PARTNER$
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = $PARTNER$
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}

	OR = { #Can't favored
		AND = {
			has_variable = favor
			var:favor < favorite_consort_lower_limit
		}
		NOT = {
			has_variable = favor
		}
	}
}

scripted_trigger valid_partner_yanwan_trigger = {
	has_character_modifier = mourner_modifier
	
	is_landed_or_landless_administrative = yes

	OR = {
		any_courtier = {
			this = root
		}
		any_vassal_or_below = {
			this = root
		}
	}

	exists = primary_spouse
	primary_spouse = {
		this = root
	}

	is_physically_able_adult = yes
	
	NOR = { 
		has_character_flag = has_consort_event_flag
		has_character_flag = flag_had_yanwan_singing_event 
		location = {
			OR = {
				has_province_modifier = winter_harsh_modifier
				has_province_modifier = winter_normal_modifier
			}
		}
	}
	
	any_consort = {
		is_physically_able_adult = yes
		count >= 3
	}
	save_temporary_scope_as = temporary_partner
	OR = { 
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = scope:temporary_partner
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = scope:temporary_partner
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
	any_consort = {
		yanwan_trigger = { PARTNER = scope:temporary_partner }
	}
}

scripted_trigger eligible_heir_trigger = {
	age >= 9
	is_child_of = $PARTNER$
	OR = {
		AND = {
			is_landed_or_landless_administrative = yes
			any_liege_or_above = { this = $PARTNER$ }
		}
		court_owner ?= {
			this = $PARTNER$
		}
	}
	character_gender_can_rule_title_trigger = {
		GENDER = this
		TITLE = $PARTNER$.primary_title
	}
	NOR = {
		has_trait = eunuch
		has_trait = bastard
		has_trait = devoted
		has_trait = order_member
		has_trait = bastard_founder
		has_trait = disinherited
		has_trait = denounced

		is_primary_heir_of = $PARTNER$
	}
	is_alive = yes
	is_imprisoned = no
	is_incapable = no
}

scripted_trigger threatening_consort_trigger = {
	is_physically_able_ai_adult = yes
	age <= 44
	sex_opposite_of = $PARTNER$
	is_courtier_of = $PARTNER$

	is_demoted_consort_trigger = no
	harem_politics_unfavored_consort_trigger = no
	harem_politics_punished_consort_trigger = no

	OR = {

		harem_politics_favored_consort_trigger = yes

		has_trait = beauty_good_2
		has_trait = beauty_good_3

		AND = {
			exists = $PARTNER$.primary_spouse
			this = $PARTNER$.primary_spouse
		}
		has_court_position = grand_consort_court_position

		any_close_family_member = {
			OR = {
				is_powerful_vassal_of = $PARTNER$
				is_councillor_of = $PARTNER$
				is_parent_of = $PARTNER$
				is_liege_or_above_of = $PARTNER$
				AND = {	
					is_knight_of = $PARTNER$
					is_acclaimed = yes
				}
			}
		}

		has_relation_lover = $PARTNER$
		has_relation_soulmate = $PARTNER$
	}
	
	NOR = {
		this = root

		has_character_modifier = langhua_bracelet_modifier
		has_character_modifier = lingrong_ointment_modifier

		has_opinion_modifier = {
			target = root
			modifier = gifted_me_poison_opinion
		}
		
		has_character_flag = flag_considered_poison_consort

		has_relation_best_friend = root
		has_relation_lover = root
		has_relation_soulmate = root
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = $PARTNER$
			}
			root = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = $PARTNER$
				}
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger threatening_pregnant_consort_trigger = {
	is_consort_of = $PARTNER$
	is_pregnant = yes
	has_trait = pregnant #Because 1-month pregnant characters count as pregnant without showing the signs
	NOR = {
		this = scope:actor
		has_relation_soulmate = scope:actor
		has_relation_lover = scope:actor
	}
	OR = {
		is_courtier_of = $PARTNER$
		any_liege_or_above = {
			this = $PARTNER$
		}
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = $PARTNER$
			}
			scope:actor = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = $PARTNER$
				}
			}
		}
		AND = {
			is_travelling = no
			scope:actor = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger is_valid_harem_authority_trigger = {
	is_physically_able_ai_adult = yes
	is_healthy = yes

	hp_accepts_harems = yes

	harem_politics_punished_consort_trigger = no

	is_valid_harem_member_trigger = {
		LIEGE = root
	}

	NOR = {
		exists = scope:is_being_divorced
		exists = scope:is_being_set_aside
		is_concubine_of = root
		
		has_trait = pregnant
		has_trait = ill
		has_trait = wounded

		has_trait = craven
		has_trait = shy
		has_trait = forgiving
		has_trait = compassionate
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger is_valid_harem_victim_trigger = {
	is_healthy = yes

	harem_politics_punished_consort_trigger = no

	is_physically_able_ai_adult = yes
	
	NOR = {
		this = $CONSORT_AUTHORITY$
		
		AND = {	
			exists = root.primary_spouse
			this = root.primary_spouse
		}
		is_parent_of = root

		exists = scope:is_being_divorced
		exists = scope:is_being_set_aside

		has_trait = pregnant
		has_trait = ill
		has_trait = wounded
		
		has_character_modifier = recently_tortured
		has_character_modifier = hunt_tasted_the_belt_modifier
		has_character_modifier = sleep_deprived_modifier
		has_character_modifier = intrigue_starved_and_deprived_modifier
		
		has_relation_soulmate = $CONSORT_AUTHORITY$
		has_relation_lover = $CONSORT_AUTHORITY$
		
		has_relation_best_friend = $CONSORT_AUTHORITY$
		has_relation_friend = $CONSORT_AUTHORITY$
	}
	harem_politics_is_valid_authority_trigger = {
		AUTHORITY = $CONSORT_AUTHORITY$
		TARGET = this
		LIEGE = root
	}
	trigger_if = {
		limit = {
			root = {
				religion = religion:islam_religion
				OR = {
					primary_spouse ?= $CONSORT_AUTHORITY$
					$CONSORT_AUTHORITY$ = { is_sibling_of = root }
				}
			}
		}
		NOT = {
			is_spouse_of = root
		}
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger is_valid_generic_consort_trigger = {
	OR = {
		is_valid_harem_member_trigger = {
			LIEGE = root
		}
		has_court_position = chief_eunuch_court_position
		has_court_position = lady_in_waiting_court_position
	}
	is_healthy = yes
	is_physically_able_ai_adult = yes
	is_courtier_of = root
	NOR = {
		
		exists = scope:is_being_divorced
		exists = scope:is_being_set_aside
	}
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger target_consort_trigger = {
	is_courtier_of = $PARTNER$

	is_demoted_consort_trigger = no
	harem_politics_unfavored_consort_trigger = no
	harem_politics_punished_consort_trigger = no

	NOR = {
		this = root

		exists = scope:is_being_divorced
		exists = scope:is_being_set_aside

		has_relation_best_friend = root
		has_relation_lover = root
		has_relation_soulmate = root

		has_strong_hook = root
	}
	
	OR = {
		AND = {
			exists = $PARTNER$.primary_spouse
			this = $PARTNER$.primary_spouse
		}
		has_court_position = grand_consort_court_position
		harem_politics_favored_consort_trigger = yes
		AND = {
			root = {
				is_concubine = yes
			}
			is_married = yes
		}
		has_relation_lover = $PARTNER$
		has_relation_soulmate = $PARTNER$
	}

	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_trigger scheming_consort_trigger = {
	is_courtier_of = root
	harem_politics_evil_consort_trigger = yes
	NOR = {
		this = $PREGNANT_CONSORT$
		exists = scope:is_being_divorced
		exists = scope:is_being_set_aside
		
		has_relation_friend = $PREGNANT_CONSORT$
		has_relation_best_friend = $PREGNANT_CONSORT$
		has_relation_lover = $PREGNANT_CONSORT$
		has_relation_soulmate = $PREGNANT_CONSORT$
	}
	opinion = {
		target = $PREGNANT_CONSORT$
		value <= 15
	}
	is_physically_able_adult = yes
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}
####################
##Scripted effects##
####################

##The victim cries to a higher-ranked person about being punished##
scripted_effect begging_punished_consort_effect = {
	if = {
		limit = {
			exists = $AUTHORITY$
			$VICTIM$ ?= {
				is_alive = yes
				OR = {
					has_character_modifier = recently_tortured
					has_character_modifier = hunt_tasted_the_belt_modifier
					has_character_modifier = sleep_deprived_modifier
					has_character_modifier = intrigue_starved_and_deprived_modifier
				}
			}
		}
		random_list = {
			50 = { #The victim whines
				opinion_modifier = { #Opinion
					WHO = $VICTIM$
					opinion_target = $LIEGE$
					min = -20
					max = 20
					multiplier = 0.50
				}
				opinion_modifier = { #Opinion
					WHO = $LIEGE$
					opinion_target = $VICTIM$
					min = -20
					max = 20
					multiplier = 0.50
				}
				modifier = { #Traits
					$VICTIM$ = { has_trait = brave }
					add = 10
				}
				modifier = { #Traits
					$VICTIM$ = { has_trait = vengeful }
					add = 15
				}
				modifier = { #Traits
					$VICTIM$ = { has_trait = callous }
					add = 5
				}
				modifier = { #Traits
					$VICTIM$ = { has_trait = arrogant }
					add = 15
				}
				modifier = { #Traits
					$VICTIM$ = { has_trait = craven }
					add = -20
				}
				modifier = { #Traits
					$VICTIM$ = { has_trait = shy }
					add = -20
				}

				modifier = { #Mei
					$VICTIM$ = { has_character_flag = flag_mei }
					add = 10
				}

				modifier = { #Harem consorts wouldn't see it as worth it
					$VICTIM$ = { 
						hp_accepts_harems = no
					}
					add = -20
				}

				modifier = { #Evil consorts won't take punishment really well
					$VICTIM$ = { harem_politics_evil_consort_trigger = yes }
					add = 10
				}

				modifier = { #Favored consort
					$VICTIM$ = { 
						has_character_modifier = beloved_consort_modifier
					}
					add = 20
				}
				modifier = { #Favored consort
					$VICTIM$ = { 
						has_character_modifier = favor_boost_modifier
					}
					add = 15
				}
				modifier = { #Favored consort
					$VICTIM$ = { 
						has_character_modifier = favored_consort_modifier 
					}
					add = 10
				}

				modifier = { #Unfavored consort
					$VICTIM$ = { 
						has_character_modifier = unfavored_consort_modifier
					}
					add = -10
				}
				modifier = { #Unfavored consort
					$VICTIM$ = { 
						has_character_modifier = forgotten_consort_modifier
					}
					add = -20
				}

				modifier = { #Arrogant consorts won't take disrespect lightly
					$VICTIM$ = { 
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = $LIEGE$
								is_councillor_of = $LIEGE$
								is_close_family_of = $LIEGE$
								is_liege_or_above_of = $LIEGE$
								AND = {
									is_knight_of = $LIEGE$
									is_acclaimed = yes
								}
							}
						}
					}
					add = 10
				}
				modifier = { #Diplomacy
					add = {
						value = $VICTIM$.diplomacy
						multiply = 0.5
					}
				}
				# Harem authorities
				modifier = {
					$AUTHORITY$ = {
						NOT = {
							is_consort_of = $LIEGE$
						}
					}
					add = -15
				}
				modifier = {
					$AUTHORITY$ = {
						NOT = {
							is_consort_of = $LIEGE$
						}
						is_head_of_the_harem_trigger = {
							LIEGE = $LIEGE$
						}

					}
					add = -15
				}

				$VICTIM$ = {
					save_scope_as = beggar
				}
				$AUTHORITY$ = {
					save_scope_as = recipient
				}
				$LIEGE$ = {
					trigger_event = {
						id = harem_politics.0014
						days = 3
					}
				}
			}
			50 = { #Nothing happens
				opinion_modifier = { #Opinion
					WHO = $VICTIM$
					opinion_target = $LIEGE$
					min = -20
					max = 20
					multiplier = -0.50
				}
				opinion_modifier = { #Opinion
					WHO = $LIEGE$
					opinion_target = $VICTIM$
					min = -20
					max = 20
					multiplier = -0.50
				}

				modifier = { #Traits
					$VICTIM$ = { has_trait = content }
					add = 10
				}
				modifier = { #Traits
					$VICTIM$ = { has_trait = humble }
					add = 10
				}
				modifier = { #Traits
					$VICTIM$ = { has_trait = craven }
					add = 15
				}
				modifier = { #Traits
					$VICTIM$ = { has_trait = shy }
					add = 15
				}
				modifier = { #Traits
					$VICTIM$ = { has_trait = forgiving }
					add = 20
				}
				modifier = { #Traits
					$VICTIM$ = { has_trait = compassionate }
					add = 20
				}
				

				modifier = { #$AUTHORITY$ is favored
					$AUTHORITY$ = { 
						has_character_modifier = beloved_consort_modifier 
					}
					add = 20
				}
				modifier = { #$AUTHORITY$ is favored
					$AUTHORITY$ = { 
						has_character_modifier = favor_boost_modifier 
					}
					add = 15
				}
				modifier = { #$AUTHORITY$ is favored
					$AUTHORITY$ = { 
						has_character_modifier = favored_consort_modifier 
					}
					add = 10
				}

				modifier = { #$AUTHORITY$ is unfavored
					$AUTHORITY$ = { 
						has_character_modifier = unfavored_consort_modifier 
					}
					add = -10
				}
				modifier = { #$AUTHORITY$ is unfavored
					$AUTHORITY$ = { 
						has_character_modifier = forgotten_consort_modifier 
					}
					add = -20
				}

				modifier = { #$AUTHORITY$ is influential
					$AUTHORITY$ = { 
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = $LIEGE$
								is_councillor_of = $LIEGE$
								is_close_family_of = $LIEGE$
								is_liege_or_above_of = $LIEGE$
								AND = {
									is_knight_of = $LIEGE$
									is_acclaimed = yes
								}
							}
						}
					}
					add = 15
				}
				# Harem authorities
				modifier = {
					$AUTHORITY$ = {
						NOT = {
							is_consort_of = $LIEGE$
						}
					}
					add = 15
				}
				modifier = {
					$AUTHORITY$ = {
						NOT = {
							is_consort_of = $LIEGE$
						}
						is_head_of_the_harem_trigger = {
							LIEGE = $LIEGE$
						}

					}
					add = 15
				}
			}
		}
	}
}

scripted_effect close_relations_torture_opinion_effect = {
	# If we're a clan this interaction affects unity
	add_clan_unity_interaction_effect = {
		CHARACTER = $EXECUTIONER$ 
		TARGET = $VICTIM$
		VALUE = medium_unity_loss
		DESC = clan_unity_execute.desc
		REVERSE_NON_HOUSE_TARGET = no
	}
	# Victim's family & spouse hates executioner
	every_close_family_member = {
		limit = { 
			AND = {
				NOT = { this = $EXECUTIONER$ } 
				OR = {
					AND = {
						is_spouse_of = $VICTIM$
						opinion = {
							target = $VICTIM$
							value >= 20
						}
					}
					NOT = { is_spouse_of = $VICTIM$ } 
				}
			}
		}
		add_to_temporary_list = victim_family_list
	}
	
	if = {
		limit = {
			any_in_list = {
				list = victim_family_list
				count > 0
			}
		}
		if = {
			limit = {
				$EXECUTIONER$ = {
					has_execute_reason = $VICTIM$
				}
			}
			every_in_list = {
				list = victim_family_list
				custom = all_close_family_and_spouses
				add_opinion = {
					target = $EXECUTIONER$
					modifier = executed_close_family
				}
			}
		}
		else = {
			every_in_list = {
				list = victim_family_list
				custom = all_close_family_and_spouses
				add_opinion = {
					target = $EXECUTIONER$
					modifier = executed_close_family_crime
				}
			}
		}
	}

	# Victim's dynasty hates executioner
	if = {
		limit = {
			exists = dynasty
			exists = $EXECUTIONER$.dynasty
			NOT = { dynasty = $EXECUTIONER$.dynasty }
			NOT = {
				$EXECUTIONER$ = {
					has_execute_reason = $VICTIM$
				}
			}
		}
		dynasty = {
			every_dynasty_member = {
				limit = {
					AND = {
						NOR = {
							this = $VICTIM$
							is_in_list = victim_family_list
						}
						OR = {
							AND = {
								is_spouse_of = $VICTIM$
								opinion = {
									target = $VICTIM$
									value >= 20
								}
							}
							NOT = { is_spouse_of = $VICTIM$ } 
						}
					}
				}
				custom = all_dynasty_members
				add_to_temporary_list = victim_dynasty_list
				add_opinion = {
					target = $EXECUTIONER$
					modifier = executed_dynasty_member
				}
			}
		}
	}
	
	# Victim's friends and lovers
	every_relation = {
		type = friend
		limit = {
			NOR = {
				this = $VICTIM$
				is_in_list = victim_family_list
				is_in_list = victim_dynasty_list
			}
		}
		add_to_list = victim_close_relations_list
	}
	every_relation = {
		type = lover
		limit = {
			NOR = {
				this = $VICTIM$
				is_in_list = victim_family_list
				is_in_list = victim_dynasty_list
				is_in_list = victim_close_relations_list
			}
		}
		add_to_list = victim_close_relations_list
	}
	if = {
		limit = {
			any_in_list = {
				list = victim_close_relations_list
				always = yes
			}
		}
		every_in_list = {
			list = victim_close_relations_list
			custom = all_friends_and_lovers
			add_opinion = {
				target = $EXECUTIONER$
				modifier = executed_close_relation_opinion
			}
		}
	}
}

scripted_effect mild_close_relations_torture_opinion_effect = {
	# Victim's family & spouse hates executioner
	every_close_family_member = {
		limit = { 
			AND = {
				NOT = { this = $EXECUTIONER$ } 
				OR = {
					AND = {
						is_spouse_of = $VICTIM$
						opinion = {
							target = $VICTIM$
							value >= 20
						}
					}
					NOT = { is_spouse_of = $VICTIM$ } 
				}
			}
		}
		add_to_temporary_list = victim_family_list
	}
	
	if = {
		limit = {
			any_in_list = {
				list = victim_family_list
				count > 0
			}
		}
		show_as_tooltip = {
			every_in_list = {
				list = victim_family_list
				custom = all_close_family_and_spouses
				add_opinion = {
					target = $EXECUTIONER$
					modifier = cruelty_opinion
					opinion = -15
				}
			}
		}
		hidden_effect = {
			every_in_list = {
				list = victim_family_list
				limit = { NOT = { is_spouse_of = $VICTIM$ } }
				send_interface_toast = {
					type = event_generic_bad
					title = punished_relative_t
					right_icon = scope:secondary_recipient
					left_icon = scope:authority
					custom_tooltip = punished_consort_severe_desc
					add_opinion = {
						target = $EXECUTIONER$
						modifier = cruelty_opinion
						opinion = -15
					}
				}
			}
		}
	}
	
	# Victim's friends and lovers
	every_relation = {
		type = friend
		limit = {
			NOR = {
				any_consort = {
					this = $VICTIM$
				}
				this = $VICTIM$
				is_in_list = victim_family_list
			}
		}
		add_to_list = victim_close_relations_list
	}
	every_relation = {
		type = lover
		limit = {
			NOR = {
				any_consort = {
					this = $VICTIM$
				}
				this = $VICTIM$
				is_in_list = victim_family_list
				is_in_list = victim_close_relations_list
			}
		}
		add_to_list = victim_close_relations_list
	}
	if = {
		limit = {
			any_in_list = {
				list = victim_close_relations_list
				always = yes
			}
		}
		show_as_tooltip = {
			every_in_list = {
			list = victim_close_relations_list
			custom = all_friends_and_lovers
				add_opinion = {
					target = $EXECUTIONER$
					modifier = cruelty_opinion
					opinion = -10
				}
			}
		}
		hidden_effect = {
			every_in_list = {
				list = victim_close_relations_list
				send_interface_toast = {
					type = event_generic_bad
					title = punished_acquaintance_t
					right_icon = scope:secondary_recipient
					left_icon = scope:authority
					custom_tooltip = punished_consort_severe_desc
					add_opinion = {
						target = $EXECUTIONER$
						modifier = cruelty_opinion
						opinion = -10
					}
				}
			}
		}
	}
}

scripted_effect partner_consorts_opinion_effect = {
	show_as_tooltip = {
		if = {
			limit = {
				AND = {
					OR = {
						has_relation_best_friend = scope:valid_target_consort
						has_relation_friend = scope:valid_target_consort
						has_relation_lover = scope:valid_target_consort
						has_relation_soulmate = scope:valid_target_consort
						opinion = {
							target = scope:valid_target_consort
							value >= 20
						}
						has_trait = forgiving
						has_trait = compassionate
					}
					NOT = {
						any_close_family_member = {
							this = scope:valid_target_consort
						}
					}
				}
			}
			add_opinion = {
				target = scope:authority
				modifier = cruelty_opinion
				opinion = -20
			}
		}
	}
	hidden_effect = {
		send_interface_toast = {
			type = event_generic_bad
			title = punished_consort_t
			right_icon = scope:secondary_recipient
			left_icon = scope:authority
			custom_tooltip = punished_consort_severe_desc
			if = {
				limit = {
					AND = {
						OR = {
							has_relation_best_friend = scope:valid_target_consort
							has_relation_friend = scope:valid_target_consort
							has_relation_lover = scope:valid_target_consort
							has_relation_soulmate = scope:valid_target_consort
							opinion = {
								target = scope:valid_target_consort
								value >= 20
							}
							has_trait = forgiving
							has_trait = compassionate
						}
						NOT = {
							any_close_family_member = {
								this = scope:valid_target_consort
							}
						}
					}
				}
				add_opinion = {
					target = scope:authority
					modifier = cruelty_opinion
					opinion = -20
				}
			}
		}
		every_consort = {
			limit = {
				NOR = {
					this = scope:valid_target_consort
					this = scope:authority
				}
			}
			send_interface_toast = {
				type = event_generic_bad
				title = punished_consort_t
				right_icon = scope:secondary_recipient
				left_icon = scope:authority
				custom_tooltip = punished_consort_severe_desc
				if = {
					limit = {
						AND = {
							NOR = {
								any_close_family_member = {
									this = scope:valid_target_consort
								}
								has_relation_rival = scope:valid_target_consort
								has_relation_soulmate = scope:valid_target_consort
							}
							OR = {
								is_concubine = yes
								AND = {
									is_married = yes
									scope:valid_target_consort = {
										is_married = yes
									}
									NOT = {
										this = scope:partner.primary_spouse
									}
								}
							}
						}
					}
					stress_impact = {
						base = minor_stress_impact_gain
					}
					add_opinion = {
						target = scope:authority
						modifier = cruelty_opinion
						opinion = -20
					}
				}
				if = {
					limit = {
						AND = {
							NOT = {
								any_close_family_member = {
									this = scope:valid_target_consort
								}
							}
							OR = {
								has_relation_rival = scope:valid_target_consort
								has_relation_soulmate = scope:valid_target_consort
							}
						}
					}
					stress_impact = {
						base = minor_stress_impact_loss
					}
				}
			}
		}
	}
}

scripted_effect consort_torture_effect = {
	stress_impact = {
		temperate = minor_stress_impact_gain
		calm = minor_stress_impact_gain

		sadistic = medium_stress_impact_loss
		callous = medium_stress_impact_loss
	}
	
	add_dread = medium_dread_gain
	
	#Original torture effects
	scope:valid_target_consort = {
		worsening_relationship_consort_effect = yes
		add_character_flag = {
			flag = is_being_tortured
			months = 6 # Players in MP can keep the event window open...
		}
		save_scope_as = recipient
		save_scope_as = secondary_recipient
		scope:partner = {
			partner_consorts_opinion_effect = yes
		}
		#Wounds
		if = {
			limit = {
				NOT = {
					has_trait = wounded
				}
			}
			random = {
				chance = 100
				random_list = {
					95 = {
						modifier = { #Weak
							add = 10
							has_trait = physique_bad_1							
						}
						modifier = { #Weak
							add = 15
							has_trait = physique_bad_2							
						}
						modifier = { #Weak
							add = 20
							has_trait = physique_bad_3							
						}
						modifier = { #Weak
							add = 10
							has_trait = bleeder							
						}
						#Effect
						add_trait = wounded_1
					}
					
					95 = {
						modifier = { #Strong
							add = 10
							has_trait = physique_good_1 							
						}
						modifier = { #Strong
							add = 15
							has_trait = physique_good_2							
						}
						modifier = { #Strong
							add = 20
							has_trait = physique_good_3							
						}
						modifier = { #Strong
							add = 10
							has_trait = strong						
						}
					}
					10 = {
						modifier = { #Weak
							add = 13
							has_trait = physique_bad_1							
						}
						modifier = { #Weak
							add = 23
							has_trait = physique_bad_2							
						}
						modifier = { #Weak
							add = 33
							has_trait = physique_bad_3							
						}
						modifier = { #Weak
							add = 10
							has_trait = bleeder							
						}
						#Effect
						death = {
							death_reason = death_punishment
							killer = scope:authority
						}
						hidden_effect = {
							close_relations_torture_opinion_effect = { VICTIM = scope:valid_target_consort EXECUTIONER = scope:authority }
						}
					}
				}
			}
		}
		if = {
			limit = {
				is_alive = yes
			}
			scope:authority = {
				save_scope_as = actor
				###EFFECT TOOLTIP###
				torture_interaction_actor_effect = yes
				show_as_tooltip = {
					scope:recipient = {
						add_character_modifier = {
							modifier = recently_tortured
							years = 5
						}
					}
				}

				###EVENTS###
				hidden_effect = {
					#Torture method for descs
					random_list = {
						3 = { save_scope_value_as = { name = torture_method value = flag:rack } }
						3 = { save_scope_value_as = { name = torture_method value = flag:whip } }
						1 = { save_scope_value_as = { name = torture_method value = flag:rats } }
						8 = {
							trigger = {
								scope:actor = { has_trait = poet }
							}
							save_scope_value_as = {
								name = torture_method
								value = flag:poetry
							}
						}
					}

					#They have a secret I want to know about
					if = {
						limit = {
							scope:recipient = {	
								OR = {
									any_secret = {
										torture_secret_trigger = { PARTICIPANT = scope:recipient }
									}
									any_known_secret = {
										secret_owner = { save_temporary_scope_as = torture_secret_owner }
										torture_secret_trigger = { PARTICIPANT = scope:torture_secret_owner }
									}
								}
							}
						}
						scope:recipient = {
							trigger_event = {
								id = prison_c.1001
								days = 1
							}
						}
					}
					else = {
						scope:actor = {
							trigger_event = {
								id = prison_c.1010
								days = 1
							}
						}
					}	
				}

				# Dark Insights Perk:
				if = {
					limit = {
						scope:actor = { has_perk = dark_insights_perk }
					}
					scope:actor = {
						dark_insights_skill_gain_roll_effect = yes
					}
				}
			}
		}
		clear_saved_scope = recipient
		clear_saved_scope = actor
	}
	
	hidden_effect = {
		scope:authority = {
			add_opinion = {
				target = scope:valid_target_consort
				modifier = insolent_consort_opinion
				opinion = -10
			}
		}
	}
}

scripted_effect sleep_deprieved_starved_effect = {
	stress_impact = {
		compassionate = minor_stress_impact_gain
		forgiving = minor_stress_impact_gain
		calm = minor_stress_impact_gain
		temperate = minor_stress_impact_gain
		callous = minor_stress_impact_loss
		vengeful = minor_stress_impact_loss
		sadistic = minor_stress_impact_loss
	}
	
	add_dread = medium_dread_gain
	
	scope:valid_target_consort = {
		worsening_relationship_consort_effect = yes
		save_scope_as = secondary_recipient
		add_character_modifier = {
			modifier = intrigue_starved_and_deprived_modifier
			years = 2
		}
		add_opinion = {
			target = scope:authority
			modifier = cruelty_opinion
			opinion = -60
		}
		mild_close_relations_torture_opinion_effect = { VICTIM = scope:valid_target_consort EXECUTIONER = scope:authority }
	}
	
	scope:partner = {
		partner_consorts_opinion_effect = yes
	}
	hidden_effect = {
		scope:authority = {
			add_opinion = {
				target = scope:valid_target_consort
				modifier = insolent_consort_opinion
				opinion = -10
			}
		}
	}
}

scripted_effect high_punishment_effect = {
	stress_impact = {
		compassionate = miniscule_stress_impact_gain
		forgiving = miniscule_stress_impact_gain
		calm = miniscule_stress_impact_gain
	}
	
	add_dread = minor_dread_gain
	
	scope:valid_target_consort = {
		worsening_relationship_consort_effect = yes
		add_character_modifier = {
			modifier = hunt_tasted_the_belt_modifier
			years = 2
		}
		add_opinion = {
			target = scope:authority
			modifier = cruelty_opinion
			opinion = -15
		}
		save_scope_as = secondary_recipient
	}
	
	scope:partner = {
		hidden_effect = {
			send_interface_toast = {
				type = event_generic_bad
				title = punished_consort_t
				right_icon = scope:secondary_recipient
				left_icon = scope:authority
				custom_tooltip = punished_consort_desc
			}
			every_consort = {
				limit = {
					NOR = {
						this = scope:valid_target_consort
						this = scope:authority
					}
				}
				send_interface_toast = {
					type = event_generic_bad
					title = punished_consort_t
					right_icon = scope:secondary_recipient
					left_icon = scope:authority
					custom_tooltip = punished_consort_desc
				}
			}
		}
	}
	hidden_effect = {
		scope:authority = {
			add_opinion = {
				target = scope:valid_target_consort
				modifier = insolent_consort_opinion
				opinion = -10
			}
		}
	}
}

scripted_effect moderate_punishment = {
	stress_impact = {
		compassionate = miniscule_stress_impact_gain
		forgiving = miniscule_stress_impact_gain
		calm = miniscule_stress_impact_gain
	}
	
	add_dread = minor_dread_gain
	
	scope:valid_target_consort = {
		worsening_relationship_consort_effect = yes
		add_character_modifier = {
			modifier = sleep_deprived_modifier
			years = 2
		}
		add_opinion = {
			target = scope:authority
			modifier = cruelty_opinion
			opinion = -15
		}
		save_scope_as = secondary_recipient
	}
	
	scope:partner = {
		hidden_effect = {
			send_interface_toast = {
				type = event_generic_bad
				title = punished_consort_t
				right_icon = scope:secondary_recipient
				left_icon = scope:authority
				custom_tooltip = punished_consort_desc
			}
			every_consort = {
				limit = {
					NOR = {
						this = scope:valid_target_consort
						this = scope:authority
					}
				}
				send_interface_toast = {
					type = event_generic_bad
					title = punished_consort_t
					right_icon = scope:secondary_recipient
					left_icon = scope:authority
					custom_tooltip = punished_consort_desc
				}
				
			}
		}				
	}
	hidden_effect = {
		scope:authority = {
			add_opinion = {
				target = scope:valid_target_consort
				modifier = insolent_consort_opinion
				opinion = -10
			}
		}
	}
}

scripted_effect scolding_punishment = {
	stress_impact = {
		sadistic = minor_stress_impact_gain
		callous = minor_stress_impact_gain
		vengeful = minor_stress_impact_gain
	}
	scope:valid_target_consort = {
		add_opinion = {
			target = scope:authority
			modifier = scolded_me_opinion
			opinion = -5
		}
		add_character_flag = {
			flag = flag_scolded_consort
			years = 1
		}
	}
	hidden_effect = {
		scope:authority = {
			add_opinion = {
				target = scope:valid_target_consort
				modifier = insolent_consort_opinion
				opinion = -5
			}
		}
	}
}

scripted_effect worsening_relationship_consort_effect = {
	if = {
		limit = {
			can_set_relation_rival_trigger = { CHARACTER = scope:authority }
		}
		progress_towards_rival_effect = {
			REASON = consort_rival_reason
			CHARACTER = scope:authority
			OPINION = 0
		}
	}
}


##################################
##The Noble Consort punishes Mei##
##################################
consort_events.0001 = {
	type = character_event
	title = consort_events.0001.t
	desc = consort_events.0001.desc
	theme = family
	override_background = {
		reference = garden
	}
	
	left_portrait = { 	
		character = scope:valid_target_consort
		animation = schadenfreude
	}
	right_portrait = { 	
		character = root
		animation = rage
	}
	
	trigger = {
		age >= 27
		OR = {
			has_court_position = grand_consort_court_position
			is_married = yes
		}
		any_consort = {
			NOR = { 
				has_character_flag = had_mei_event_flag 
				has_character_flag = has_consort_event_flag 
			}
			is_physically_able_adult = yes
			any_consort = {
				is_physically_able_adult = yes
				count >= 3
			}
			save_temporary_scope_as = temporary_partner
			any_concubine = {
				mei_daying_trigger = yes
				OR = {
					AND = {
						is_travelling = yes
						current_travel_plan ={
							travel_plan_owner = scope:temporary_partner
						}
						root = {
							is_travelling = yes
							current_travel_plan ={
								travel_plan_owner = scope:temporary_partner
							}
						}
					}
					AND = {
						is_travelling = no
						root = {
							is_travelling = no
						}
					}
				}
			}
		}
		OR = {
			AND = {
				is_landed_or_landless_administrative = yes
				any_liege_or_above = { 
					this = scope:temporary_partner
				}
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
					is_landed_or_landless_administrative = yes
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
		}
		is_physically_able_adult = yes
		hp_accepts_harems = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = -0.1
			has_trait = shy
		}
		modifier = {
			add = -0.1
			has_trait = craven
		}
		modifier = {
			add = 0.2
			has_character_modifier = beloved_consort_modifier
		}
		modifier = {
			add = 0.2
			harem_politics_favored_consort_trigger = yes
		}
		modifier = {
			add = -0.2
			has_character_modifier = unfavored_consort_modifier
		}
		modifier = {
			add = -0.3
			has_character_modifier = forgotten_consort_modifier
		}
		modifier = {
			add = 0.1
			age >= 30
		}
		modifier = {
			add = 0.1
			age >= 40
		}
		#High aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 3
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.25
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 4
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.3
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 5
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.3
		}
		#Low aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position <= 2
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.25
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 1
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.35
		}
	}

	immediate = {
		random_consort = {
			limit = {
				AND = {
					NOR = { 
						has_character_flag = had_mei_event_flag 
						has_character_flag = has_consort_event_flag 
					}
					is_physically_able_adult = yes
					any_consort = {
						is_physically_able_adult = yes
						count >= 2
					}
					save_temporary_scope_as = temporary_partner
					any_concubine = {
						mei_daying_trigger = yes
						OR = {
							AND = {
								is_travelling = yes
								current_travel_plan ={
									travel_plan_owner = scope:temporary_partner
								}
								root = {
									is_travelling = yes
									current_travel_plan ={
										travel_plan_owner = scope:temporary_partner
									}
								}
							}
							AND = {
								is_travelling = no
								root = {
									is_travelling = no
								}
							}
						}
					}
				}
			}
			save_scope_as = partner
		}
		scope:partner = {
			add_character_flag = {
				flag = has_consort_event_flag
				months = 5
			}
			every_concubine = {
				limit = {
					AND = {
						mei_daying_trigger = yes
						OR = {
							AND = {
								is_travelling = yes
								current_travel_plan ={
									travel_plan_owner = scope:partner
								}
								root = {
									is_travelling = yes
									current_travel_plan ={
										travel_plan_owner = scope:partner
									}
								}
							}
							AND = {
								is_travelling = no
								root = {
									is_travelling = no
								}
							}
						}
					}
				}
				add_to_list = mei_list 
			}
			random_in_list = {
				list = mei_list
				weight = {
					base = 10
					modifier = {
						has_character_flag = flag_mei
						add = 250
					}
					modifier = {
						has_trait = arrogant
						add = 20
					}
					modifier = {
						has_trait = ambitious
						add = 10
					}
					modifier = {
						has_trait = brave
						add = 10
					}

					modifier = {
						opinion = {
							target = root
							value <= low_negative_opinion
						}
						add = 20
					}

					modifier = {
						is_lowborn = yes
						add = 20
					}
					modifier = {
						NOT = {
							any_close_or_extended_family_member = {
								OR = {
									this = scope:partner.primary_spouse
									is_powerful_vassal_of = scope:partner
									is_councillor_of = scope:partner
									is_parent_of = scope:partner
									this = scope:partner
								}
							}
						}
						add = 10
					}

					modifier = { #Favor
						has_character_modifier = beloved_consort_modifier
						add = 40
					}
					modifier = { #Favor
						has_character_modifier = favor_boost_modifier
						add = 30
					}
					modifier = {
						has_character_modifier = favored_consort_modifier
						add = 20
					}

					modifier = { #Naive
						age <= 19
						add = 10
					}

					modifier = { #Relation
						has_relation_potential_rival = root
						add = 10
					}
					modifier = { #Relation
						has_relation_rival = root
						add = 20
					}
					modifier = { #Relation
						has_relation_nemesis = root
						add = 30
					}
				}
				save_scope_as = valid_target_consort
			}
		}
		save_scope_as = authority

		#Mei became favored
		scope:valid_target_consort = {
			calyver_favor_moderate_gain_effect = yes
		}
	}
	
	#Torture Mei
	option = {
		name = consort_events.0001.a
		flavor = consort_events.0001.a_tt
		trait = callous
		trait = vengeful
		trait = sadistic
		trigger = {
			OR = {
				has_trait = callous
				has_trait = vengeful
				has_trait = sadistic
				has_relation_rival = scope:valid_target_consort
				has_relation_nemesis = scope:valid_target_consort
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
			}
		}
		
		consort_torture_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.25
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 20
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = temperate
				add = -15
			}
			modifier = { #Stress management
				has_trait = calm
				add = -15
			}

			modifier = { #Stress management
				has_trait = callous
				add = 25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = 25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = 25
			}

			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					NOT = {
						any_close_or_extended_family_member = {
							OR = {
								this = scope:partner.primary_spouse
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								this = scope:partner
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -15
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #The Primary Spouse
				exists = scope:partner.primary_spouse
				this = scope:partner.primary_spouse
				add = 10
			}
			modifier = { #The Grand Consort
				has_court_position = grand_consort_court_position
				add = 5
			}
			modifier = { #Is married
				is_married = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -10
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = 20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = 15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = 10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = -20
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -20
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				factor = 0
			}
		}
	}
	
	#Discipline Mei
	option = {
		name = consort_events.0001.b
		
		high_punishment_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.25
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -5
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 20
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = temperate
				add = -10
			}
			modifier = { #Stress management
				has_trait = calm
				add = -20
			}

			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						this = scope:partner
					}
				}
				add = 30
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					NOT = {
						any_close_or_extended_family_member = {
							OR = {
								this = scope:partner.primary_spouse
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								this = scope:partner
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -10
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #The Primary Spouse
				exists = scope:partner.primary_spouse
				this = scope:partner.primary_spouse
				add = 10
			}
			modifier = { #The Grand Consort
				has_court_position = grand_consort_court_position
				add = 5
			}
			modifier = { #Is married
				is_married = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = 20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = 15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = 10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = -15
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -15
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = -25
			}
		}
	}
	
	#Lecture them
	option = {
		name = consort_events.0001.c
		
		scolding_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.10
				ai_honor = 0.10
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = -5
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -15
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -15
			}
			modifier = { #Stress management
				has_trait = temperate
				add = 5
			}
			modifier = { #Stress management
				has_trait = calm
				add = 5
			}

			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = -25
			}

			modifier = { #More if root is not powerful
				NOT = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 5
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 10
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Is concubine
				is_concubine = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = -15
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = -5
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = 15
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -5
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = -10
			}
		}
	}
	
	#Ignore them
	option = {
		name = consort_events.0001.d
		stress_impact = {
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.15
				ai_honor = -0.25
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = 15
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = 15
			}
			modifier = { #Stress management
				has_trait = calm
				add = 5
			}

			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = -25
			}

			modifier = { #More if root is not powerful
				NOT = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 5
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Is concubine
				is_concubine = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = -20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = -15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = -10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = 20
			}
			
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = 15
			}
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = favor_boost_modifier
				}
				add = 5
			}
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = favored_consort_modifier
				}
				add = 5
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = 5
			}
		}
	}
	
	after = {
		scope:partner = {
			add_character_flag = {
				flag = had_mei_event_flag
				years = 5
			}
		}
		begging_punished_consort_effect = { 
			VICTIM = scope:valid_target_consort
			LIEGE = scope:partner 
			AUTHORITY = scope:authority
		}
	}
}

############################
##Consort Hua tortures Xia##
############################

####Error suppression - Hua Fei tortures Xia####
consort_events.1002 = {
	hidden = yes
	
	trigger = {
		OR = {
			AND = {
				OR = {
					has_court_position = grand_consort_court_position
					is_married = yes
				}
				any_consort = {
					valid_partner_trigger = yes
				}
			}
			any_child = {
				valid_partner_trigger = yes
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
		}
		is_physically_able_adult = yes
		hp_accepts_harems = yes
	}
	weight_multiplier = {
		base = 1
		#High aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 3
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.25
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 4
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.3
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 5
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.3
		}
		#Low aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position <= 2
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.25
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 1
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.35
		}
	}
	
	immediate = {
		if = {
			limit = {
				any_consort = {	
					valid_partner_trigger = yes
				}
			}
			random_consort = {
				limit = {
					valid_partner_trigger = yes
				}
				save_scope_as = partner
			}
		}
		else_if = {
			limit = {
				any_child = {	
					valid_partner_trigger = yes
				}
			}
			random_child = {
				limit = {
					valid_partner_trigger = yes
				}
				save_scope_as = partner
			}
		}
		if = {
			limit = {
				exists = scope:partner
			}
			scope:partner = {
				random_consort = {
					limit = {
						shen_trigger = { PARTNER = scope:partner }
					}
					weight = {
						base = 10
						modifier = {
							has_character_flag = flag_new_consort
							add = 20
						}
						modifier = {
							has_character_modifier = unfavored_consort_modifier
							add = 10
						}
						modifier = {
							has_character_modifier = forgotten_consort_modifier
							add = 20
						}
					}
					save_scope_as = shen 
				}
				if = {
					limit = {
						exists = scope:shen
					}
					every_consort = {
						limit = {
							xia_changzai_trigger = { TARGET = scope:shen PARTNER = scope:partner }
						}
						add_to_list = xia_changzai_list
					}
					random_in_list = {
						list = xia_changzai_list
						weight = {
							base = 10
							modifier = {
								has_trait = arrogant
								add = 20
							}
							modifier = {
								has_trait = ambitious
								add = 15
							}
							modifier = {
								has_character_flag = flag_new_consort
								add = 20
							}
							modifier = {
								has_character_modifier = beloved_consort_modifier
								add = 20
							}
							modifier = {
								has_character_modifier = favor_boost_modifier
								add = 15
							}
							modifier = {
								has_character_modifier = favored_consort_modifier
								add = 10
							}
						}
						save_scope_as = valid_target_consort
					}
				}
				if = {
					limit = {
						exists = scope:shen
						exists = scope:valid_target_consort
					}
					add_character_flag = {
						flag = has_consort_event_flag
						months = 5
					}
					root = {
						save_scope_as = authority
						trigger_event = consort_events.0002
					}
				}
			}
		}
	}
}

consort_events.0002 = {
	type = character_event
	title = consort_events.0002.t
	desc = consort_events.0002.desc
	theme = family
	override_background = {
		reference = garden
	}
	
	left_portrait = { 	
		character = scope:valid_target_consort
		animation = rage
	}
	right_portrait = { 	
		character = scope:shen
		animation = disgust
	}
	
	trigger = {
		exists = scope:shen
		exists = scope:valid_target_consort
		any_consort = {
			this = scope:partner
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOT = { exists = scope:authority }
			}
			save_scope_as = authority
		}
		scope:shen = {
			if = {
				limit = { 
					NOR = { 
						has_relation_rival = scope:valid_target_consort
						has_relation_nemesis = scope:valid_target_consort
						has_relation_potential_rival = scope:valid_target_consort
					} 
				}
				set_relation_potential_rival = scope:valid_target_consort
			}
			add_opinion = {
				target = scope:valid_target_consort
				modifier = hatred_spouse_opinion
			}
		}
		scope:valid_target_consort = {
			add_opinion = {
				target = scope:shen
				modifier = hatred_spouse_opinion
			}
		}
	}
	
	#Investigate the matter
	option = {
		name = consort_events.0002.a
		flavor = consort_events.0002.a_tt
		hidden_effect = {
			trigger_event = consort_events.0003
		}
		stress_impact = {
			lazy = minor_stress_impact_gain
			craven = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_sociability = 1
				ai_energy = 0.5
			}
			modifier = { #Stress management
				has_trait = lazy
				add = -25
			}
			modifier = { #Stress management
				has_trait = craven
				add = -25
			}
			modifier = { #Stress management
				has_trait = shy
				add = -25
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = 20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = 15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = 10
			}
		}
	}
	
	#Ignore them
	option = {
		name = consort_events.0002.b
		stress_impact = {
			diligent = minor_stress_impact_gain
			just = minor_stress_impact_gain
			lazy = minor_stress_impact_loss
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_sociability = -1
				ai_energy = -0.5
			}
			modifier = { #Stress management
				has_trait = diligent
				add = -25
			}
			modifier = { #Stress management
				has_trait = just
				add = -25
			}
			modifier = { #Stress management
				has_trait = lazy
				add = 25
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = 20
			}
		}
	}
}

consort_events.0003 = {
	type = character_event
	title = consort_events.0002.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					any_child = {
						this = scope:partner
					}
				}
				desc = consort_events.0003.parent.desc
			}
			triggered_desc = {
				trigger = {
					any_consort = {
						this = scope:partner
					}
				}
				desc = consort_events.0003.consort.desc
			}
		}
		desc = consort_events.0003.end.desc
	}
	theme = family
	override_background = {
		reference = garden
	}
	
	left_portrait = { 	
		character = scope:valid_target_consort
		animation = beg
	}
	
	right_portrait = { 	
		character = root
		animation = eyeroll
	}
	
	lower_center_portrait = { 	
		character = scope:shen
	}
	
	trigger = {
		exists = scope:shen
		exists = scope:valid_target_consort
	}
	
	#Torture Xia
	option = {
		name = consort_events.0001.a
		flavor = consort_events.0001.a_tt
		trait = callous
		trait = vengeful
		trait = sadistic
		trigger = {
			OR = {
				has_trait = callous
				has_trait = vengeful
				has_trait = sadistic
				has_relation_rival = scope:valid_target_consort
				has_relation_nemesis = scope:valid_target_consort
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
			}
		}
		
		consort_torture_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.25
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 20
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}
			modifier = { #More if high Shen opinion
				opinion = {
					target = scope:shen
					value >= 10
				}
				add = 10
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = temperate
				add = -15
			}
			modifier = { #Stress management
				has_trait = calm
				add = -15
			}

			modifier = { #Stress management
				has_trait = callous
				add = 25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = 25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = 25
			}

			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					NOT = {
						any_close_or_extended_family_member = {
							OR = {
								this = scope:partner.primary_spouse
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								this = scope:partner
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -15
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #The Primary Spouse
				exists = scope:partner.primary_spouse
				this = scope:partner.primary_spouse
				add = 10
			}
			modifier = { #The Grand Consort
				has_court_position = grand_consort_court_position
				add = 5
			}
			modifier = { #Is married
				is_married = yes
				add = 5
			}
			

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = 20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = 15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = 10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = -20
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -20
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				factor = 0
			}
		}
	}
	
	#Discipline Xia
	option = {
		name = consort_events.0001.b
		
		high_punishment_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.25
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -5
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 20
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}
			modifier = { #More if high Shen opinion
				opinion = {
					target = scope:shen
					value >= 10
				}
				add = 10
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = temperate
				add = -10
			}
			modifier = { #Stress management
				has_trait = calm
				add = -20
			}

			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						this = scope:partner
					}
				}
				add = 30
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					NOT = {
						any_close_or_extended_family_member = {
							OR = {
								this = scope:partner.primary_spouse
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								this = scope:partner
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -10
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #The Primary Spouse
				exists = scope:partner.primary_spouse
				this = scope:partner.primary_spouse
				add = 10
			}
			modifier = { #The Grand Consort
				has_court_position = grand_consort_court_position
				add = 5
			}
			modifier = { #Is married
				is_married = yes
				add = 5
			}
			

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = 20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = 15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = 10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = -15
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -15
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = -25
			}
		}
	}
	
	#Lecture them
	option = {
		name = consort_events.0001.c
		
		scolding_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.10
				ai_honor = 0.10
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value >= 0
				}
				add = 5
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value >= 10
				}
				add = 5
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -15
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -15
			}
			modifier = { #Stress management
				has_trait = temperate
				add = 5
			}
			modifier = { #Stress management
				has_trait = calm
				add = 5
			}

			modifier = { #More if root is not powerful
				NOT = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 5
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 10
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Is concubine
				is_concubine = yes
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = -15
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = -5
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = 15
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -5
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = -10
			}
		}
	}
	
	#Ignore them
	option = {
		name = consort_events.0001.d
		add_hook = {
			target = scope:valid_target_consort
			type = indebted_hook
		}
		scope:shen = {
			add_opinion = {
				target = root
				modifier = ignored_consort_opinion
				opinion = -10
			}
		}
		stress_impact = {
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			diligent = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.15
				ai_honor = -0.25
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = 15
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = 15
			}
			modifier = { #Stress management
				has_trait = calm
				add = 5
			}

			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = -25
			}
			modifier = { #Stress management
				has_trait = diligent
				add = -25
			}

			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value >= 0
				}
				add = 5
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value >= 10
				}
				add = 5
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:shen
					value <= 0
				}
				add = 5
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:shen
					value <= -10
				}
				add = 5
			}

			modifier = { #More if root is not powerful
				NOT = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 5
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Is concubine
				is_concubine = yes
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = -20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = -15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = -10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = 20
			}
			
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = 15
			}
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = favor_boost_modifier
				}
				add = 5
			}
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = favored_consort_modifier
				}
				add = 5
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = 5
			}
		}
	}

	after = {
		scope:partner = {
			add_character_flag = {
				flag = had_hua_fei_event_flag
				years = 2
			}
		}
		begging_punished_consort_effect = { 
			VICTIM = scope:valid_target_consort
			LIEGE = scope:partner 
			AUTHORITY = scope:authority
		}
	}
}

####################################
##A consort talks about a superior##
####################################

consort_events.0004 = {
	type = character_event
	title = consort_events.0002.t
	desc = consort_events.0004.desc
	theme = family
	override_background = {
		reference = garden
	}
	
	left_portrait = { 	
		character = scope:valid_target_consort
		animation = rage
	}
	right_portrait = { 	
		character = root
		animation = eavesdrop
	}
	
	trigger = {
		OR = {
			is_married = yes
			has_court_position = grand_consort_court_position
		}
		any_consort = {
			NOR = { 
				has_character_flag = ranting_consort_event 
				has_character_flag = has_consort_event_flag  
			}
			any_consort = {
				count >= 3
			}
			is_physically_able_adult = yes
			save_temporary_scope_as = temporary_partner
			any_consort = {
				superior_consort_trigger = yes
				save_temporary_scope_as = concubine_target
			}
			any_consort = {
				ranting_consort_trigger = { TARGET = scope:concubine_target PARTNER = scope:temporary_partner }
			}
		}
		OR = {
			AND = {
				is_landed_or_landless_administrative = yes
				any_liege_or_above = { 
					this = scope:temporary_partner
				}
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
					is_landed_or_landless_administrative = yes
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
		}
		is_physically_able_adult = yes
		hp_accepts_harems = yes
	}
	weight_multiplier = {
		base = 1
		#High aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 3
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.25
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 4
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.3
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 5
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.3
		}
		#Low aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position <= 2
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.25
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 1
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.35
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				AND = {
					NOR = { 
						has_character_flag = ranting_consort_event 
						has_character_flag = has_consort_event_flag  
					}
					any_consort = {
						count >= 2
					}
					is_physically_able_adult = yes
					save_temporary_scope_as = temporary_partner
					any_consort = {
						superior_consort_trigger = yes
						save_temporary_scope_as = concubine_target
					}
					any_consort = {
						ranting_consort_trigger = { TARGET = scope:concubine_target PARTNER = scope:temporary_partner }
					}
				}
			}
			save_scope_as = partner
		}
		scope:partner = {
			add_character_flag = {
				flag = has_consort_event_flag
				months = 5
			}
			random_consort = {
				limit = {
					superior_consort_trigger = yes
				}
				save_scope_as = target_consort
			}
			every_consort = {
				limit = {
					ranting_consort_trigger = { TARGET = scope:target_consort PARTNER = scope:partner }
				}
				add_to_list = unruly_consorts_list
			}
		}
		random_in_list = {
			list = unruly_consorts_list
			weight = {
				base = 10

				modifier = {
					has_trait = arrogant
					add = 20
				}
				modifier = {
					has_trait = ambitious
					add = 20
				}
				modifier = {
					has_trait = brave
					add = 20
				}

				modifier = {
					opinion = {
						target = scope:target_consort
						value <= low_negative_opinion
					}
					add = 10
				}
				modifier = {
					opinion = {
						target = scope:target_consort
						value <= medium_negative_opinion
					}
					add = 20
				}

				modifier = {
					is_lowborn = no
					add = 20
				}
				
				modifier = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
					add = 20
				}

				modifier = {
					OR = {
						has_character_modifier = beloved_consort_modifier
						has_character_modifier = forgotten_consort_modifier
					}
					add = 20
				}
				modifier = {
					has_character_modifier = favor_boost_modifier
					add = 15
				}
				modifier = {
					OR = {
						has_character_modifier = favored_consort_modifier
						has_character_modifier = unfavored_consort_modifier
					}
					add = 10
				}

			}
			save_scope_as = valid_target_consort
		}
		if = {
			limit = {
				scope:target_consort = {
					this = root
				}
			}
			add_opinion = {
				target = scope:valid_target_consort
				modifier = hatred_spouse_opinion
			}
		}
		save_scope_as = authority
	}
	
	#Torture them
	option = {
		name = consort_events.0004.a
		trait = callous
		trait = vengeful
		trait = sadistic
		trigger = {
			OR = {
				has_trait = callous
				has_trait = vengeful
				has_trait = sadistic
				has_relation_rival = scope:valid_target_consort
				has_relation_nemesis = scope:valid_target_consort
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
			}
		}
		
		sleep_deprieved_starved_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.25
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 20
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = temperate
				add = -10
			}
			modifier = { #Stress management
				has_trait = calm
				add = -25
			}

			modifier = { #Stress management
				has_trait = callous
				add = 25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = 25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = 25
			}

			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					NOT = {
						any_close_or_extended_family_member = {
							OR = {
								this = scope:partner.primary_spouse
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								this = scope:partner
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -15
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #The Primary Spouse
				exists = scope:partner.primary_spouse
				this = scope:partner.primary_spouse
				add = 10
			}
			modifier = { #The Grand Consort
				has_court_position = grand_consort_court_position
				add = 5
			}
			modifier = { #Is married
				is_married = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -10
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = 20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = 15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = 10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = -20
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -20
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				factor = 0
			}
		}
	}
	
	#Deprive them from sleep
	option = {
		name = consort_events.0004.b
		
		moderate_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -5
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 15
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = temperate
				add = -10
			}
			modifier = { #Stress management
				has_trait = calm
				add = -10
			}

			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						this = scope:partner
					}
				}
				add = 30
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					NOT = {
						any_close_or_extended_family_member = {
							OR = {
								this = scope:partner.primary_spouse
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								this = scope:partner
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -10
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #The Primary Spouse
				exists = scope:partner.primary_spouse
				this = scope:partner.primary_spouse
				add = 10
			}
			modifier = { #The Grand Consort
				has_court_position = grand_consort_court_position
				add = 5
			}
			modifier = { #Is married
				is_married = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = 15
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = -5
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = -10
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -15
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = -25
			}
		}
	}
	
	#Lecture them
	option = {
		name = consort_events.0001.c
		
		scolding_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.10
				ai_honor = 0.10
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = -5
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -15
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -15
			}
			modifier = { #Stress management
				has_trait = temperate
				add = 5
			}
			modifier = { #Stress management
				has_trait = calm
				add = 5
			}

			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = -25
			}

			modifier = { #More if root is not powerful
				NOT = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 5
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 10
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Is concubine
				is_concubine = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = -15
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = -5
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = 15
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -5
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = -10
			}

			modifier = { #Less if target_consort is root
				scope:target_consort = {
					this = root
				}
				add = -5
			}
		}
	}
	
	#Ignore them
	option = {
		name = consort_events.0001.d
		stress_impact = {
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.15
				ai_honor = -0.25
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = 15
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = 15
			}
			modifier = { #Stress management
				has_trait = calm
				add = 5
			}

			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = -25
			}

			modifier = { #More if root is not powerful
				NOT = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 5
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Is concubine
				is_concubine = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = -20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = -15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = -10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = 20
			}
			
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = 15
			}
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = favor_boost_modifier
				}
				add = 5
			}
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = favored_consort_modifier
				}
				add = 5
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = 5
			}

			modifier = { #Less if target_consort is root
				scope:target_consort = {
					this = root
				}
				add = -15
			}
		}
	}

	after = {
		scope:partner = {
			add_character_flag = {
				flag = ranting_consort_event
				years = 2
			}
		}
		begging_punished_consort_effect = { 
			VICTIM = scope:valid_target_consort
			LIEGE = scope:partner 
			AUTHORITY = scope:authority
		}
	}
}

###############################
##Favored consort is arrogant##
###############################

consort_events.0005 = {
	type = character_event
	title = consort_events.0005.t
	desc = consort_events.0005.des
	theme = family
	override_background = {
		reference = throne_room
	}
	
	right_portrait = { 	
		character = scope:valid_target_consort
		animation = personality_bold
	}
	left_portrait = { 	
		character = root
		animation = rage
	}
	
	trigger = {
		any_consort = {
			NOR = {
				has_character_flag = flag_had_arrogant_consort_event
				has_character_flag = has_consort_event_flag  
			}
			is_physically_able_adult = yes
			OR = {
				AND = {
					OR = {
						NOT = {
							exists = primary_spouse
						}
						AND = {
							exists = primary_spouse
							primary_spouse = {
								NOT = {
									this = root
								}
								is_landed_or_landless_administrative = yes
							}
						}
					}
					root = {
						has_court_position = grand_consort_court_position
					}
				}
				AND = {
					exists = primary_spouse
					primary_spouse = {
						this = root
					}
				}
			}
			save_temporary_scope_as = temporary_partner
			any_consort = {
				is_physically_able_adult = yes
				is_courtier_of = scope:temporary_partner
				count >= 3
			}
			any_consort = {
				arrogant_consort_trigger = { PARTNER = scope:temporary_partner }
			}
		}
		OR = {
			AND = {
				is_landed_or_landless_administrative = yes
				any_liege_or_above = { 
					this = scope:temporary_partner
				}
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
					is_landed_or_landless_administrative = yes
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
			any_consort = {
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 4
					has_character_flag = gc_balancing_favor_flag
				}
			}
		}
		is_physically_able_adult = yes
		hp_accepts_harems = yes
	}
	
	weight_multiplier = {
		base = 1
		#High aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 3
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.25
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 4
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.3
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 5
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.3
		}
		#Low aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position <= 2
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.25
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 1
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.35
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				AND = {
					NOR = {
						has_character_flag = flag_had_arrogant_consort_event
						has_character_flag = has_consort_event_flag  
					}
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = prev
						count >= 3
					}
					is_physically_able_adult = yes
					OR = {
						AND = {
							OR = {
								NOT = {
									exists = primary_spouse
								}
								AND = {
									exists = primary_spouse
									primary_spouse = {
										NOT = {
											this = root
										}
										is_landed_or_landless_administrative = yes
									}
								}
							}
							root = {
								has_court_position = grand_consort_court_position
							}
						}
						AND = {
							exists = primary_spouse
							primary_spouse = {
								this = root
							}
						}
					}
					save_temporary_scope_as = temporary_partner
					any_consort = {
						arrogant_consort_trigger = { PARTNER = scope:temporary_partner }
					}
				}
			}
			save_scope_as = partner
		}
		scope:partner = {
			add_character_flag = {
				flag = has_consort_event_flag
				months = 5
			}
			every_consort = {
				limit = {
					arrogant_consort_trigger = { PARTNER = scope:partner }
				}
				add_to_temporary_list = arrogant_consort_list
			}
		}
		random_in_list = {
			list = arrogant_consort_list
			weight = {
				base = 10
				modifier = {
					has_trait = arrogant
					add = 20
				}
				modifier = {
					has_trait = ambitious
					add = 10
				}
				modifier = {
					has_trait = greedy
					add = 10
				}
				modifier = {
					has_trait = brave
					add = 10
				}
				
				modifier = {
					has_court_position = grand_consort_court_position
					add = 20
				}
				
				modifier = {
					has_character_flag = flag_new_consort
					add = -10
				}

				modifier = {
					opinion = {
						target = root
						value <= low_negative_opinion
					}
					add = 10
				}
				modifier = {
					opinion = {
						target = root
						value <= medium_negative_opinion
					}
					add = 20
				}

				modifier = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							is_liege_or_above_of = scope:partner
							this = scope:partner
						}
					}
					add = 20
				}
			}
			save_scope_as = valid_target_consort
		}
		scope:valid_target_consort = {
			calyver_favor_medium_gain_effect = yes
		}
		hidden_effect = {
			scope:partner = {
				every_consort = {
					limit = {
						AND = {
							hp_accepts_harems = yes
							NOR = {
								this = root
								this = scope:valid_target_consort
							}
							opinion = {
								target = scope:valid_target_consort
								value <= 10
							}
						}
					}
					add_opinion = {
						target = scope:valid_target_consort
						modifier = insolent_consort_opinion
						opinion = -10
					}
				}
			}
		}
		save_scope_as = authority
	}
	
	#Torture them
	option = {
		name = consort_events.0001.a
		flavor = consort_events.0001.a_tt
		trait = callous
		trait = vengeful
		trait = sadistic
		trigger = {
			OR = {
				has_trait = callous
				has_trait = vengeful
				has_trait = sadistic
				has_relation_rival = scope:valid_target_consort
				has_relation_nemesis = scope:valid_target_consort
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
			}
		}
		
		consort_torture_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.25
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 20
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = temperate
				add = -15
			}
			modifier = { #Stress management
				has_trait = calm
				add = -15
			}

			modifier = { #Stress management
				has_trait = callous
				add = 25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = 25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = 25
			}

			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					NOT = {
						any_close_or_extended_family_member = {
							OR = {
								this = scope:partner.primary_spouse
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								this = scope:partner
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -15
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #The Primary Spouse
				exists = scope:partner.primary_spouse
				this = scope:partner.primary_spouse
				add = 10
			}
			modifier = { #The Grand Consort
				has_court_position = grand_consort_court_position
				add = 5
			}
			modifier = { #Is married
				is_married = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -10
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = 20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = 15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = 10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = -20
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -20
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				factor = 0
			}
		}
	}
	
	#Deprive them from sleep
	option = {
		name = consort_events.0004.b
		
		moderate_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -5
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 15
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = temperate
				add = -10
			}
			modifier = { #Stress management
				has_trait = calm
				add = -10
			}

			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						this = scope:partner
					}
				}
				add = 30
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					NOT = {
						any_close_or_extended_family_member = {
							OR = {
								this = scope:partner.primary_spouse
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								this = scope:partner
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -10
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #The Primary Spouse
				exists = scope:partner.primary_spouse
				this = scope:partner.primary_spouse
				add = 10
			}
			modifier = { #The Grand Consort
				has_court_position = grand_consort_court_position
				add = 5
			}
			modifier = { #Is married
				is_married = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = 15
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = -5
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = -10
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -15
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = -25
			}
		}
	}
	
	#Lecture them
	option = {
		name = consort_events.0001.c
		
		scolding_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.10
				ai_honor = 0.10
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = -5
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -15
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -15
			}
			modifier = { #Stress management
				has_trait = temperate
				add = 5
			}
			modifier = { #Stress management
				has_trait = calm
				add = 5
			}

			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = -25
			}

			modifier = { #More if root is not powerful
				NOT = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 5
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 10
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Is concubine
				is_concubine = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = -15
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = -5
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = 15
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -5
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = -10
			}
		}
	}
	
	#Ignore them
	option = {
		name = consort_events.0001.d
		stress_impact = {
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain

			arrogant = minor_stress_impact_gain
		}
		hidden_effect = {
			scope:partner = {
				every_consort = {
					limit = {
						AND = {
							NOR = {
								this = root
								this = scope:valid_target_consort
								has_relation_best_friend = scope:valid_target_consort
								has_relation_friend = scope:valid_target_consort
								has_relation_lover = scope:valid_target_consort
								has_relation_soulmate = scope:valid_target_consort
							}
							is_courtier_of = scope:partner
							is_physically_able_adult = yes
							opinion = {
								target = scope:valid_target_consort
								value <= 50
							}
						}
					}
					add_opinion = {
						target = scope:valid_target_consort
						modifier = cocky_consort_opinion
					}
				}
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.15
				ai_honor = -0.25
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = 15
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = 15
			}
			modifier = { #Stress management
				has_trait = calm
				add = 5
			}

			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = -25
			}
			modifier = { #Stress management
				has_trait = arrogant
				add = -25
			}

			modifier = { #More if root is not powerful
				NOT = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 5
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Is concubine
				is_concubine = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = -20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = -15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = -10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = 20
			}
			
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = 15
			}
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = favor_boost_modifier
				}
				add = 5
			}
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = favored_consort_modifier
				}
				add = 5
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = 5
			}
		}
	}
	after = {
		scope:partner = {
			add_character_flag = {
				flag = flag_had_arrogant_consort_event
				years = 3
			}
		}
		begging_punished_consort_effect = { 
			VICTIM = scope:valid_target_consort
			LIEGE = scope:partner 
			AUTHORITY = scope:authority
		}
	}
}

############################
##Yanwan is courting favor##
############################
consort_events.0006 = {
	type = character_event
	title = consort_events.0006.t
	desc = consort_events.0006.desc
	theme = family
	override_background = {
		reference = garden
	}
	
	right_portrait = { 	
		character = scope:yanwan
		animation = flirty
	}
	left_portrait = { 	
		character = root
		animation = anger
	}
	
	trigger = {
		any_consort = {
			valid_partner_yanwan_trigger = yes
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
		}
		is_physically_able_adult = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = { #Yanwan wants a child so badly
			add = 0.1
			any_consort = {
				any_consort = {
					has_character_flag = flag_yanwan
					any_child = {
						count = 0
					}
				}
			}
		}
		modifier = { #Yanwan wants favor
			add = 0.1
			any_consort = {
				any_consort = {
					has_character_flag = flag_yanwan
					OR = {
						has_character_modifier = unfavored_consort_modifier
						has_character_modifier = forgotten_consort_modifier
					}
				}
			}
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				valid_partner_yanwan_trigger = yes
			}
			save_scope_as = partner
		}
		scope:partner = {
			add_character_flag = {
				flag = has_consort_event_flag
				months = 5
			}
			random_consort = {
				limit = {
					yanwan_trigger = { PARTNER = scope:temporary_partner }
				}
				save_scope_as = yanwan
			}
		}
		
		scope:yanwan = {
			add_diplomacy_skill = 1
			save_scope_as = valid_target_consort
		}
		save_scope_as = authority
	}
	
	#Torture them
	option = {
		name = consort_events.0001.b
		
		stress_impact = {
			temperate = miniscule_stress_impact_gain
			sadistic = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			wrathful = minor_stress_impact_loss
		}
		
		high_punishment_effect = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.25
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -10
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 20
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = temperate
				add = -10
			}
			modifier = { #Stress management
				has_trait = calm
				add = -25
			}

			modifier = { #Stress management
				has_trait = callous
				add = 25
			}
			modifier = { #Stress management
				has_trait = sadistic
				add = 25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = 25
			}

			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						this = scope:partner
					}
				}
				add = 40
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					NOT = {
						any_close_or_extended_family_member = {
							OR = {
								this = scope:partner.primary_spouse
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								this = scope:partner
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -15
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #The Primary Spouse
				exists = scope:partner.primary_spouse
				this = scope:partner.primary_spouse
				add = 10
			}
			modifier = { #The Grand Consort
				has_court_position = grand_consort_court_position
				add = 5
			}
			modifier = { #Is married
				is_married = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -10
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = 20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = 15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = 10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = -20
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -20
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				factor = 0
			}
		}
	}
	
	#Deprive them from sleep
	option = {
		name = consort_events.0004.b
		
		moderate_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = -0.25
				ai_honor = -0.15
			}
			modifier = { #Scolded consort
				has_character_flag = flag_scolded_consort
				add = -5
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 15
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= low_negative_opinion
				}
				add = 15
			}
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = 10
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -25
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -25
			}
			modifier = { #Stress management
				has_trait = temperate
				add = -10
			}
			modifier = { #Stress management
				has_trait = calm
				add = -10
			}

			modifier = { #More if root is powerful
				any_close_or_extended_family_member = {
					OR = {
						this = scope:partner.primary_spouse
						is_powerful_vassal_of = scope:partner
						is_councillor_of = scope:partner
						is_parent_of = scope:partner
						this = scope:partner
					}
				}
				add = 30
			}
			modifier = { #More if the consort is not important
				scope:valid_target_consort = {
					NOT = {
						any_close_or_extended_family_member = {
							OR = {
								this = scope:partner.primary_spouse
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								this = scope:partner
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = -10
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					NOR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #The Primary Spouse
				exists = scope:partner.primary_spouse
				this = scope:partner.primary_spouse
				add = 10
			}
			modifier = { #The Grand Consort
				has_court_position = grand_consort_court_position
				add = 5
			}
			modifier = { #Is married
				is_married = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = -5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = 15
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = -5
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = -10
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -15
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = -25
			}
		}
	}
	
	#Lecture them
	option = {
		name = consort_events.0001.c
		
		scolding_punishment = yes
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.10
				ai_honor = 0.10
			}
			
			modifier = { #More if low target opinion
				opinion = {
					target = scope:valid_target_consort
					value <= medium_negative_opinion
				}
				add = -5
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = -15
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = -15
			}
			modifier = { #Stress management
				has_trait = temperate
				add = 5
			}
			modifier = { #Stress management
				has_trait = calm
				add = 5
			}

			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = vengeful
				add = -25
			}

			modifier = { #More if root is not powerful
				NOT = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 5
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 10
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Is concubine
				is_concubine = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = -15
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = -5
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = 15
			}

			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = -5
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = -10
			}
		}
	}
	
	#Ignore them
	option = {
		name = consort_events.0001.d
		stress_impact = {
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
			diligent = minor_stress_impact_gain
		}
		hidden_effect = {
			scope:partner = {
				trigger_event = {
					id = harem_politics.0018
					days = 3
				}
			}
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.15
				ai_honor = -0.25
			}

			modifier = { #Stress management
				has_trait = compassionate
				add = 15
			}
			modifier = { #Stress management
				has_trait = forgiving
				add = 15
			}
			modifier = { #Stress management
				has_trait = calm
				add = 5
			}

			modifier = { #Stress management
				has_trait = sadistic
				add = -25
			}
			modifier = { #Stress management
				has_trait = callous
				add = -25
			}
			modifier = { #Stress management
				has_trait = wrathful
				add = -25
			}
			modifier = { #Stress management
				has_trait = diligent
				add = -25
			}

			modifier = { #More if root is not powerful
				NOT = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}
			modifier = { #More if the consort is important
				scope:valid_target_consort = {
					any_close_or_extended_family_member = {
						OR = {
							this = scope:partner.primary_spouse
							is_powerful_vassal_of = scope:partner
							is_councillor_of = scope:partner
							is_parent_of = scope:partner
							this = scope:partner
						}
					}
				}
				add = 10
			}

			modifier = { #Mothers are important
				scope:valid_target_consort = {
					any_child = {
						is_child_of = scope:partner
						count >= 1
					}
				}
				add = 5
			}
			
			modifier = { #More if good contacts
				scope:valid_target_consort = {
					OR = {
						has_relation_friend = scope:partner
						has_relation_best_friend = scope:partner
						has_relation_lover = scope:partner
						has_relation_soulmate = scope:partner
						
						AND = {
							exists = scope:partner.primary_spouse
							OR = {
								has_relation_friend = scope:partner.primary_spouse
								has_relation_best_friend = scope:partner.primary_spouse
								has_relation_lover = scope:partner.primary_spouse
								has_relation_soulmate = scope:partner.primary_spouse
							}
						}
						
						AND = {
							exists = scope:partner.mother
							OR = {
								has_relation_friend = scope:partner.mother
								has_relation_best_friend = scope:partner.mother
								has_relation_lover = scope:partner.mother
								has_relation_soulmate = scope:partner.mother
							}
						}
						
						AND = {
							exists = scope:partner.father
							OR = {
								has_relation_friend = scope:partner.father
								has_relation_best_friend = scope:partner.father
								has_relation_lover = scope:partner.father
								has_relation_soulmate = scope:partner.father
							}
						}
					}
				}
				add = 10
			}

			modifier = { #Is concubine
				is_concubine = yes
				add = 5
			}
			
			modifier = { #The Grand Consort
				scope:valid_target_consort = {
					has_court_position = grand_consort_court_position
				}
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = -20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = -15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = -10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = 10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = 20
			}
			
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = 15
			}
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = favor_boost_modifier
				}
				add = 5
			}
			modifier = { #Favor
				scope:valid_target_consort = {
					has_character_modifier = favored_consort_modifier
				}
				add = 5
			}

			modifier = { #Contacts
				scope:valid_target_consort = {
					any_close_family_member = {
						is_liege_or_above_of = scope:partner
					}
				}
				add = 5
			}
		}
	}
	after = {
		scope:partner = {
			add_character_flag = {
				flag = flag_had_yanwan_singing_event
				years = 5
			}
		}
		scope:yanwan = {
			add_character_flag = flag_courted_favor
		}
		begging_punished_consort_effect = { 
			VICTIM = scope:valid_target_consort
			LIEGE = scope:partner 
			AUTHORITY = scope:authority
		}
	}
}

#################
##Hidden events##
#################
##An authority punishes a random consort##
consort_events.0007 = {
	hidden = yes
	
	trigger = {
		any_courtier = {
			is_valid_harem_authority_trigger = yes
			save_temporary_scope_as = temporary_harem_authority
		}
		any_consort = {
			is_valid_harem_victim_trigger = { CONSORT_AUTHORITY = scope:temporary_harem_authority }
		}
		any_consort = {
			is_physically_able_ai_adult = yes
			is_courtier_of = root
			count >= 3
		}
		is_physically_able_adult = yes
		is_landed_or_landless_administrative = yes
		NOT = {
			has_character_flag = has_consort_event_flag
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			any_consort = {
				count >= 5
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				count >= 8
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				count >= 12
			}
		}
		modifier = {
			add = 0.15
			highest_held_title_tier >= tier_kingdom
		}
		#High aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 3
				has_character_flag = gc_promoting_harmony
			}
			add = -0.25
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 4
				has_character_flag = gc_promoting_harmony
			}
			add = -0.3
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 5
				has_character_flag = gc_promoting_harmony
			}
			add = -0.3
		}
		#Low aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position <= 2
				has_character_flag = gc_promoting_harmony
			}
			add = 0.25
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 1
				has_character_flag = gc_promoting_harmony
			}
			add = 0.35
		}
	}
	
	immediate = {
		save_scope_as = partner
		every_courtier = {
			limit = {
				is_valid_harem_authority_trigger = yes
			}
			add_to_list = harem_authority_list
		}
		
		random_in_list = {
			list = harem_authority_list
			weight = {
				base = 50
				modifier = {
					has_trait = just
					add = -10
				}
				modifier = {
					has_trait = calm
					add = -25
				}
				modifier = {
					has_trait = lazy
					add = -15
				}
				
				modifier = {
					has_trait = arrogant
					add = 10
				}
				modifier = {
					has_trait = ambitious
					add = 10
				}
				modifier = {
					has_trait = brave
					add = 10
				}
				modifier = {
					has_trait = vengeful
					add = 10
				}
				modifier = {
					has_trait = sadistic
					add = 10
				}
				modifier = {
					has_trait = callous
					add = 10
				}
				modifier = {
					has_trait = wrathful
					add = 10
				}
				modifier = {
					has_trait = arbitrary
					add = 5
				}

				modifier = {
					harem_politics_evil_consort_trigger = yes
					add = 10
				}

				modifier = {
					NOT = {
						sex_same_as = root
					}
					add = 15
				}

				modifier = {
					is_consort_of = root
					add = 10
				}

				modifier = { #Scheming consorts
					add = 10
					has_character_modifier = scheming_consort_modifier
				}

				modifier = { #Favored consorts are more daring
					add = 20
					has_character_modifier = beloved_consort_modifier
				}
				modifier = { #Favored consorts are more daring
					add = 15
					has_character_modifier = favor_boost_modifier
				}
				modifier = { #Favored consorts are more daring
					add = 10
					has_character_modifier = favored_consort_modifier
				}

				modifier = { #Unfavored consorts are less so
					add = -10
					has_character_modifier = unfavored_consort_modifier
				}
				modifier = { #Unfavored consorts are less so
					add = -20
					has_character_modifier = forgotten_consort_modifier
				}
			}
			save_scope_as = harem_authority
			save_scope_as = authority
		}
		if = {
			limit = {
				exists = scope:harem_authority
			}
			random_consort = {
				limit = {
					is_valid_harem_victim_trigger = { CONSORT_AUTHORITY = scope:harem_authority }
				}
				weight = {
					base = 60
					opinion_modifier = { #Opinion
						WHO = scope:harem_authority
						opinion_target = this
						min = -40
						max = 40
						multiplier = -0.40
					}

					modifier = { #Scheming consorts
						add = 10
						has_character_modifier = scheming_consort_modifier
					}
					
					modifier = { #Potential rivals
						add = 5
						has_relation_potential_rival = scope:harem_authority
					}
					modifier = { #Rivals
						add = 10
						has_relation_rival = scope:harem_authority
					}
					modifier = { #Rivals
						add = 15
						has_relation_nemesis = scope:harem_authority
					}

					modifier = { #The GC is harder to punish
						add = 10
						NOT = {
							has_court_position = grand_consort_court_position
						}
					}
					modifier = { #Spouses are harder to punish
						add = 10
						is_concubine = yes
					}
					modifier = { #Spouses are harder to punish
						add = -10
						is_spouse_of = scope:partner
					}

					modifier = { #Authorities will want to bully favored subordinates
						add = 20
						scope:harem_authority = {
							harem_politics_favored_consort_trigger = yes
						}
						has_character_modifier = beloved_consort_modifier
					}
					modifier = { #Authorities will want to bully favored subordinates
						add = 15
						scope:harem_authority = {
							harem_politics_favored_consort_trigger = yes
						}
						has_character_modifier = favor_boost_modifier
					}
					modifier = { #Authorities will want to bully favored subordinates
						add = 10
						scope:harem_authority = {
							harem_politics_favored_consort_trigger = yes
						}
						has_character_modifier = favored_consort_modifier
					}

					modifier = { #Evil consorts misbehave more
						add = 15
						harem_politics_evil_consort_trigger = yes
					}

					modifier = { #Evil consorts misbehave more
						add = 10
						has_trait = arrogant
					}
					modifier = { #Evil consorts misbehave more
						add = 10
						has_trait = ambitious
					}
					modifier = { #Evil consorts misbehave more
						add = 10
						has_trait = callous
					}
					modifier = { # The ruling House
						add = -15
						exists = scope:partner.house
						house ?= scope:partner.house
					}
					modifier = { #Lowborn consorts are more powerless
						add = 10
						is_lowborn = yes
					}
					
					modifier = { #Strong consorts are more likely to misbehave
						add = 10
						NOT = {
							any_close_family_member = {
								OR = {
									is_powerful_vassal_of = root
									is_councillor_of = root
									is_close_family_of = root
									is_liege_or_above_of = root
									AND = {
										is_knight_of = root
										is_acclaimed = yes
									}
								}
							}
						}
					}
				}
				save_scope_as = valid_target_consort
			}
			if = {
				limit = {
					exists = scope:harem_authority
					exists = scope:valid_target_consort
				}
				random_list = {
					50 = { #The victim is punished severely
						trigger = {
							trigger_if = {
								limit = {
									religion = religion:islam_religion
								}
								scope:valid_target_consort = {
									NOT = {
										is_spouse_of = root
									}
								}
							}
						}
						opinion_modifier = { #Opinion
							WHO = scope:harem_authority
							opinion_target = scope:valid_target_consort
							min = -30
							max = 30
							multiplier = -0.50
						}

						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = sadistic
							}
							add = 10
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = callous
							}
							add = 10
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = vengeful
							}
							add = 10
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = wrathful
							}
							add = 10
						}

						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = just
							}
							add = -10
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = compassionate
							}
							add = -25
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = forgiving
							}
							add = -25
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = calm
							}
							add = -25
						}

						modifier = { #Traits
							scope:harem_authority = { 
								harem_politics_evil_consort_trigger = yes
							}
							add = 15
						}

						modifier = { #New consorts
							scope:valid_target_consort = { 
								has_character_flag = flag_new_consort
							}
							add = 5
						}

						modifier = { #Loved consorts
							scope:valid_target_consort = { 
								OR = {
									has_relation_lover = root
									has_relation_soulmate = root
									has_relation_friend = root
									has_relation_best_friend = root
								}
							}
							add = -10
						}
						modifier = { #Unfavored consorts
							scope:valid_target_consort = { 
								OR = {
									has_relation_nemesis = root
									has_relation_rival = root
									has_relation_potential_rival = root
								}
							}
							add = 10
						}

						modifier = { #Rivals
							scope:valid_target_consort = { 
								OR = {
									has_relation_nemesis = scope:harem_authority
									has_relation_rival = scope:harem_authority
									has_relation_potential_rival = scope:harem_authority
								}
							}
							add = 15
						}
						
						modifier = { #Concubines
							scope:valid_target_consort = { 
								is_concubine = yes
							}
							add = 10
						}

						modifier = { #GC
							scope:valid_target_consort = { 
								has_court_position = grand_consort_court_position
								is_spouse_of = root
							}
							add = -20
						}
						modifier = { #GC
							scope:valid_target_consort = { 
								has_court_position = grand_consort_court_position
								NOT = { 
									is_spouse_of = root
								}
							}
							add = -10
						}

						modifier = { #Spouses
							scope:valid_target_consort = { 
								is_spouse_of = root
								NOT = { 
									has_court_position = grand_consort_court_position
								}
							}
							add = -10
						}

						modifier = { #Fertile consorts
							scope:valid_target_consort = { 
								any_child = {
									is_child_of = root
									count >= 1
								}
							}
							add = -15
						}

						modifier = { #Powerful consorts
							scope:valid_target_consort = { 
								any_close_family_member = {
									OR = {
										is_powerful_vassal_of = root
										is_councillor_of = root
										is_close_family_of = root
										AND = {
											is_knight_of = root
											is_acclaimed = yes
										}
									}
								}
							}
							add = -20
						}
						modifier = { #Powerful consorts
							scope:harem_authority = { 
								any_close_family_member = {
									OR = {
										is_powerful_vassal_of = root
										is_councillor_of = root
										is_close_family_of = root
										AND = {
											is_knight_of = root
											is_acclaimed = yes
										}
									}
								}
							}
							add = 15
						}

						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = beloved_consort_modifier
							}
							add = 20
						}
						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = favor_boost_modifier
							}
							add = 15
						}
						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = favored_consort_modifier
							}
							add = 10
						}

						modifier = { #Unfavored consorts
							scope:harem_authority = { 
								has_character_modifier = unfavored_consort_modifier
							}
							add = -10
						}
						modifier = { #Unfavored consorts
							scope:harem_authority = { 
								has_character_modifier = forgotten_consort_modifier
							}
							add = -20
						}

						modifier = { #Favored consorts
							scope:valid_target_consort = { 
								has_character_modifier = beloved_consort_modifier
							}
							add = -15
						}
						modifier = { #Favored consorts
							scope:valid_target_consort = { 
								has_character_modifier = favor_boost_modifier
							}
							add = -10
						}

						modifier = { #Traits
							scope:harem_authority = { 
								NOR = {	
									has_trait = sadistic
									has_trait = callous
									has_trait = vengeful
								}
							}
							factor = 0
						}

						modifier = { #Powerful consorts
							scope:valid_target_consort = { 
								any_close_family_member = {
									is_liege_or_above_of = root
								}
							}
							factor = 0
						}
						
						scope:harem_authority = {
							consort_torture_effect = yes
						}
					}
					50 = { #Very high punishment
						trigger = {
							trigger_if = {
								limit = {
									religion = religion:islam_religion
								}
								scope:valid_target_consort = {
									NOT = {
										is_spouse_of = root
									}
								}
							}
						}
						opinion_modifier = { #Opinion
							WHO = scope:harem_authority
							opinion_target = scope:valid_target_consort
							min = -30
							max = 30
							multiplier = -0.50
						}
						
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = sadistic
							}
							add = 5
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = callous
							}
							add = 5
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = vengeful
							}
							add = 5
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = wrathful
							}
							add = 5
						}

						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = just
							}
							add = -10
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = compassionate
							}
							add = -25
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = forgiving
							}
							add = -25
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = calm
							}
							add = -25
						}

						modifier = { #Traits
							scope:harem_authority = { 
								harem_politics_evil_consort_trigger = yes
							}
							add = 10
						}

						modifier = { #New consorts
							scope:valid_target_consort = { 
								has_character_flag = flag_new_consort
							}
							add = 10
						}

						modifier = { #Loved consorts
							scope:valid_target_consort = { 
								OR = {
									has_relation_lover = root
									has_relation_soulmate = root
									has_relation_friend = root
									has_relation_best_friend = root
								}
							}
							add = -10
						}
						modifier = { #Unfavored consorts
							scope:valid_target_consort = { 
								OR = {
									has_relation_nemesis = root
									has_relation_rival = root
									has_relation_potential_rival = root
								}
							}
							add = 10
						}

						modifier = { #Rivals
							scope:valid_target_consort = { 
								OR = {
									has_relation_nemesis = scope:harem_authority
									has_relation_rival = scope:harem_authority
									has_relation_potential_rival = scope:harem_authority
								}
							}
							add = 15
						}
						
						modifier = { #Concubines
							scope:valid_target_consort = { 
								is_concubine = yes
							}
							add = 10
						}

						modifier = { #GC
							scope:valid_target_consort = { 
								has_court_position = grand_consort_court_position
								is_spouse_of = root
							}
							add = -20
						}
						modifier = { #GC
							scope:valid_target_consort = { 
								has_court_position = grand_consort_court_position
								NOT = { 
									is_spouse_of = root
								}
							}
							add = -10
						}

						modifier = { #Spouses
							scope:valid_target_consort = { 
								is_spouse_of = root
								NOT = { 
									has_court_position = grand_consort_court_position
								}
							}
							add = -10
						}

						modifier = { #Fertile consorts
							scope:valid_target_consort = { 
								any_child = {
									is_child_of = root
									count >= 1
								}
							}
							add = -10
						}

						modifier = { #Powerful consorts
							scope:valid_target_consort = { 
								any_close_family_member = {
									OR = {
										is_powerful_vassal_of = root
										is_councillor_of = root
										is_close_family_of = root
										AND = {
											is_knight_of = root
											is_acclaimed = yes
										}
									}
								}
							}
							add = -20
						}
						modifier = { #Powerful consorts
							scope:harem_authority = { 
								any_close_family_member = {
									OR = {
										is_powerful_vassal_of = root
										is_councillor_of = root
										is_close_family_of = root
										AND = {
											is_knight_of = root
											is_acclaimed = yes
										}
									}
								}
							}
							add = 15
						}

						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = beloved_consort_modifier
							}
							add = 15
						}
						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = favor_boost_modifier
							}
							add = 10
						}
						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = favored_consort_modifier
							}
							add = 5
						}

						modifier = { #Unfavored consorts
							scope:harem_authority = { 
								has_character_modifier = unfavored_consort_modifier
							}
							add = -10
						}
						modifier = { #Unfavored consorts
							scope:harem_authority = { 
								has_character_modifier = forgotten_consort_modifier
							}
							add = -20
						}

						modifier = { #Favored consorts
							scope:valid_target_consort = { 
								has_character_modifier = beloved_consort_modifier
							}
							add = -15
						}
						modifier = { #Favored consorts
							scope:valid_target_consort = { 
								has_character_modifier = favor_boost_modifier
							}
							add = -10
						}

						modifier = { #Powerful consorts
							scope:valid_target_consort = { 
								any_close_family_member = {
									is_liege_or_above_of = root
								}
							}
							add = -25
						}

						scope:harem_authority = {
							sleep_deprieved_starved_effect = yes
						}
					}
					50 = { #High punishment
						trigger = {
							trigger_if = {
								limit = {
									religion = religion:islam_religion
								}
								scope:valid_target_consort = {
									NOT = {
										is_spouse_of = root
									}
								}
							}
						}
						opinion_modifier = { #Opinion
							WHO = scope:harem_authority
							opinion_target = scope:valid_target_consort
							min = -25
							max = 25
							multiplier = -0.25
						}
						
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = sadistic
							}
							add = 5
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = callous
							}
							add = 5
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = vengeful
							}
							add = 5
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = wrathful
							}
							add = 5
						}

						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = just
							}
							add = -10
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = compassionate
							}
							add = -25
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = forgiving
							}
							add = -25
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = calm
							}
							add = -25
						}

						modifier = { #Traits
							scope:harem_authority = { 
								harem_politics_evil_consort_trigger = yes
							}
							add = 10
						}

						modifier = { #New consorts
							scope:valid_target_consort = { 
								has_character_flag = flag_new_consort
							}
							add = 10
						}

						modifier = { #Loved consorts
							scope:valid_target_consort = { 
								OR = {
									has_relation_lover = root
									has_relation_soulmate = root
									has_relation_friend = root
									has_relation_best_friend = root
								}
							}
							add = -5
						}
						modifier = { #Unfavored consorts
							scope:valid_target_consort = { 
								OR = {
									has_relation_nemesis = root
									has_relation_rival = root
									has_relation_potential_rival = root
								}
							}
							add = 10
						}

						modifier = { #Rivals
							scope:valid_target_consort = { 
								OR = {
									has_relation_nemesis = scope:harem_authority
									has_relation_rival = scope:harem_authority
									has_relation_potential_rival = scope:harem_authority
								}
							}
							add = 10
						}
						
						modifier = { #Concubines
							scope:valid_target_consort = { 
								is_concubine = yes
							}
							add = 5
						}

						modifier = { #GC
							scope:valid_target_consort = { 
								has_court_position = grand_consort_court_position
								is_spouse_of = root
							}
							add = -10
						}
						modifier = { #GC
							scope:valid_target_consort = { 
								has_court_position = grand_consort_court_position
								NOT = { 
									is_spouse_of = root
								}
							}
							add = -5
						}

						modifier = { #Spouses
							scope:valid_target_consort = { 
								is_spouse_of = root
								NOT = { 
									has_court_position = grand_consort_court_position
								}
							}
							add = -5
						}

						modifier = { #Fertile consorts
							scope:valid_target_consort = { 
								any_child = {
									is_child_of = root
									count >= 1
								}
							}
							add = -10
						}

						modifier = { #Powerful consorts
							scope:valid_target_consort = { 
								any_close_family_member = {
									OR = {
										is_powerful_vassal_of = root
										is_councillor_of = root
										is_close_family_of = root
										AND = {
											is_knight_of = root
											is_acclaimed = yes
										}
									}
								}
							}
							add = -15
						}
						modifier = { #Powerful consorts
							scope:harem_authority = { 
								any_close_family_member = {
									OR = {
										is_powerful_vassal_of = root
										is_councillor_of = root
										is_close_family_of = root
										AND = {
											is_knight_of = root
											is_acclaimed = yes
										}
									}
								}
							}
							add = 15
						}

						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = beloved_consort_modifier
							}
							add = 15
						}
						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = favor_boost_modifier
							}
							add = 10
						}
						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = favored_consort_modifier
							}
							add = 5
						}

						modifier = { #Unfavored consorts
							scope:harem_authority = { 
								has_character_modifier = unfavored_consort_modifier
							}
							add = -10
						}
						modifier = { #Unfavored consorts
							scope:harem_authority = { 
								has_character_modifier = forgotten_consort_modifier
							}
							add = -20
						}

						modifier = { #Favored consorts
							scope:valid_target_consort = { 
								has_character_modifier = beloved_consort_modifier
							}
							add = -15
						}
						modifier = { #Favored consorts
							scope:valid_target_consort = { 
								has_character_modifier = favor_boost_modifier
							}
							add = -10
						}

						modifier = { #Powerful consorts
							scope:valid_target_consort = { 
								any_close_family_member = {
									is_liege_or_above_of = root
								}
							}
							add = -20
						}

						scope:harem_authority = {
							high_punishment_effect = yes
						}
					}
					50 = { #Moderate punishment
						opinion_modifier = { #Opinion
							WHO = scope:harem_authority
							opinion_target = scope:valid_target_consort
							min = -20
							max = 20
							multiplier = -0.20
						}

						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = compassionate
							}
							add = -15
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = forgiving
							}
							add = -15
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = calm
							}
							add = -10
						}

						modifier = { #New consorts
							scope:valid_target_consort = { 
								has_character_flag = flag_new_consort
							}
							add = 10
						}

						modifier = { #Loved consorts
							scope:valid_target_consort = { 
								OR = {
									has_relation_lover = root
									has_relation_soulmate = root
									has_relation_friend = root
									has_relation_best_friend = root
								}
							}
							add = -5
						}
						modifier = { #Unfavored consorts
							scope:valid_target_consort = { 
								OR = {
									has_relation_nemesis = root
									has_relation_rival = root
									has_relation_potential_rival = root
								}
							}
							add = 5
						}

						modifier = { #Rivals
							scope:valid_target_consort = { 
								OR = {
									has_relation_nemesis = scope:harem_authority
									has_relation_rival = scope:harem_authority
									has_relation_potential_rival = scope:harem_authority
								}
							}
							add = 5
						}
						
						modifier = { #Concubines
							scope:valid_target_consort = { 
								is_concubine = yes
							}
							add = 5
						}

						modifier = { #GC
							scope:valid_target_consort = { 
								has_court_position = grand_consort_court_position
								is_spouse_of = root
							}
							add = -5
						}

						modifier = { #Fertile consorts
							scope:valid_target_consort = { 
								any_child = {
									is_child_of = root
									count >= 1
								}
							}
							add = -10
						}

						modifier = { #Powerful consorts
							scope:valid_target_consort = { 
								any_close_family_member = {
									OR = {
										is_powerful_vassal_of = root
										is_councillor_of = root
										is_close_family_of = root
										AND = {
											is_knight_of = root
											is_acclaimed = yes
										}
									}
								}
							}
							add = -10
						}
						modifier = { #Powerful consorts
							scope:harem_authority = { 
								any_close_family_member = {
									OR = {
										is_powerful_vassal_of = root
										is_councillor_of = root
										is_close_family_of = root
										AND = {
											is_knight_of = root
											is_acclaimed = yes
										}
									}
								}
							}
							add = 10
						}

						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = beloved_consort_modifier
							}
							add = 10
						}
						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = favor_boost_modifier
							}
							add = 5
						}
						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = favored_consort_modifier
							}
							add = 5
						}

						modifier = { #Unfavored consorts
							scope:harem_authority = { 
								has_character_modifier = unfavored_consort_modifier
							}
							add = -10
						}
						modifier = { #Unfavored consorts
							scope:harem_authority = { 
								has_character_modifier = forgotten_consort_modifier
							}
							add = -15
						}

						modifier = { #Favored consorts
							scope:valid_target_consort = { 
								has_character_modifier = beloved_consort_modifier
							}
							add = -10
						}
						modifier = { #Favored consorts
							scope:valid_target_consort = { 
								has_character_modifier = favor_boost_modifier
							}
							add = -5
						}

						modifier = { #Powerful consorts
							scope:valid_target_consort = { 
								any_close_family_member = {
									is_liege_or_above_of = root
								}
							}
							add = -15
						}

						scope:harem_authority = {
							moderate_punishment = yes
						}
					}
					50 = { #Scolding
						opinion_modifier = { #Opinion
							WHO = scope:harem_authority
							opinion_target = scope:valid_target_consort
							min = -20
							max = 20
							multiplier = 0.20
						}
						
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = sadistic
							}
							add = -10
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = callous
							}
							add = -10
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = vengeful
							}
							add = -10
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = wrathful
							}
							add = -10
						}

						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = compassionate
							}
							add = 15
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = forgiving
							}
							add = 15
						}
						modifier = { #Traits
							scope:harem_authority = { 
								has_trait = calm
							}
							add = 15
						}

						modifier = { #Traits
							scope:harem_authority = { 
								harem_politics_evil_consort_trigger = no
							}
							add = 10
						}

						modifier = { #Loved consorts
							scope:valid_target_consort = { 
								OR = {
									has_relation_lover = root
									has_relation_soulmate = root
									has_relation_friend = root
									has_relation_best_friend = root
								}
							}
							add = 10
						}
						modifier = { #Unfavored consorts
							scope:valid_target_consort = { 
								OR = {
									has_relation_nemesis = root
									has_relation_rival = root
									has_relation_potential_rival = root
								}
							}
							add = -5
						}

						modifier = { #Rivals
							scope:valid_target_consort = { 
								OR = {
									has_relation_nemesis = scope:harem_authority
									has_relation_rival = scope:harem_authority
									has_relation_potential_rival = scope:harem_authority
								}
							}
							add = -10
						}

						modifier = { #GC
							scope:valid_target_consort = { 
								has_court_position = grand_consort_court_position
								is_spouse_of = root
							}
							add = 10
						}
						modifier = { #GC
							scope:valid_target_consort = { 
								has_court_position = grand_consort_court_position
								NOT = { 
									is_spouse_of = root
								}
							}
							add = 5
						}

						modifier = { #Spouses
							scope:valid_target_consort = { 
								is_spouse_of = root
								NOT = { 
									has_court_position = grand_consort_court_position
								}
							}
							add = 5
						}

						modifier = { #Fertile consorts
							scope:valid_target_consort = { 
								any_child = {
									is_child_of = root
									count >= 1
								}
							}
							add = 5
						}

						modifier = { #Powerful consorts
							scope:valid_target_consort = { 
								any_close_family_member = {
									OR = {
										is_powerful_vassal_of = root
										is_councillor_of = root
										is_close_family_of = root
										AND = {
											is_knight_of = root
											is_acclaimed = yes
										}
									}
								}
							}
							add = 10
						}
						modifier = { #Powerful consorts
							scope:harem_authority = { 
								any_close_family_member = {
									OR = {
										is_powerful_vassal_of = root
										is_councillor_of = root
										is_close_family_of = root
										AND = {
											is_knight_of = root
											is_acclaimed = yes
										}
									}
								}
							}
							add = -10
						}

						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = beloved_consort_modifier
							}
							add = -10
						}
						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = favor_boost_modifier
							}
							add = -5
						}
						modifier = { #Favored consorts
							scope:harem_authority = { 
								has_character_modifier = favored_consort_modifier
							}
							add = -5
						}

						modifier = { #Unfavored consorts
							scope:harem_authority = { 
								has_character_modifier = unfavored_consort_modifier
							}
							add = 5
						}
						modifier = { #Unfavored consorts
							scope:harem_authority = { 
								has_character_modifier = forgotten_consort_modifier
							}
							add = 10
						}

						modifier = { #Favored consorts
							scope:valid_target_consort = { 
								has_character_modifier = beloved_consort_modifier
							}
							add = 15
						}
						modifier = { #Favored consorts
							scope:valid_target_consort = { 
								has_character_modifier = favor_boost_modifier
							}
							add = 10
						}
						modifier = { #Favored consorts
							scope:valid_target_consort = { 
								has_character_modifier = favored_consort_modifier
							}
							add = 10
						}

						modifier = { #Powerful consorts
							scope:valid_target_consort = { 
								any_close_family_member = {
									is_liege_or_above_of = root
								}
							}
							add = 10
						}

						scope:harem_authority = {
							scolding_punishment = yes
						}
					}
				}
				random_list = {
					1 = { #0001
						modifier = {
							scope:harem_authority = { 
								age >= 27
								is_consort_of = root
							}
							scope:valid_target_consort = {
								has_character_modifier = favored_consort_modifier
								OR = {
									has_trait = arrogant
									has_trait = greedy
									has_trait = ambitious
									has_trait = brave
								}
								age <= 21
							}
							add = 49
						}
						add_character_flag = {
							flag = had_mei_event_flag
							years = 5
						}
					}
					25 = { #0002
						modifier = {
							highest_held_title_tier >= tier_kingdom
							add = 25
						}
						add_character_flag = {
							flag = had_hua_fei_event_flag
							years = 2
						}
					}
					50 = { #0004
						add_character_flag = {
							flag = ranting_consort_event
							years = 2
						}
					}
					1 = { #0005
						modifier = {
							exists = root.primary_spouse
							scope:harem_authority = root.primary_spouse
							scope:valid_target_consort = {
								has_character_modifier = favored_consort_modifier
								OR = {
									has_trait = arrogant
									has_trait = greedy
									has_trait = ambitious
									has_trait = brave
								}
							}

							add = 49
						}
						add_character_flag = {
							flag = flag_had_arrogant_consort_event
							years = 3
						}
					}
					120 = { #Nothing happens

					}
				}
				random_list = {
					50 = {			
						add_character_flag = {
							flag = has_consort_event_flag
							months = 8
						}
					}
					20 = {			
						add_character_flag = {
							flag = has_consort_event_flag
							months = 5
						}
					}
					50 = {			
						add_character_flag = {
							flag = has_consort_event_flag
							years = 1
						}
					}
					50 = {			
						add_character_flag = {
							flag = has_consort_event_flag
							months = 18
						}
					}
					10 = {
						add_character_flag = {
							flag = has_consort_event_flag
							months = 3
						}
					}
				}
				begging_punished_consort_effect = { 
					VICTIM = scope:valid_target_consort
					LIEGE = scope:partner 
					AUTHORITY = scope:harem_authority
				}
			}
		}
	}
}

##Two consorts become friends##
consort_events.0008 = {
	hidden = yes
	
	trigger = {
		any_courtier = {
			is_valid_generic_consort_trigger = yes
			save_temporary_scope_as = temporary_consort_friend
		}
		any_consort = {
			NOR = {
				this = scope:temporary_consort_friend
				has_court_position = chief_eunuch_court_position
				has_court_position = lady_in_waiting_court_position
			}
			is_valid_generic_consort_trigger = yes
		}
		any_consort = {
			is_physically_able_ai_adult = yes
			is_courtier_of = root
			count >= 3
		}
		is_physically_able_adult = yes
		is_landed_or_landless_administrative = yes
		NOT = {
			has_character_flag = had_consort_positive_relation_flag
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			any_consort = {
				count >= 5
			}
		}
		modifier = {
			add = 0.15
			any_consort = {
				count >= 8
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				count >= 12
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				count >= 17
			}
		}
		modifier = {
			add = 0.1
			religion = religion:islam_religion
		}
		modifier = {
			add = 0.15
			highest_held_title_tier >= tier_kingdom
		}
		#High aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 3
				has_character_flag = gc_promoting_harmony
			}
			add = 0.25
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 4
				has_character_flag = gc_promoting_harmony
			}
			add = 0.3
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 5
				has_character_flag = gc_promoting_harmony
			}
			add = 0.3
		}
		#Low aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position <= 2
				has_character_flag = gc_promoting_harmony
			}
			add = -0.25
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 1
				has_character_flag = gc_promoting_harmony
			}
			add = -0.35
		}
	}
	
	immediate = {
		save_scope_as = partner
		random_courtier = {
			limit = {
				is_valid_generic_consort_trigger = yes
			}
			weight = {
				base = 20
				modifier = {
					add = 10
					any_relation = {
						type = potential_friend
						is_consort_of = root
						is_courtier_of = root
					}
				}

				modifier = {
					is_consort_of = root
					add = 40
				}
				modifier = {
					harem_politics_evil_consort_trigger = no
					add = 20
				}
			}
			save_scope_as = consort_friend
		}
		if = {
			limit = {
				exists = scope:consort_friend
			}
			every_consort = {
				limit = {
					NOR = {
						this = scope:consort_friend
						has_court_position = chief_eunuch_court_position
						has_court_position = lady_in_waiting_court_position
					}
					is_valid_generic_consort_trigger = yes
				}
				add_to_list = consort_friend_list
			}
			
			random_in_list = {
				list = consort_friend_list
				weight = {
					base = 50
					opinion_modifier = { #Opinion
						opinion_target = scope:consort_friend
						multiplier = 0.5
					}

					compatibility_modifier = { #Trait compatibility
						compatibility_target = scope:consort_friend
						multiplier = 0.5
					}

					modifier = { #Unfavored consorts united
						scope:consort_friend = {
							harem_politics_unfavored_consort_trigger = yes
						}	
						harem_politics_unfavored_consort_trigger = yes
						add = 10
					}

					modifier = { #Good consorts united
						scope:consort_friend = {
							harem_politics_evil_consort_trigger = no
						}	
						harem_politics_evil_consort_trigger = no
						add = 10
					}

					modifier = { #Evil consorts united
						scope:consort_friend = {
							harem_politics_evil_consort_trigger = yes
						}	
						harem_politics_evil_consort_trigger = yes
						add = 10
					}

					modifier = { #Favored consorts tend to befriend unfavored consorts
						scope:consort_friend = {
							harem_politics_favored_consort_trigger = yes
						}	
						harem_politics_favored_consort_trigger = no
						add = 10
					}
					modifier = { #Favored consorts tend to befriend unfavored consorts
						scope:consort_friend = {
							harem_politics_favored_consort_trigger = yes
						}	
						harem_politics_unfavored_consort_trigger = yes
						add = 10
					}

					modifier = { #Favored consorts tend to befriend unfavored consorts
						scope:consort_friend = {
							harem_politics_favored_consort_trigger = no
						}	
						harem_politics_favored_consort_trigger = yes
						add = 10
					}
					modifier = { #Favored consorts tend to befriend unfavored consorts
						scope:consort_friend = {
							harem_politics_unfavored_consort_trigger = yes
						}	
						harem_politics_favored_consort_trigger = yes
						add = 10
					}


					modifier = {
						has_relation_potential_friend = scope:consort_friend
						add = 20
					}

					modifier = { #Traits
						has_trait = gregarious
						add = 10
					}
					modifier = { #Traits
						has_trait = shy
						add = -10
					}
					modifier = { #Traits
						has_trait = craven
						add = -10
					}
					modifier = { #Traits
						has_trait = paranoid
						add = -10
					}
					modifier = {
						OR = {
							has_relation_rival = scope:consort_friend
							has_relation_nemesis = scope:consort_friend
						}
						add = 15
					}
					modifier = {
						is_close_or_extended_family_of = root
						add = -30
					}
					modifier = {
						scope:consort_friend = {
							OR = {
								is_close_or_extended_family_of = root
								has_court_position = chief_eunuch_court_position
								has_court_position = lady_in_waiting_court_position
							}
						}
						has_trait = ambitious
						add = 15
					}
				}
				save_scope_as = valid_target_consort
			}
			if = {
				limit = {
					exists = scope:consort_friend
					exists = scope:valid_target_consort
				}
				scope:consort_friend = {
					if = { #From nemesis to rivals
						limit = { has_relation_nemesis = scope:valid_target_consort }
						remove_relation_nemesis = scope:valid_target_consort
						set_relation_rival = scope:valid_target_consort
						add_opinion = {
							target = scope:valid_target_consort
							modifier = friendliness_opinion
							opinion = 25
						}
						scope:valid_target_consort = {
							add_opinion = {
								target = scope:consort_friend
								modifier = friendliness_opinion
								opinion = 25
							}
						}
						if = {
							limit = {
								debug_only = yes
							}
							root = {
								send_interface_toast = {
									type = event_generic_neutral
									title = new_relation_t
									right_icon = scope:consort_friend
									left_icon = scope:valid_target_consort
									custom_tooltip = new_relation_potential_friend_desc
								}
							}
						}
					}
					else_if = { #From rivals to nothing
						limit = { has_relation_rival = scope:valid_target_consort }
						remove_relation_rival = scope:valid_target_consort
						add_opinion = {
							target = scope:valid_target_consort
							modifier = friendliness_opinion
							opinion = 10
						}
						scope:valid_target_consort = {
							add_opinion = {
								target = scope:consort_friend
								modifier = friendliness_opinion
								opinion = 10
							}
						}
						if = {
							limit = {
								debug_only = yes
							}
							root = {
								send_interface_toast = {
									type = event_generic_neutral
									title = new_relation_t
									right_icon = scope:consort_friend
									left_icon = scope:valid_target_consort
									custom_tooltip = new_relation_potential_friend_desc
								}
							}
						}
					}
					else_if = { #From neutral to potential friends
						limit = {
							can_set_relation_potential_friend_trigger = { CHARACTER = scope:valid_target_consort }
						}
						set_relation_potential_friend = scope:valid_target_consort
						add_opinion = {
							target = scope:valid_target_consort
							modifier = friendliness_opinion
							opinion = 10
						}
						scope:valid_target_consort = {
							add_opinion = {
								target = scope:consort_friend
								modifier = friendliness_opinion
								opinion = 10
							}
						}
						if = {
							limit = {
								debug_only = yes
							}
							root = {
								send_interface_toast = {
									type = event_generic_neutral
									title = new_relation_t
									right_icon = scope:consort_friend
									left_icon = scope:valid_target_consort
									custom_tooltip = new_relation_potential_friend_desc
								}
							}
						}
					}
					else_if = { #From potential friends to friends
						limit = {
							has_relation_potential_friend = scope:valid_target_consort
						}
						set_relation_friend = { 
							target = scope:valid_target_consort
							reason = consort_friendship_reason
						}
						if = {
							limit = {
								debug_only = yes
							}
							root = {
								send_interface_toast = {
									type = event_generic_neutral
									title = new_relation_t
									right_icon = scope:consort_friend
									left_icon = scope:valid_target_consort
									custom_tooltip = new_relation_friend_desc
								}
							}
						}
					}
					else_if = { #From friends to best friends
						limit = {
							has_relation_friend = scope:valid_target_consort
							can_set_relation_best_friend_trigger = { CHARACTER = scope:valid_target_consort }
						}
						set_relation_best_friend = { 
							target = scope:valid_target_consort
							reason = consort_friendship_reason 
						}
						if = {
							limit = {
								debug_only = yes
							}
							root = {
								send_interface_toast = {
									type = event_generic_neutral
									title = new_relation_t
									right_icon = scope:consort_friend
									left_icon = scope:valid_target_consort
									custom_tooltip = new_relation_bff_desc
								}
							}
						}
					}
				}
				random_list = {
					50 = {			
						add_character_flag = {
							flag = had_consort_positive_relation_flag
							months = 8
						}
					}
					20 = {	
						modifier = {
							any_consort = {
								count <= 3
							}
							add = -10
						}
						add_character_flag = {
							flag = had_consort_positive_relation_flag
							months = 5
						}
					}
					50 = {			
						add_character_flag = {
							flag = had_consort_positive_relation_flag
							years = 1
						}
					}
					50 = {			
						add_character_flag = {
							flag = had_consort_positive_relation_flag
							months = 18
						}
					}
					10 = {	
						modifier = {
							any_consort = {
								count <= 3
							}
							add = -10
						}
						add_character_flag = {
							flag = had_consort_positive_relation_flag
							months = 3
						}
					}
				}
			}
		}
	}
	
}

##Two consorts become enemies##
consort_events.0009 = {
	hidden = yes
	
	trigger = {
		any_courtier = {
			is_valid_generic_consort_trigger = yes
			save_temporary_scope_as = temporary_consort_rival
		}
		any_consort = {
			NOR = {
				this = scope:temporary_consort_rival
				has_court_position = chief_eunuch_court_position
				has_court_position = lady_in_waiting_court_position
			}
			is_valid_generic_consort_trigger = yes
		}
		any_consort = {
			is_physically_able_ai_adult = yes
			is_courtier_of = root
			count >= 3
		}
		is_physically_able_adult = yes
		is_landed_or_landless_administrative = yes
		NOT = {
			has_character_flag = had_consort_negative_relation_flag
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			any_consort = {
				count >= 5
			}
		}
		modifier = {
			add = 0.15
			any_consort = {
				count >= 8
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				count >= 12
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				count >= 17
			}
		}
		modifier = {
			add = 0.1
			religion = religion:islam_religion
		}
		modifier = {
			add = 0.15
			highest_held_title_tier >= tier_kingdom
		}
		#High aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 3
				has_character_flag = gc_promoting_harmony
			}
			add = -0.25
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 4
				has_character_flag = gc_promoting_harmony
			}
			add = -0.3
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 5
				has_character_flag = gc_promoting_harmony
			}
			add = -0.3
		}
		#Low aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position <= 2
				has_character_flag = gc_promoting_harmony
			}
			add = 0.25
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 1
				has_character_flag = gc_promoting_harmony
			}
			add = 0.35
		}
	}
	
	immediate = {
		save_scope_as = partner
		random_courtier = {
			limit = {
				is_valid_generic_consort_trigger = yes
			}
			weight = {
				base = 20
				modifier = {
					add = 20
					any_relation = {
						type = potential_rival
						is_consort_of = root
						is_courtier_of = root
					}
				}
				
				modifier = {
					is_consort_of = root
					add = 60
				}
				modifier = {
					harem_politics_evil_consort_trigger = yes
					add = 20
				}
				modifier = {
					OR = {
						has_court_position = chief_eunuch_court_position
						has_court_position = lady_in_waiting_court_position
					}
					add = -20
				}
			}
			save_scope_as = consort_rival
		}
		if = {
			limit = {
				exists = scope:consort_rival
			}
			every_consort = {
				limit = {
					NOR = {
						this = scope:consort_rival
						has_court_position = chief_eunuch_court_position
						has_court_position = lady_in_waiting_court_position
					}
					is_valid_generic_consort_trigger = yes
				}
				add_to_list = consort_rival_list
			}
			
			random_in_list = {
				list = consort_rival_list
				weight = {
					base = 100
					opinion_modifier = { #Opinion
						opinion_target = scope:consort_rival
						multiplier = -0.5
					}

					compatibility_modifier = { #Trait compatibility
						compatibility_target = scope:consort_rival
						multiplier = -0.5
					}

					modifier = { #Favored consorts don't like each other
						scope:consort_rival = {
							harem_politics_favored_consort_trigger = yes
						}	
						harem_politics_favored_consort_trigger = yes
						add = 10
					}
					modifier = { #Favored consorts don't like each other
						scope:consort_rival = {
							OR = {
								has_character_modifier = beloved_consort_modifier
								has_character_modifier = favor_boost_modifier
							}
						}	
						OR = {
							has_character_modifier = beloved_consort_modifier
							has_character_modifier = favor_boost_modifier
						}
						add = 10
					}

					modifier = { #Bad consorts
						OR = {
							scope:consort_rival = {
								harem_politics_evil_consort_trigger = yes
							}	
							harem_politics_evil_consort_trigger = yes
						}
						add = 10
					}

					modifier = { #Bad consorts
						OR = {
							AND = {
								exists = root.primary_spouse
								root.primary_spouse = {
									this = scope:consort_rival
								}
								OR = {
									has_court_position = grand_consort_court_position
									harem_politics_favored_consort_trigger = yes
								}
							}
							AND = {
								exists = root.primary_spouse
								this = root.primary_spouse
								scope:consort_rival = {
									OR = {
										has_court_position = grand_consort_court_position
										harem_politics_favored_consort_trigger = yes
									}
								}
							}
						}
						add = 10
					}


					modifier = {
						has_relation_potential_rival = scope:consort_rival
						add = 20
					}

					modifier = { #Traits
						has_trait = deceitful
						add = 10
					}
					modifier = { #Traits
						has_trait = honest
						add = -10
					}
					modifier = { #Traits
						has_trait = calm
						add = -10
					}
					modifier = { #Traits
						has_relation_best_friend = scope:consort_rival
						add = -20
					}

					modifier = {
						scope:consort_rival = {
							is_close_or_extended_family_of = root	
						}
						is_close_or_extended_family_of = root
						add = -10
					}
				}
				save_scope_as = valid_target_consort
			}
			if = {
				limit = {
					exists = scope:consort_rival
					exists = scope:valid_target_consort
				}
				scope:consort_rival = {
					if = { #From best friends to friends
						limit = {
							has_relation_best_friend = scope:valid_target_consort
						}
						remove_relation_best_friend = scope:valid_target_consort
						set_relation_friend = scope:valid_target_consort
						add_opinion = {
							target = scope:valid_target_consort
							modifier = unfriendly_opinion
							opinion = -10
						}
						scope:valid_target_consort = {
							add_opinion = {
								target = scope:consort_friend
								modifier = unfriendly_opinion
								opinion = -10
							}
						}
					}
					else_if = { #From friends to nothing
						limit = {
							has_relation_friend = scope:valid_target_consort
						}
						remove_relation_friend = scope:valid_target_consort
						add_opinion = {
							target = scope:valid_target_consort
							modifier = unfriendly_opinion
							opinion = -10
						}
						scope:valid_target_consort = {
							add_opinion = {
								target = scope:consort_friend
								modifier = unfriendly_opinion
								opinion = -10
							}
						}
					}
					else_if = { #From nothing to potential rivals
						limit = {
							can_set_relation_potential_rival_trigger = { CHARACTER = scope:valid_target_consort }
						}
						set_relation_potential_rival = scope:valid_target_consort
						add_opinion = {
							target = scope:valid_target_consort
							modifier = unfriendly_opinion
							opinion = -10
						}
						scope:valid_target_consort = {
							add_opinion = {
								target = scope:consort_friend
								modifier = unfriendly_opinion
								opinion = -10
							}
						}
					}
					else_if = { #From potential rivals to rivals
						limit = {
							has_relation_potential_rival = scope:valid_target_consort
						}
						set_relation_rival = scope:valid_target_consort
						add_opinion = {
							target = scope:valid_target_consort
							modifier = unfriendly_opinion
							opinion = -5
						}
						scope:valid_target_consort = {
							add_opinion = {
								target = scope:consort_friend
								modifier = unfriendly_opinion
								opinion = -5
							}
						}
					}
					else_if = { #From rivals to nemesis
						limit = {
							has_relation_rival = scope:valid_target_consort
						}
						set_relation_nemesis = scope:valid_target_consort
						add_opinion = {
							target = scope:valid_target_consort
							modifier = unfriendly_opinion
							opinion = -5
						}
						scope:valid_target_consort = {
							add_opinion = {
								target = scope:consort_friend
								modifier = unfriendly_opinion
								opinion = -5
							}
						}
					}
					if = {
						limit = {
							debug_only = yes
						}
						root = {
							send_interface_toast = {
								type = event_generic_neutral
								title = new_relation_t
								right_icon = scope:consort_rival
								left_icon = scope:valid_target_consort
								custom_tooltip = new_relation_rival_desc
							}
						}
					}
				}
				random_list = {
					50 = {			
						add_character_flag = {
							flag = had_consort_negative_relation_flag
							months = 8
						}
					}
					20 = {	
						modifier = {
							any_consort = {
								count <= 3
							}
							add = -10
						}
						add_character_flag = {
							flag = had_consort_negative_relation_flag
							months = 5
						}
					}
					50 = {			
						add_character_flag = {
							flag = had_consort_negative_relation_flag
							years = 1
						}
					}
					50 = {			
						add_character_flag = {
							flag = had_consort_negative_relation_flag
							months = 18
						}
					}
					10 = {
						modifier = {
							any_consort = {
								count <= 3
							}
							add = -10
						}
						add_character_flag = {
							flag = had_consort_negative_relation_flag
							months = 3
						}
					}
				}
			}
		}
	}
	
}

##Unfavored consorts##
consort_events.0010 = {
	hidden = yes
	
	trigger = {
		any_consort = {
			is_courtier_of = root
			NOR = {
				has_character_flag = flag_new_consort
				exists = scope:is_being_divorced
				exists = scope:is_being_set_aside
				
				has_relation_potential_lover = root
				has_relation_lover = root
				has_relation_soulmate = root
				
				has_relation_potential_friend = root
				has_relation_friend = root
				has_relation_best_friend = root

				has_variable = favor

				has_character_modifier = forgotten_consort_modifier
			}
			harem_politics_favored_consort_trigger = no
			age >= 23
		}
		any_consort = {
			is_physically_able_ai_adult = yes
			is_courtier_of = root
			count >= 5
		}
		is_physically_able_adult = yes
		is_landed_or_landless_administrative = yes
		NOT = {
			has_character_flag = had_unfavored_consort_flag
		}

		OR = {
			AND = {
				any_consort = {
					is_physically_able_ai_adult = yes
					is_courtier_of = root
					count <= 8
				}
				any_consort = {
					has_character_modifier = unfavored_consort_modifier
					is_courtier_of = root
					count <= 2
				}
				any_consort = {
					has_character_modifier = forgotten_consort_modifier
					is_courtier_of = root
					count <= 2
				}
			}
			AND = {
				any_consort = {
					is_physically_able_ai_adult = yes
					is_courtier_of = root
					count > 8
				}
				any_consort = {
					has_character_modifier = unfavored_consort_modifier
					is_courtier_of = root
					count <= 3
				}
				any_consort = {
					has_character_modifier = forgotten_consort_modifier
					is_courtier_of = root
					count <= 2
				}
			}
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			any_consort = {
				count >= 8
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				count >= 12
			}
		}
		modifier = {
			add = 0.15
			highest_held_title_tier >= tier_kingdom
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				is_courtier_of = root
				NOR = {
					has_character_flag = flag_new_consort
					exists = scope:is_being_divorced
					exists = scope:is_being_set_aside
					
					has_relation_potential_lover = root
					has_relation_lover = root
					has_relation_soulmate = root
					
					has_relation_potential_friend = root
					has_relation_friend = root
					has_relation_best_friend = root

					has_variable = favor

					has_character_modifier = forgotten_consort_modifier
				}
				harem_politics_favored_consort_trigger = no
				age >= 23
			}
			weight = {
				base = 50
				modifier = { #Rivals
					add = 25
					OR = {	
						has_relation_rival = root
						has_relation_nemesis = root
					}
				}
				modifier = { #The PS
					exists = root.primary_spouse
					NOT = {		
						this = root.primary_spouse
					}
					add = 10
				}
				modifier = { #The GC
					NOT = {		
						has_court_position = grand_consort_court_position
					}
					add = 5
				}
				modifier = { #Spouses
					is_married = no
					add = 5
				}
				modifier = { #Lowborns
					is_lowborn = yes
					add = 5
				}
				modifier = { #Not with positive traits
					OR = {
						has_trait = intellect_good
						has_trait = physique_good
						has_trait = beauty_good
					}
					add = -5
				}
				modifier = { #Negative traits
					OR = {
						has_trait = intellect_bad
						has_trait = physique_bad
						has_trait = beauty_bad
					}
					add = 10
				}
				
				modifier = { #Childless
					any_child = {
						is_child_of = root
						count = 0
					}
					add = 10
				}
				modifier = { #Player heir
					any_child = {
						is_player_heir_of = root
					}
					add = -15
				}
				modifier = { #Player heir
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_close_family_of = root
						}
						NOT = { is_child_of = root }
					}
					add = -25
				}
				modifier = { #Old age
					age >= 30
					add = 10
				}
				modifier = { #Fertility
					fertility <= low_fertility
					add = 10
				}
				modifier = { #Foreigners
					NOT = {
						culture = root.culture
					}
					add = 10
				}
				modifier = { #Faith
					NOT = {
						faith = root.faith
					}
					add = 10
				}
				
				modifier = { #Unfavored consorts
					has_character_modifier = unfavored_consort_modifier
					add = 15
				}

				opinion_modifier = { #Opinion
					who = root
					opinion_target = prev
					min = -50
					max = 50
					multiplier = -1
				}

				compatibility_modifier = { #Trait compatibility
					compatibility_target = root
					min = -50
					max = 50
					multiplier = -1
				}
			}
			save_scope_as = unfavored_consort
		}
		if = {
			limit = {
				exists = scope:unfavored_consort
			}
			scope:unfavored_consort = {
				if = {
					limit = {
						harem_politics_unfavored_consort_trigger = no
					}
					add_character_modifier = {
						modifier = unfavored_consort_modifier
						years = 5
					}
					add_opinion = {
						target = root
						modifier = disappointed_opinion
						opinion = -10
					}
				}
				else_if = {
					limit = {
						has_character_modifier = unfavored_consort_modifier
					}
					remove_character_modifier = unfavored_consort_modifier
					add_character_modifier = {
						modifier = forgotten_consort_modifier
						years = 5
					}
					add_opinion = {
						target = root
						modifier = disappointed_opinion
						opinion = -10
					}
				}
			}
			random_list = {
				50 = {
					modifier = {
						any_consort = {
							count <= 9
						}
						add = -20
					}
					modifier = {
						any_consort = {
							count >= 15
						}
						add = 10
					}
					add_character_flag = {
						flag = had_unfavored_consort_flag
						months = 9
					}
				}
				50 = {	
					modifier = {
						any_consort = {
							count <= 9
						}
						add = -20
					}
					modifier = {
						any_consort = {
							count >= 15
						}
						add = 10
					}
					add_character_flag = {
						flag = had_unfavored_consort_flag
						months = 18
					}
				}
				50 = {			
					add_character_flag = {
						flag = had_unfavored_consort_flag
						years = 2
					}
				}
				50 = {
					add_character_flag = {
						flag = had_unfavored_consort_flag
						years = 4
					}
				}
			}
		}
	}
	
}

########################
##Choose your approach##
########################
consort_events.0011 = {
	type = character_event
	title = consort_events.0011.t
	desc = consort_events.0011.desc
	theme = corruption
	
	right_portrait = { 	
		character = root
		animation = personality_rational
	}
	
	trigger = {
		any_consort = {
			any_consort = {
				count >= 3
			}
			is_physically_able_adult = yes
			save_temporary_scope_as = temporary_partner
		}
		OR = {
			AND = {
				is_landed_or_landless_administrative = yes
				any_liege_or_above = { 
					this = scope:temporary_partner
				}
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
					is_landed_or_landless_administrative = yes
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
			has_character_flag = chosen_approach_flag
		}
		is_physically_able_adult = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			is_concubine = yes
		}
		modifier = {
			add = 0.1
			harem_politics_unfavored_consort_trigger = yes
		}
		modifier = {
			add = 0.1
			any_child = {
				count = 0
			}
		}
		modifier = {
			add = 0.1
			is_demoted_consort_trigger = yes
		}
		modifier = {
			add = 0.1
			any_consort = {
				any_consort = {
					count >= 5
				}
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				any_consort = {
					count >= 8
				}
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				any_consort = {
					count >= 12
				}
			}
		}
		modifier = {
			add = -0.25
			any_consort = {
				any_consort = {
					OR = {
						has_character_modifier = scheming_consort_modifier
						has_character_modifier = diplomatic_consort_modifier
					}
				}
			}
		}
		modifier = {
			add = 0.10
			harem_politics_special_consort_trigger = yes
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				any_consort = {
					count >= 3
				}
			}
			save_scope_as = partner
		}
	}
	
	#Scheming consort
	option = {
		name = consort_events.0011.a
		
		add_character_modifier = {
			modifier = scheming_consort_modifier
			years = 5
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_greed = 0.25
				ai_vengefulness = 0.25
				ai_compassion = -0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Consort Ling
			harem_politics_special_consort_trigger = yes
				add = 15
			}
			modifier = { #The PS has to guard their position
				this = scope:partner.primary_spouse
				add = 10
			}
			modifier = { #The GC has to guard their position
				has_court_position = grand_consort_court_position
				add = 5
			}
			modifier = { #A spouse has to guard their position
				is_married = yes
				add = 5
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}

			modifier = { #Intrigue
				add = 10
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 25
				OR = {
					has_focus = intrigue_intimidation_focus
					has_focus = intrigue_skulduggery_focus
					has_focus = intrigue_temptation_focus
				}
			}

			modifier = { #Traits
				add = 15
				has_trait = deceitful
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}

			modifier = { #Traits
				add = 15
				has_trait = schemer
			}
			modifier = { #Traits
				add = 15
				has_trait = torturer
			}
			modifier = { #Traits
				add = 15
				has_trait = seducer
			}

			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_intrigue_3
					has_trait = education_intrigue_4
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_intrigue_1
					has_trait = education_intrigue_2
				}
			}

			modifier = { #Favor
				add = 10
				harem_politics_favored_consort_trigger = yes
			}

			modifier = { #Favor
				add = 10
				harem_politics_unfavored_consort_trigger = yes
			}
			modifier = { #Favor
				add = 10
				has_character_modifier = forgotten_consort_modifier
			}

			modifier = { #Demotion
				add = 10
				is_demoted_consort_trigger = yes
			}

			#GC - High aptitude
			modifier = {
				scope:partner = {
					employs_court_position = grand_consort_court_position
					any_court_position_holder = {
						type = grand_consort_court_position
						aptitude:grand_consort_court_position >= 3
						has_character_flag = gc_promoting_harmony
					}
				}
				add = -10
			}
			modifier = {
				scope:partner = {
					employs_court_position = grand_consort_court_position
					any_court_position_holder = {
						type = grand_consort_court_position
						aptitude:grand_consort_court_position >= 4
						has_character_flag = gc_promoting_harmony
					}
				}
				add = -10
			}
			modifier = {
				scope:partner = {
					employs_court_position = grand_consort_court_position
					any_court_position_holder = {
						type = grand_consort_court_position
						aptitude:grand_consort_court_position = 5
						has_character_flag = gc_promoting_harmony
					}
				}
				add = -10
			}
			#GC - Low aptitude
			modifier = {
				scope:partner = {
					employs_court_position = grand_consort_court_position
					any_court_position_holder = {
						type = grand_consort_court_position
						aptitude:grand_consort_court_position <= 2
						has_character_flag = gc_promoting_harmony
					}
				}
				add = 10
			}
			modifier = {
				scope:partner = {
					employs_court_position = grand_consort_court_position
					any_court_position_holder = {
						type = grand_consort_court_position
						aptitude:grand_consort_court_position = 1
						has_character_flag = gc_promoting_harmony
					}
				}
				add = 10
			}
		}
	}
	
	#Diplomatic consort
	option = {
		name = consort_events.0011.b
		
		add_character_modifier = {
			modifier = diplomatic_consort_modifier
			years = 5
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = -0.25
				ai_greed = -0.25
				ai_vengefulness = -0.25
				ai_compassion = 0.25
				ai_honor = 0.25
				ai_energy = -0.15
			}

			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 30
			}

			modifier = { #Diplomacy
				add = 10
				diplomacy >= medium_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= decent_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= high_skill_rating
			}

			modifier = { #Diplomacy
				add = 25
				OR = {
					has_focus = diplomacy_majesty_focus
					has_focus = diplomacy_family_focus
					has_focus = diplomacy_foreign_affairs_focus
				}
			}

			modifier = { #Traits
				add = 15
				has_trait = gregarious
			}
			modifier = { #Traits
				add = 15
				has_trait = patient
			}
			modifier = { #Traits
				add = 15
				has_trait = generous
			}

			modifier = { #Traits
				add = 15
				has_trait = diplomat
			}
			modifier = { #Traits
				add = 15
				has_trait = august
			}
			modifier = { #Traits
				add = 15
				has_trait = family_first
			}

			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_diplomacy_3
					has_trait = education_diplomacy_4
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_diplomacy_1
					has_trait = education_diplomacy_2
				}
			}

			#GC - High aptitude
			modifier = {
				scope:partner = {
					employs_court_position = grand_consort_court_position
					any_court_position_holder = {
						type = grand_consort_court_position
						aptitude:grand_consort_court_position >= 3
						has_character_flag = gc_promoting_harmony
					}
				}
				add = 10
			}
			modifier = {
				scope:partner = {
					employs_court_position = grand_consort_court_position
					any_court_position_holder = {
						type = grand_consort_court_position
						aptitude:grand_consort_court_position >= 4
						has_character_flag = gc_promoting_harmony
					}
				}
				add = 10
			}
			modifier = {
				scope:partner = {
					employs_court_position = grand_consort_court_position
					any_court_position_holder = {
						type = grand_consort_court_position
						aptitude:grand_consort_court_position = 5
						has_character_flag = gc_promoting_harmony
					}
				}
				add = 10
			}
			#GC - Low aptitude
			modifier = {
				scope:partner = {
					employs_court_position = grand_consort_court_position
					any_court_position_holder = {
						type = grand_consort_court_position
						aptitude:grand_consort_court_position <= 2
						has_character_flag = gc_promoting_harmony
					}
				}
				add = -10
			}
			modifier = {
				scope:partner = {
					employs_court_position = grand_consort_court_position
					any_court_position_holder = {
						type = grand_consort_court_position
						aptitude:grand_consort_court_position = 1
						has_character_flag = gc_promoting_harmony
					}
				}
				add = -10
			}
		}
	}
	
	#No focus
	option = {
		name = consort_events.0011.c
		flavor = consort_events.0011.c_tt
		ai_chance = {
			base = 25
			modifier = { #Traits
				add = 15
				has_trait = humble
			}
			modifier = { #Traits
				add = 15
				has_trait = just
			}
			modifier = { #Traits
				add = 15
				has_trait = content
			}
			modifier = { #Traits
				add = 15
				has_trait = shy
			}
			modifier = { #Traits
				add = 15
				has_trait = craven
			}
		}
	}
	after = {
		add_character_flag = {
			flag = chosen_approach_flag
			years = 5
		}
	}
}

####################
##Choosing an ally##
####################
scripted_trigger potential_ally_trigger = {
	is_physically_able_adult = yes
	is_courtier_of = scope:temporary_partner
	is_demoted_consort_trigger = no
	NOT = { 
		this = root
	}
	can_set_relation_friend_trigger = { CHARACTER = root }
	OR = {
		AND = {
			exists = $PARTNER$.primary_spouse
			this = $PARTNER$.primary_spouse
		}
		has_court_position = grand_consort_court_position
		has_court_position = chief_eunuch_court_position
		has_court_position = lady_in_waiting_court_position
		AND = {
			harem_politics_favored_consort_trigger = yes
			is_consort_of = $PARTNER$
		}
		is_parent_of = $PARTNER$
		trigger_if = {
			limit = {
				$PARTNER$.religion = religion:islam_religion
			}
			is_valid_harem_member_trigger = {
				LIEGE = $PARTNER$
			}
			NOT = { is_consort_of = root }
		}
	}
}
consort_events.0012 = {
	type = character_event
	title = consort_events.0012.t
	desc = consort_events.0012.desc
	theme = corruption
	
	left_portrait = { 	
		character = root
		animation = personality_rational
	}
	right_portrait = { 	
		character = scope:partner
		animation = flirtation
	}
	lower_left_portrait = {
		character = scope:third_target
	}
	lower_center_portrait = {
		character = scope:first_target
	}
	lower_right_portrait = {
		character = scope:second_target
	}
	
	trigger = {
		any_consort = {
			is_physically_able_adult = yes
			save_temporary_scope_as = temporary_partner
			any_courtier = {
				potential_ally_trigger = {
					PARTNER = scope:temporary_partner
				}
				count >= 3
			}
			any_consort = {
				is_physically_able_adult = yes
				is_courtier_of = scope:temporary_partner
				count >= 3
			}
		}
		OR = {
			AND = {
				is_landed_or_landless_administrative = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
					is_landed_or_landless_administrative = yes
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside

			has_character_flag = chosen_ally_flag
			
			has_relation_friend = scope:temporary_partner
			has_relation_best_friend = scope:temporary_partner
			has_relation_lover = scope:temporary_partner
			has_relation_soulmate = scope:temporary_partner
			
		}

		any_scheme = {
			scheme_type = seduce
			count = 0
		}
		any_scheme = {
			scheme_type = courting
			count = 0
		}
		any_scheme = {
			scheme_type = befriend
			count = 0
		}
		any_scheme = {
			scheme_type = sway
			count = 0
		}
		
		is_physically_able_adult = yes
		harem_politics_favored_consort_trigger = no
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.15
			is_concubine = yes
		}
		modifier = {
			add = 0.10
			harem_politics_unfavored_consort_trigger = yes
		}
		modifier = {
			add = 0.10
			has_character_modifier = forgotten_consort_modifier
		}
		modifier = {
			add = 0.10
			any_child = {
				count = 0
			}
		}
		modifier = {
			add = 0.1
			is_demoted_consort_trigger = yes
		}
		modifier = {
			add = 0.1
			any_consort = {
				any_consort = {
					count >= 5
				}
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				any_consort = {
					count >= 8
				}
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				any_consort = {
					count >= 12
				}
			}
		}
		modifier = {
			add = 0.10
			OR = {	
				has_character_flag = flag_yanwan
				has_character_flag = flag_nurbanu
				has_character_flag = flag_mei
			}
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				is_physically_able_adult = yes
				OR = {
					AND = {
						exists = primary_spouse
						primary_spouse = {
							is_physically_able_adult = yes
							exists = court_owner
							court_owner = {
								any_consort = {
									this = root
								}
							}
							NOT = { 
								this = root
							}
							can_set_relation_friend_trigger = { CHARACTER = root }
						}
					}
					any_consort = {
						is_physically_able_adult = yes
						has_court_position = grand_consort_court_position
						exists = court_owner
						court_owner = {
							any_consort = {
								this = root
							}
						}
						NOT = { 
							this = root
						}
						is_demoted_consort_trigger = no
						can_set_relation_friend_trigger = { CHARACTER = root }
					}
					any_consort = {
						is_physically_able_adult = yes
						exists = court_owner
						court_owner = {
							any_consort = {
								this = root
							}
						}
						harem_politics_favored_consort_trigger = yes
						NOT = { 
							this = root
						}
						is_demoted_consort_trigger = no
						can_set_relation_friend_trigger = { CHARACTER = root }
					}
					any_parent = {
						is_physically_able_adult = yes
						exists = court_owner
						court_owner = {
							any_consort = {
								this = root
							}
						}
						NOT = { 
							this = root
						}
						can_set_relation_friend_trigger = { CHARACTER = root }
					}
				}
				any_consort = {
					is_physically_able_adult = yes
					exists = court_owner
					court_owner = {
						any_consort = {
							this = root
						}
					}
					count >= 3
				}
			}
			save_scope_as = partner
		}
		scope:partner = {
			every_courtier = {
				limit = {
					potential_ally_trigger = {
						PARTNER = scope:partner
					}
				}
				add_to_list = potential_targets_list
			}
			hidden_effect = {
				while = {
					count = 3
					random_in_list = {
						list = potential_targets_list
						weight = {
							base = 1
							modifier = {
								is_valid_harem_member_trigger = {
									LIEGE = scope:partner
								}
								add = 100
							}
							modifier = {
								is_parent_of = scope:partner
								add = 80
							}
							modifier = {
								exists = scope:partner.primary_spouse
								this = scope:partner.primary_spouse
								add = 50
							}
							modifier = {
								is_close_or_extended_family_of = scope:partner
								add = 30
							}
							modifier = {
								has_court_position = grand_consort_court_position
								add = 20
							}
							modifier = {
								has_court_position = chief_eunuch_court_position
								add = 30
							}
							modifier = {
								has_court_position = lady_in_waiting_court_position
								add = 30
							}
							modifier = {
								harem_politics_favored_consort_trigger = yes
								add = 20
							}
						}
						if = {
							limit = {
								NOT = {
									exists = scope:first_target
								}
							}
							save_scope_as = first_target
						}
						else_if = {
							limit = {
								NOT = {
									exists = scope:second_target
								}
							}
							save_scope_as = second_target
						}
						else = {
							save_scope_as = third_target
						}
						remove_from_list = potential_targets_list
					}
				}
			}
		}
	}
	
	#Seduce partner
	option = {
		name = consort_events.0012.a
		trigger = { 
			NOR = {
				has_relation_rival = scope:partner
				has_relation_nemesis = scope:partner
			}
			can_start_scheme = {
				type = seduce
				target_character = scope:partner
			}
		}
		if = {
			limit = {
				NOT = {
					any_scheme = {
						scheme_type = seduce
						scheme_target_character = scope:partner
					}
				}
			}
			start_scheme = {
				type = seduce
				target_character = scope:partner
			}
		}
		stress_impact = {
			chaste = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 75
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}

			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = yes
				add = 30
			}

			modifier = { #Traits
				add = 10
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 10
				has_trait = lustful
			}
			modifier = { #Traits
				add = 10
				has_trait = greedy
			}
			modifier = { #Traits
				add = -25
				has_trait = chaste
			}
			modifier = { #Traits
				add = -25
				has_trait = shy
			}
			modifier = { #Traits
				add = 15
				has_trait = seducer
			}

			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}

			modifier = { #Consort Ling
				add = 15
				OR = {	
					has_character_flag = flag_yanwan
					has_character_flag = flag_nurbanu
				}
			}

			modifier = { #Opinion
				add = 10
				opinion = {
					target = scope:partner
					value >= 10
				}
			}
			modifier = { #Opinion
				add = 10
				opinion = {
					target = scope:partner
					value >= 30
				}
			}

			modifier = { #Intrigue
				add = 10
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= high_skill_rating
			}

			modifier = { #Intrigue
				add = 25
				OR = {
					has_focus = intrigue_intimidation_focus
					has_focus = intrigue_skulduggery_focus
					has_focus = intrigue_temptation_focus
				}
			}
			
			modifier = { #Education
				add = 20
				OR = {
					has_trait = education_intrigue_3
					has_trait = education_intrigue_4
				}
			}
			modifier = { #Education
				add = 10
				OR = {
					has_trait = education_intrigue_1
					has_trait = education_intrigue_2
				}
			}
			
			modifier = { #Unfavored
				add = 10
				harem_politics_unfavored_consort_trigger = yes
			}
			modifier = { #Unfavored
				add = 10
				has_character_modifier = forgotten_consort_modifier
			}
		}
	}
	
	#Sway first_target
	option = {
		name = consort_events.0012.b
		trigger = { 
			NOR = {
				has_relation_rival = scope:first_target
				has_relation_nemesis = scope:first_target
			}
			OR = {
				can_start_scheme = {
					type = befriend
					target_character = scope:first_target
				}
				can_start_scheme = {
					type = sway
					target_character = scope:first_target
				}
			}
		}
		if = {
			limit = {
				AND = {
					NOT = {
						any_scheme = {
							scheme_type = befriend
							scheme_target_character = scope:first_target
						}
					}
					can_start_scheme = {
						type = befriend
						target_character = scope:first_target
					}
				}
			}
			start_scheme = {
				type = befriend
				target_character = scope:first_target
			}
		}
		else_if = {
			limit = {
				AND = {
					NOT = {
						any_scheme = {
							scheme_type = sway
							scheme_target_character = scope:first_target
						}
					}
					can_start_scheme = {
						type = sway
						target_character = scope:first_target
					}
				}
			}
			start_scheme = {
				type = sway
				target_character = scope:first_target
			}
		}
		stress_impact = {
			shy = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_sociability = 0.5
				ai_energy = 0.15
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 30
			}
			modifier = { #Traits
				add = 10
				has_trait = gregarious
			}
			modifier = { #Traits
				add = 10
				has_trait = chaste
			}
			modifier = { #Traits
				add = -25
				has_trait = shy
			}
			modifier = { #Diplomatic Consorts
				add = 15
				has_character_modifier = diplomatic_consort_modifier
			}
			opinion_modifier = {
				opinion_target = scope:first_target
				multiplier = 0.15
			}
			
			modifier = { #Diplomacy
				add = 10
				diplomacy >= medium_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= decent_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= high_skill_rating
			}

			modifier = { # The HH
				add = 20
				scope:first_target = {
					OR = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
						is_parent_of = scope:partner
					}
				}
			}
			modifier = { # The PS
				add = 15
				scope:first_target = {
					exists = scope:partner.primary_spouse
					this = scope:partner.primary_spouse
					NOT = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
					}
				}
			}
			modifier = { # A relative
				add = 10
				scope:first_target = {
					is_close_or_extended_family_of = scope:partner
					NOR = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
						is_parent_of = scope:partner
					}
				}
			}
			modifier = { #GC
				add = 5
				scope:first_target = {
					has_court_position = grand_consort_court_position
					NOT = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
					}
				}
			}
			modifier = { #Favor
				add = 5
				scope:first_target = {
					harem_politics_favored_consort_trigger = yes
				}
			}
			modifier = { #Favor
				add = 5
				scope:first_target = {
					is_consort_of = scope:partner
					NOT = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
					}
				}
			}
			modifier = {
				scope:first_target = {
					has_court_position = chief_eunuch_court_position
				}
				add = 10
			}
			modifier = {
				scope:first_target = {
					has_court_position = lady_in_waiting_court_position
				}
				add = 10
			}
		}
	}
	
	#Sway second_target
	option = {
		name = consort_events.0012.c
		trigger = { 
			exists = scope:second_target
			NOR = {
				has_relation_rival = scope:second_target
				has_relation_nemesis = scope:second_target
			}
			OR = {
				can_start_scheme = {
					type = befriend
					target_character = scope:second_target
				}
				can_start_scheme = {
					type = sway
					target_character = scope:second_target
				}
			}
		}
		if = {
			limit = {
				AND = {
					NOT = {
						any_scheme = {
							scheme_type = befriend
							scheme_target_character = scope:second_target
						}
					}
					can_start_scheme = {
						type = befriend
						target_character = scope:second_target
					}
				}
			}
			start_scheme = {
				type = befriend
				target_character = scope:second_target
			}
		}
		else_if = {
			limit = {
				AND = {
					NOT = {
						any_scheme = {
							scheme_type = sway
							scheme_target_character = scope:second_target
						}
					}
					can_start_scheme = {
						type = sway
						target_character = scope:second_target
					}
				}
			}
			start_scheme = {
				type = sway
				target_character = scope:second_target
			}
		}
		stress_impact = {
			shy = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_sociability = 0.5
				ai_energy = 0.15
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 30
			}
			modifier = { #Traits
				add = 10
				has_trait = gregarious
			}
			modifier = { #Traits
				add = 10
				has_trait = chaste
			}
			modifier = { #Traits
				add = -25
				has_trait = shy
			}
			modifier = { #Diplomatic Consorts
				add = 15
				has_character_modifier = diplomatic_consort_modifier
			}
			opinion_modifier = {
				opinion_target = scope:second_target
				multiplier = 0.15
			}
			
			modifier = { #Diplomacy
				add = 10
				diplomacy >= medium_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= decent_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= high_skill_rating
			}

			modifier = { # The HH
				add = 20
				scope:second_target = {
					OR = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
						is_parent_of = scope:partner
					}
				}
			}
			modifier = { # The PS
				add = 15
				scope:second_target = {
					exists = scope:partner.primary_spouse
					this = scope:partner.primary_spouse
					NOT = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
					}
				}
			}
			modifier = { # A relative
				add = 10
				scope:second_target = {
					is_close_or_extended_family_of = scope:partner
					NOR = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
						is_parent_of = scope:partner
					}
				}
			}
			modifier = { #GC
				add = 5
				scope:second_target = {
					has_court_position = grand_consort_court_position
					NOT = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
					}
				}
			}
			modifier = { #Favor
				add = 5
				scope:second_target = {
					harem_politics_favored_consort_trigger = yes
				}
			}
			modifier = { #Favor
				add = 5
				scope:second_target = {
					is_consort_of = scope:partner
					NOT = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
					}
				}
			}
			modifier = {
				scope:second_target = {
					has_court_position = chief_eunuch_court_position
				}
				add = 10
			}
			modifier = {
				scope:second_target = {
					has_court_position = lady_in_waiting_court_position
				}
				add = 10
			}
		}
	}

	#Sway third_target
	option = {
		name = consort_events.0012.d
		trigger = { 
			exists = scope:third_target
			NOR = {
				has_relation_rival = scope:third_target
				has_relation_nemesis = scope:third_target
			}
			OR = {
				can_start_scheme = {
					type = befriend
					target_character = scope:third_target
				}
				can_start_scheme = {
					type = sway
					target_character = scope:third_target
				}
			}
		}
		if = {
			limit = {
				AND = {
					NOT = {
						any_scheme = {
							scheme_type = befriend
							scheme_target_character = scope:third_target
						}
					}
					can_start_scheme = {
						type = befriend
						target_character = scope:third_target
					}
				}
			}
			start_scheme = {
				type = befriend
				target_character = scope:third_target
			}
		}
		else_if = {
			limit = {
				AND = {
					NOT = {
						any_scheme = {
							scheme_type = sway
							scheme_target_character = scope:third_target
						}
					}
					can_start_scheme = {
						type = sway
						target_character = scope:third_target
					}
				}
			}
			start_scheme = {
				type = sway
				target_character = scope:third_target
			}
		}
		stress_impact = {
			shy = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_sociability = 0.5
				ai_energy = 0.15
			}
			modifier = { #Evil consort
				harem_politics_evil_consort_trigger = no
				add = 30
			}
			modifier = { #Traits
				add = 10
				has_trait = gregarious
			}
			modifier = { #Traits
				add = 10
				has_trait = chaste
			}
			modifier = { #Traits
				add = -25
				has_trait = shy
			}
			modifier = { #Diplomatic Consorts
				add = 15
				has_character_modifier = diplomatic_consort_modifier
			}
			opinion_modifier = {
				opinion_target = scope:third_target
				multiplier = 0.15
			}
			
			modifier = { #Diplomacy
				add = 10
				diplomacy >= medium_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= decent_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy >= high_skill_rating
			}

			modifier = { # The HH
				add = 20
				scope:third_target = {
					OR = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
						is_parent_of = scope:partner
					}
				}
			}
			modifier = { # The PS
				add = 15
				scope:third_target = {
					exists = scope:partner.primary_spouse
					this = scope:partner.primary_spouse
					NOT = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
					}
				}
			}
			modifier = { # A relative
				add = 10
				scope:third_target = {
					is_close_or_extended_family_of = scope:partner
					NOR = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
						is_parent_of = scope:partner
					}
				}
			}
			modifier = { #GC
				add = 5
				scope:third_target = {
					has_court_position = grand_consort_court_position
					NOT = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
					}
				}
			}
			modifier = { #Favor
				add = 5
				scope:third_target = {
					harem_politics_favored_consort_trigger = yes
				}
			}
			modifier = { #Favor
				add = 5
				scope:third_target = {
					is_consort_of = scope:partner
					NOT = {
						is_head_of_the_harem_trigger = {
							LIEGE = scope:partner
						}
					}
				}
			}
			modifier = {
				scope:third_target = {
					has_court_position = chief_eunuch_court_position
				}
				add = 10
			}
			modifier = {
				scope:third_target = {
					has_court_position = lady_in_waiting_court_position
				}
				add = 10
			}
		}
	}
	
	#No ally
	option = {
		name = consort_events.0011.c
		flavor = consort_events.0011.c_tt
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_sociability = 0.5
				ai_greed = -0.20
				ai_energy = -0.15
			}
			modifier = { #Traits
				add = 15
				has_trait = content
			}
			modifier = { #Traits
				add = 25
				has_trait = shy
			}
			modifier = { #Traits
				add = 15
				has_trait = craven
			}
			modifier = { #Intrigue
				add = 10
				intrigue < medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue <= mediocre_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue <= low_skill_rating
			}
			
			modifier = { #Diplomacy
				add = 10
				diplomacy < medium_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy <= mediocre_skill_rating
			}
			modifier = { #Diplomacy
				add = 5
				diplomacy <= low_skill_rating
			}
		}
	}
	after = {
		add_character_flag = {
			flag = chosen_ally_flag
			years = 5
		}
	}
}

#########################
##Killing the main heir##
#########################
consort_events.0013 = {
	type = character_event
	title = consort_events.0013.t
	desc = consort_events.0013.desc
	theme = corruption
	
	left_portrait = { 	
		character = root
		animation = personality_dishonorable
	}
	right_portrait = { 	
		character = scope:eligible_child
		animation = personality_honorable
	}
	lower_center_portrait = {
		character = scope:partner.primary_heir
	}
	
	trigger = {
		any_consort = {
			is_physically_able_adult = yes
			save_temporary_scope_as = temporary_partner
		}
		scope:temporary_partner = {
			is_landed_or_landless_administrative = yes
			primary_heir ?= {
				is_child_of = prev
				NOT = {
					is_child_of = root
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
			has_character_flag = considered_killing_main_heir
			scope:temporary_partner = {
				any_consort = {
					any_scheme = {
						scheme_type = murder
						scheme_target_character = scope:temporary_partner.primary_heir
					}
				}
			}
		}
		
		OR = {
			AND = {
				is_landed_or_landless_administrative = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
					is_landed_or_landless_administrative = yes
				}
			}
		}
		is_physically_able_adult = yes
		any_child = { 
			eligible_heir_trigger = { PARTNER = scope:temporary_partner }
			count > 0
		}
		can_start_scheme = {
			type = murder
			target_character = scope:temporary_partner.primary_heir
		}
		any_scheme = {
			scheme_type = murder
			count = 0
		}
		harem_politics_evil_consort_trigger = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			OR = {	
				has_character_flag = flag_yanwan
				has_character_flag = flag_nurbanu
			}
		}
		modifier = {
			add = 0.05
			has_character_flag = flag_mei
		}
		modifier = {
			add = 0.1
			harem_politics_special_consort_trigger = yes
		}
		modifier = {
			add = 0.1
			has_character_modifier = scheming_consort_modifier
		}
		modifier = {
			add = 0.5
			has_trait = ambitious
		}

		#GC - High aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 3
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.15
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 4
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.20
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 5
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.20
		}
		#GC - Low aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position <= 2
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.15
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 1
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.20
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				AND = {
					is_landed_or_landless_administrative = yes
					OR = {
						any_vassal_or_below = {
							this = root
						}
						any_courtier = {
							this = root
						}
					}
					primary_heir ?= {
						is_child_of = prev
						NOT = {
							is_child_of = root
						}
					}
				}
			}
			save_scope_as = partner
		}
		every_child = {
			limit = {
				eligible_heir_trigger = { PARTNER = scope:partner }
			}
			add_to_temporary_list = eligible_heirs_list
		}
		random_in_list = {
			list = eligible_heirs_list
			weight = {
				base = 1
				modifier = { add = age }
			}
			save_scope_as = eligible_child
		}
		scope:partner.primary_heir = {
			save_scope_as = player_primary_heir
		}
	}
	
	#Murder the main heir
	option = {
		name = consort_events.0013.a
		trigger = { 
			can_start_scheme = {
				type = murder
				target_character = scope:partner.primary_heir
			}
		}
		if = {
			limit = {
				NOT = {
					any_scheme = {
						scheme_type = murder
						scheme_target_character = scope:partner.primary_heir
					}
				}
			}
			start_scheme = {
				type = murder
				target_character = scope:partner.primary_heir
			}
		}
		stress_impact = {
			temperate = minor_stress_impact_gain
			calm = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Traits
				add = 15
				has_trait = brave
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}
			modifier = { #Traits
				add = 10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = -15
				has_trait = craven
			}
			modifier = { #Traits
				add = -20
				has_trait = zealous
			}
			modifier = { #Traits
				add = -20
				has_trait = lazy
			}
			modifier = { #Traits
				add = -20
				has_trait = temperate
			}
			modifier = { #Traits
				add = -15
				has_trait = calm
			}
			modifier = { #Traits
				add = -10
				has_trait = shy
			}
			modifier = { #Traits
				add = -10
				has_trait = humble
			}
			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				OR = {	
					has_character_flag = flag_yanwan
					has_character_flag = flag_nurbanu
				}
				add = 10
			}
			modifier = {
				add = 5
				has_character_flag = flag_hailan
			}
			modifier = {
				add = 10
				harem_politics_special_consort_trigger = yes
			}
			opinion_modifier = {
				opinion_target = scope:player_primary_heir
				multiplier = -0.5
			}
			
			
			modifier = { #Intrigue
				add = 5
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= very_high_skill_rating
			}
		}
	}
	
	#No action
	option = {
		name = consort_events.0013.b
		flavor = consort_events.0011.c_tt
		stress_impact = {
			ambitious = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
		}
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_boldness = -0.25
				ai_compassion = 0.25
				ai_greed = -0.25
				ai_honor = 0.25
				ai_energy = -0.15
			}
			modifier = { #Traits
				add = -50
				has_trait = impatient
			}
			modifier = { #Traits
				add = 10
				has_trait = humble
			}
			modifier = { #Traits
				add = 15
				has_trait = temperate
			}
			modifier = { #Traits
				add = 10
				has_trait = calm
			}
			modifier = { #Traits
				add = 10
				has_trait = shy
			}
			modifier = { #Traits
				add = 10
				has_trait = craven
			}
			modifier = { #Traits
				add = 10
				has_trait = lazy
			}
			modifier = { #Traits
				add = -50
				has_trait = greedy
			}
			modifier = { #Traits
				add = -50
				has_trait = ambitious
			}
			modifier = { #Traits
				add = -20
				has_trait = deceitful
			}
			modifier = { #Intrigue
				add = 30
				intrigue < medium_skill_rating
			}
			opinion_modifier = {
				opinion_target = scope:player_primary_heir
				multiplier = 0.5
			}
		}
	}
	after = {
		add_character_flag = {
			flag = considered_killing_main_heir
			years = 5
		}
	}
}

################
##I'm favored!##
################
consort_events.0014 = {
	type = character_event
	title = consort_events.0014.t
	desc = consort_events.0014.desc
	theme = family
	override_background = {
		reference = corridor_day
	}
	
	left_portrait = { 	
		character = root
		animation = personality_greedy
	}
	lower_center_portrait = { 	
		character = scope:partner
	}
	
	trigger = {
		any_consort = {
			is_physically_able_adult = yes
			opinion = {
				target = root
				value >= low_positive_opinion
			}
			save_temporary_scope_as = temporary_partner
			any_consort = {
				is_physically_able_adult = yes
				is_courtier_of = scope:temporary_partner
				NOT = {
					has_variable = favor
				}
				count >= 3
			}
		}
		scope:temporary_partner = {
			OR = {
				AND = {
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						NOT = {
							has_variable = favor
						}
						count <= 8
					}
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						harem_politics_favored_consort_trigger = yes
						count <= 1
					}
				}
				AND = {
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						NOT = {
							has_variable = favor
						}
						count > 8
					}
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						harem_politics_favored_consort_trigger = yes
						count <= 3
					}
				}
			}
		}
		OR = {
			AND = {
				is_landed_or_landless_administrative = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
					is_landed_or_landless_administrative = yes
				}
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside

			has_opinion_modifier = {
				target = scope:temporary_partner
				modifier = forced_me_concubine_marriage_opinion
			}

			has_relation_rival = scope:temporary_partner
			has_relation_nemesis = scope:temporary_partner

			has_variable = favor

			has_character_modifier = beloved_consort_modifier
			has_character_modifier = favor_boost_modifier
		}

		is_demoted_consort_trigger = no
		harem_politics_unfavored_consort_trigger = no
		harem_politics_punished_consort_trigger = no
		hp_accepts_harems = yes

		OR = {
			NOT = {
				has_character_modifier = favored_consort_modifier
			}
			scope:temporary_partner = {
				NOT = {
					any_consort = {
						has_character_modifier = beloved_consort_modifier
					}
				}
			}
		}

		OR = {
			has_relation_friend = scope:temporary_partner
			has_relation_best_friend = scope:temporary_partner
			has_relation_lover = scope:temporary_partner
			has_relation_soulmate = scope:temporary_partner
			any_child = {
				is_child_of = scope:temporary_partner
				count >= 3
			}
		}

		opinion = {
			target = scope:temporary_partner
			value >= low_positive_opinion
		}
		is_physically_able_adult = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = -0.15
			is_concubine = yes
		}
		modifier = {
			add = 0.15
			any_child = {
				count >= 4
			}
		}
		modifier = {
			add = 0.15
			any_consort = {
				any_consort = {
					is_physically_able_adult = yes
					count >= 5
				}
			}
		}
		modifier = {
			add = -0.50
			any_consort = {
				any_consort = {
					has_character_modifier = favored_consort_modifier
					NOT = {
						this = root
					}
				}
			}
		}
		modifier = {
			add = -0.75
			any_consort = {
				any_consort = {
					has_character_modifier = beloved_consort_modifier
				}
			}
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				AND = {
					is_physically_able_adult = yes
					opinion = {
						target = root
						value >= low_positive_opinion
					}
					any_consort = {
						is_physically_able_adult = yes
						exists = court_owner
						court_owner = {
							any_consort = {
								this = root
							}
						}
						count >= 3
					}
				}
			}
			save_scope_as = partner
		}
	}
	
	#I'm favored!
	option = {
		name = consort_events.0014.a
		
		if = {
			limit = {
				harem_politics_favored_consort_trigger = no
			}
			add_character_modifier = {
				modifier = favored_consort_modifier
				years = 5
			}
		}
		else_if = {
			limit = {
				has_character_modifier = favored_consort_modifier
			}
			remove_character_modifier = favored_consort_modifier
			add_character_modifier = {
				modifier = beloved_consort_modifier
				years = 10
			}
		}
		add_opinion = {
			target = scope:partner
			modifier = grateful_opinion
			opinion = 15
		}
		
		stress_impact = {
			arrogant = minor_stress_impact_loss
			ambitious = minor_stress_impact_loss
			greedy = minor_stress_impact_loss
		}
		ai_chance = {
			base = 10
		}
	}
}

#####################
##Unfavored Consort##
#####################

consort_events.0015 = {
	type = character_event
	title = consort_events.0015.t
	desc = consort_events.0015.desc
	theme = family
	override_background = {
		reference = corridor_night
	}
	
	left_portrait = { 	
		character = root
		animation = worry
	}
	lower_center_portrait = { 	
		character = scope:partner
	}
	
	trigger = {
		any_consort = {
			is_physically_able_adult = yes
			opinion = {
				target = root
				value <= 0
			}
			save_temporary_scope_as = temporary_partner
			any_consort = {
				is_physically_able_adult = yes
				is_courtier_of = scope:temporary_partner
				count >= 3
			}
		}

		scope:temporary_partner = {
			OR = {
				AND = {
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						NOT = {
							has_variable = favor
						}
						count <= 3
					}
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						harem_politics_unfavored_consort_trigger = yes
						count <= 1
					}
				}
				AND = {
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						NOT = {
							has_variable = favor
						}
						count <= 6
					}
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						harem_politics_unfavored_consort_trigger = yes
						count <= 2
					}
				}
				AND = {
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						NOT = {
							has_variable = favor
						}
						count <= 9
					}
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						harem_politics_unfavored_consort_trigger = yes
						count <= 4
					}
				}
				AND = {
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						NOT = {
							has_variable = favor
						}
						count > 9
					}
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						harem_politics_favored_consort_trigger = yes
						count <= 5
					}
				}
				AND = {
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						NOT = {
							has_variable = favor
						}
						count > 13
					}
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						harem_politics_favored_consort_trigger = yes
						count <= 9
					}
				}
				AND = {
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						NOT = {
							has_variable = favor
						}
						count > 20
					}
					any_consort = {
						is_physically_able_adult = yes
						is_courtier_of = scope:temporary_partner
						harem_politics_favored_consort_trigger = yes
						count <= 12
					}
				}
			}
		}

		OR = {
			AND = {
				is_landed_or_landless_administrative = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
					is_landed_or_landless_administrative = yes
				}
			}
		}
		
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside

			has_character_modifier = forgotten_consort_modifier

			has_relation_friend = scope:temporary_partner
			has_relation_best_friend = scope:temporary_partner
			has_relation_lover = scope:temporary_partner
			has_relation_soulmate = scope:temporary_partner
			
			has_variable = favor
		}

		is_demoted_consort_trigger = no
		harem_politics_favored_consort_trigger = no

		OR = {
			has_relation_rival = scope:temporary_partner
			has_relation_nemesis = scope:temporary_partner

			AND = {
				age >= 42
				any_child = {
					is_child_of = scope:temporary_partner
					count = 0
				}
			}
		}
		is_physically_able_adult = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			is_concubine = yes
		}
		modifier = {
			add = -0.25
			any_child = {
				count >= 4
			}
		}
		modifier = {
			add = 0.15
			any_consort = {
				any_consort = {
					is_physically_able_adult = yes
					count >= 5
				}
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				any_consort = {
					harem_politics_favored_consort_trigger = yes
				}
			}
		}
		modifier = {
			add = -0.30
			is_married = yes
		}
		modifier = {
			add = -0.50
			any_close_family_member = {
				OR = {	
					highest_held_title_tier >= tier_kingdom
					is_powerful_vassal_of = root
				}
			}
		}
		modifier = {
			add = -0.15
			any_consort = {
				is_vassal_or_below_of = root
			}
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				AND = {
					is_physically_able_adult = yes
					opinion = {
						target = root
						value <= 0
					}
					any_consort = {
						is_physically_able_adult = yes
						exists = court_owner
						court_owner = {
							any_consort = {
								this = root
							}
						}
						count >= 3
					}
				}
			}
			save_scope_as = partner
		}
	}
	
	#I'm unfavored
	option = {
		name = consort_events.0015.a
		
		if = {
			limit = {
				harem_politics_unfavored_consort_trigger = no
			}
			add_character_modifier = {
				modifier = unfavored_consort_modifier
				years = 5
			}
		}
		else_if = {
			limit = { 
				has_character_modifier = unfavored_consort_modifier
			}
			remove_character_modifier = unfavored_consort_modifier
			add_character_modifier = {
				modifier = forgotten_consort_modifier
				years = 10
			}
		}
		
		add_opinion = {
			target = scope:partner
			modifier = ignored_consort_opinion
			opinion = -15
		}
		
		stress_impact = {
			arrogant = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
		}
	}
}

#####################
##No longer demoted##
#####################
consort_events.0016 = {
	hidden = yes
	
	trigger = {
		any_consort = {
			OR = {
				AND = { #A PS who shouldn't be demoted
					exists = root.primary_spouse
					this = root.primary_spouse
					has_demoted_or_divorced_opinion_trigger = {
						TARGET = root
					}
				}
				AND = { #A GC who shouldn't be demoted
					has_court_position = grand_consort_court_position
					OR = {
						has_opinion_modifier = {
							target = root
							modifier = divorced_me_as_gc
						}

						has_opinion_modifier = {
							target = root
							modifier = demoted_me_as_gc
						}

						has_opinion_modifier = {
							modifier = dismissed_me_as_gc
							target = root
						}
					}
				}
				AND = { #A GC who shouldn't be demoted 
					is_spouse_of = root
					OR = {
						has_opinion_modifier = {
							target = root
							modifier = divorced_me_as_ss
						}

						has_opinion_modifier = {
							target = root
							modifier = demoted_me_as_ss
						}

						has_opinion_modifier = {
							modifier = dismissed_me_as_ss
							target = root
						}
					}
				}
			}
		}
	}
	
	weight_multiplier = {
		base = 1
	}
	
	immediate = {
		if = { #The PS
			limit = {
				any_consort = {
					exists = root.primary_spouse
					this = root.primary_spouse
					has_demoted_or_divorced_opinion_trigger = {
						TARGET = root
					}
				}
			}
			random_consort = {
				limit = {
					this = root.primary_spouse
				}
				save_scope_as = previous_primary_spouse
				consort_reinstatement_effect = {
					REINSTATOR = root
					REINSTATED = scope:previous_primary_spouse
				}
			}
		}

		if = { #The GC
			limit = {
				any_consort = {
					has_court_position = grand_consort_court_position
					OR = {
						has_opinion_modifier = {
							target = root
							modifier = divorced_me_as_gc
						}

						has_opinion_modifier = {
							target = root
							modifier = demoted_me_as_gc
						}

						has_opinion_modifier = {
							modifier = dismissed_me_as_gc
							target = root
						}
					}
				}
			}
			random_consort = {
				limit = {
					has_court_position = grand_consort_court_position
				}
				save_scope_as = previous_grand_consort
				consort_reinstatement_effect = {
					REINSTATOR = root
					REINSTATED = scope:previous_grand_consort
				}
			}
		}

		if = { #The SS
			limit = {
				any_consort = {
					is_spouse_of = root
					OR = {
						has_opinion_modifier = {
							target = root
							modifier = divorced_me_as_ss
						}

						has_opinion_modifier = {
							target = root
							modifier = demoted_me_as_ss
						}

						has_opinion_modifier = {
							modifier = dismissed_me_as_ss
							target = root
						}
					}
				}
			}
			random_consort = {
				limit = {
					is_spouse_of = root
					OR = {
						has_opinion_modifier = {
							target = root
							modifier = divorced_me_as_ss
						}

						has_opinion_modifier = {
							target = root
							modifier = demoted_me_as_ss
						}

						has_opinion_modifier = {
							modifier = dismissed_me_as_ss
							target = root
						}
					}
				}
				save_scope_as = previous_spouse
				consort_reinstatement_effect = {
					REINSTATOR = root
					REINSTATED = scope:previous_spouse
				}
			}
		}
	}
}

#####################
##Killing a consort##
#####################
consort_events.0017 = {
	type = character_event
	title = consort_events.0017.t
	desc = consort_events.0017.desc
	theme = corruption
	override_background = {
		reference = bedchamber
	}
	
	left_portrait = { 	
		character = root
		animation = personality_dishonorable
	}
	right_portrait = { 	
		character = scope:consort_target
		animation = flirtation
	}
	
	trigger = {
		harem_politics_evil_consort_trigger = yes
		hp_accepts_harems = yes

		is_physically_able_adult = yes

		any_consort = {
			count = 1
		}
		any_consort = {
			is_landed_or_landless_administrative = yes
			is_physically_able_adult = yes
			any_consort = {
				is_physically_able_adult = yes
				count >= 4
			}
			save_temporary_scope_as = temporary_partner
			any_consort = {
				target_consort_trigger = { PARTNER = scope:temporary_partner }
				save_temporary_scope_as = temporary_target_consort
			}
		}

		any_scheme = {
			scheme_type = murder
			count = 0
		}
		can_start_scheme = {
			type = murder
			target_character = scope:temporary_target_consort
		}
		
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside

			has_character_flag = considered_killing_consort

			has_opinion_modifier = {
				modifier = forced_me_concubine_marriage_opinion
				target = scope:temporary_partner
			}
		}
		
		OR = {
			has_trait = ambitious
			has_trait = greedy
			has_trait = deceitful

			harem_politics_special_consort_trigger = yes
		}
		OR = {
			AND = {
				is_landed_or_landless_administrative = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
					is_landed_or_landless_administrative = yes
				}
			}
		}
		OR = {
			AND = {
				is_travelling = yes
				current_travel_plan ={
					travel_plan_owner = scope:temporary_partner
				}
			}
			AND = {
				is_travelling = no
				scope:temporary_partner = {
					is_travelling = no
				}
			}
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			OR = {	
				has_character_flag = flag_yanwan
				has_character_flag = flag_nurbanu
			}
		}
		modifier = {
			add = 0.05
			has_character_flag = flag_mei
		}
		modifier = {
			add = 0.1
			harem_politics_special_consort_trigger = yes
		}
		modifier = {
			add = 0.1
			has_character_modifier = scheming_consort_modifier
		}
		modifier = {
			add = 0.1
			harem_politics_unfavored_consort_trigger = yes
		}
		modifier = {
			add = 0.1
			has_trait = ambitious
		}
		modifier = {
			add = 0.1
			has_trait = greedy
		}
		modifier = {
			add = 0.1
			has_trait = arrogant
		}
		modifier = {
			add = -0.25
			has_trait = shy
		}
		modifier = {
			add = -0.25
			has_trait = craven
		}
		modifier = {
			add = -0.25
			has_trait = calm
		}
		modifier = {
			add = -0.15
			intrigue <= medium_skill_rating
		}
		modifier = {
			add = -0.15
			intrigue <= mediocre_skill_rating
		}
		modifier = {
			add = -0.15
			intrigue <= low_skill_rating
		}

		#GC - High aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 3
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.15
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 4
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.2
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 5
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.2
		}
		#GC - Low aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position <= 2
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.15
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 1
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.2
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_physically_able_adult = yes
				any_consort = {
					is_physically_able_adult = yes
					count >= 3
				}
			}
			save_scope_as = partner
		}
		scope:partner = {
			every_consort = {
				limit = {
					target_consort_trigger = { PARTNER = scope:partner }
					root = {
						can_start_scheme = {
							type = murder
							target_character = prev
						}
					}
				}
				add_to_list = target_consort_list
			}
			
		}

		random_in_list = {
			list = target_consort_list
			weight = {
				base = 40
				modifier = {
					exists = scope:partner.primary_spouse
					this = scope:partner.primary_spouse
					add = 20
				}
				modifier = {
					has_court_position = grand_consort_court_position
					is_married = yes
					add = 15
				}

				modifier = {
					is_married = yes
					NOT = {
						has_court_position = grand_consort_court_position
					}
					add = 10
				}
				modifier = {
					is_married = no
					has_court_position = grand_consort_court_position
					add = 10
				}

				modifier = {
					has_character_modifier = beloved_consort_modifier
					add = 20
				}
				modifier = {
					has_character_modifier = favor_boost_modifier
					add = 15
				}
				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 10
				}

				modifier = {
					has_relation_nemesis = root
					add = 25
				}
				modifier = {
					has_relation_rival = root
					add = 20
				}
				modifier = {
					has_relation_potential_rival = root
					add = 15
				}

				modifier = {
					has_relation_potential_friend = root
					add = -5
				}
				modifier = {
					has_relation_friend = root
					add = -15
				}

				modifier = {
					has_relation_potential_lover = root
					add = -10
				}
				
				modifier = {
					any_child = {
						is_primary_heir_of = scope:partner
					}
					add = 10
				}

				modifier = {
					has_trait = beauty_good_1
					add = 5
				}
				modifier = {
					has_trait = beauty_good_2
					add = 10
				}
				modifier = {
					has_trait = beauty_good_3
					add = 20
				}
			}
			save_scope_as = consort_target
		}
	}
	
	#Murder the consort_target
	option = {
		name = consort_events.0017.a
		trigger = { 
			can_start_scheme = {
				type = murder
				target_character = scope:consort_target
			}
		}
		if = {
			limit = {
				NOT = {
					any_scheme = {
						scheme_type = murder
						scheme_target_character = scope:consort_target
					}
				}
			}
			start_scheme = {
				type = murder
				target_character = scope:consort_target
			}
		}
		stress_impact = {
			temperate = minor_stress_impact_gain
			calm = minor_stress_impact_gain
			compassionate = major_stress_impact_gain
			honest = medium_stress_impact_gain
			just = medium_stress_impact_gain
		}
		
		ai_chance = {
			base = 25
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}
			modifier = { #Traits
				add = 15
				has_trait = brave
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}
			
			modifier = { #Traits
				add = 10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = -15
				has_trait = craven
			}
			modifier = { #Traits
				add = -20
				has_trait = zealous
			}
			modifier = { #Traits
				add = -10
				has_trait = lazy
			}
			modifier = { #Traits
				add = -25
				has_trait = temperate
			}
			modifier = { #Traits
				add = -25
				has_trait = calm
			}
			modifier = { #Traits
				add = -15
				has_trait = shy
			}
			modifier = { #Traits
				add = -10
				has_trait = content
			}
			modifier = { #Traits
				add = -25
				has_trait = compassionate
			}
			modifier = { #Traits
				add = -25
				has_trait = honest
			}
			modifier = { #Traits
				add = -25
				has_trait = just
			}

			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				OR = {	
					has_character_flag = flag_yanwan
					has_character_flag = flag_nurbanu
				}
				add = 10
			}
			modifier = { #Consort Ling
				has_character_flag = flag_mei
				add = 5
			}
			modifier = { #Consort Ling
			harem_politics_special_consort_trigger = yes
				add = 5
			}

			opinion_modifier = {
				opinion_target = scope:consort_target
				multiplier = -0.25
			}

			modifier = {
				add = 10
				has_relation_potential_rival = scope:consort_target
			}
			modifier = {
				add = 15
				has_relation_rival = scope:consort_target
			}
			modifier = {
				add = 20
				has_relation_nemesis = scope:consort_target
			}
			
			modifier = { #Intrigue
				add = 5
				intrigue >= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= decent_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue >= very_high_skill_rating
			}

			modifier = {
				add = 10
				scope:consort_target = {
					harem_politics_favored_consort_trigger = yes
				}
			}
			modifier = {
				add = 5
				scope:consort_target = {
					harem_politics_favored_consort_trigger = yes
				}
				harem_politics_favored_consort_trigger = yes
			}

			modifier = {
				add = 10
				scope:consort_target = {
					has_trait = beauty_good_2
				}
			}
			modifier = {
				add = 20
				scope:consort_target = {
					has_trait = beauty_good_3
				}
			}

			modifier = {
				add = 15
				scope:consort_target = {
					has_character_modifier = favor_boost_modifier
				}
			}
		}
	}
	
	#No action
	option = {
		name = consort_events.0013.b
		flavor = consort_events.0011.c_tt
		stress_impact = {
			ambitious = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
		}
		ai_chance = {
			base = 40
			ai_value_modifier = {
				ai_boldness = -0.25
				ai_compassion = 0.25
				ai_greed = -0.25
				ai_honor = 0.25
				ai_energy = -0.15
			}
			modifier = { #Traits
				add = -25
				has_trait = impatient
			}
			modifier = { #Traits
				add = 15
				has_trait = humble
			}
			modifier = { #Traits
				add = 15
				has_trait = temperate
			}
			modifier = { #Traits
				add = 15
				has_trait = calm
			}
			modifier = { #Traits
				add = 15
				has_trait = shy
			}
			modifier = { #Traits
				add = 10
				has_trait = craven
			}
			modifier = { #Traits
				add = 10
				has_trait = lazy
			}
			modifier = { #Traits
				add = -25
				has_trait = greedy
			}
			modifier = { #Traits
				add = -25
				has_trait = ambitious
			}
			modifier = { #Traits
				add = -10
				has_trait = deceitful
			}
			
			modifier = { #Intrigue
				add = 10
				intrigue <= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 10
				intrigue <= mediocre_skill_rating
			}
			modifier = { #Intrigue
				add = 10
				intrigue <= low_skill_rating
			}
			
			opinion_modifier = {
				opinion_target = scope:consort_target
				multiplier = 0.25
			}
		}
	}
	after = {
		add_character_flag = {
			flag = considered_killing_consort
			years = 8
		}
	}
}

#######################
##Poisoning a consort##
#######################
consort_events.0019 = {
	type = character_event
	title = consort_events.0019.t
	desc = {
		desc = consort_events.0019.start.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					is_male = no
				}
				desc = consort_events.0019.mother.desc
			}
			triggered_desc = {
				desc = consort_events.0019.father.desc
			}
		}
		desc = consort_events.0019.children.desc
		first_valid = { #Reasons
			triggered_desc = { #Primary Spouse
				trigger = {
					exists = scope:partner.primary_spouse
					scope:partner.primary_spouse = {
						this = scope:threatening_consort
					}
				}
				desc = consort_events.0019.ps.desc
			}
			triggered_desc = { #Beauty
				trigger = {
					scope:threatening_consort = {
						has_trait = beauty_good
					}
				}
				desc = consort_events.0019.beauty.desc
			}
			triggered_desc = { #Favor
				trigger = {
					scope:threatening_consort = {
						has_character_modifier = favored_consort_modifier
					}
				}
				desc = consort_events.0019.favor.desc
			}
			triggered_desc = { #Good family
				trigger = {
					scope:threatening_consort = {
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								is_liege_or_above_of = scope:partner
								AND = {	
									is_knight_of = scope:partner
									is_acclaimed = yes
								}
							}
						}
					}
				}
				desc = consort_events.0019.good_family.desc
			}
			triggered_desc = {
				desc = consort_events.0019.generic.desc
			}
		}
		desc = consort_events.0019.mid.desc
		first_valid = { #Reasons
			triggered_desc = { #Primary Spouse
				trigger = {
					scope:threatening_consort = {
						is_male = yes
					}
				}
				desc = consort_events.0019.fathers.desc
			}
			triggered_desc = {
				desc = consort_events.0019.gives_birth.desc
			}
		}
		desc = consort_events.0019.end.desc
	}
	theme = corruption
	override_background = {
		reference = bedchamber
	}
	
	left_portrait = { 	
		character = root
		animation = spymaster
	}
	right_portrait = { 	
		character = scope:threatening_consort
		animation = flirtation
	}
	
	trigger = {
		any_consort = {
			count = 1
		}
		any_consort = {
			is_landed_or_landless_administrative = yes
			is_physically_able_adult = yes
			save_temporary_scope_as = temporary_partner
			any_consort = {
				threatening_consort_trigger = { PARTNER = scope:temporary_partner }
				count >= 1
			}
		}
		
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
			has_character_flag = considered_poisoning_threatening_consort
			has_opinion_modifier = {
				modifier = forced_me_concubine_marriage_opinion
				target = scope:temporary_partner
			}
		}
		
		OR = {
			AND = {
				is_landed_or_landless_administrative = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
					is_landed_or_landless_administrative = yes
				}
			}
		}
		harem_politics_evil_consort_trigger = yes
		is_physically_able_adult = yes
		hp_accepts_harems = yes
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			OR = {	
				has_character_flag = flag_yanwan
				has_character_flag = flag_nurbanu
			}
		}
		modifier = {
			add = 0.05
			has_character_flag = flag_mei
		}
		modifier = {
			add = 0.1
			harem_politics_special_consort_trigger = yes
		}
		modifier = {
			add = 0.1
			has_character_modifier = scheming_consort_modifier
		}
		modifier = {
			add = 0.1
			OR = {
				harem_politics_favored_consort_trigger = yes
				harem_politics_unfavored_consort_trigger = yes
			}
		}
		modifier = {
			add = 0.15
			has_trait = ambitious
		}
		modifier = {
			add = 0.05
			has_trait = greedy
		}
		modifier = {
			add = 0.05
			is_married = yes
		}
		modifier = {
			add = 0.05
			has_court_position = grand_consort_court_position
		}

		#GC - High aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 3
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.25
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position >= 4
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.3
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 5
					has_character_flag = gc_promoting_harmony
				}
			}
			add = -0.3
		}
		#GC - Low aptitude
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position <= 2
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.25
		}
		modifier = {
			any_consort = {
				employs_court_position = grand_consort_court_position
				any_court_position_holder = {
					type = grand_consort_court_position
					aptitude:grand_consort_court_position = 1
					has_character_flag = gc_promoting_harmony
				}
			}
			add = 0.35
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_physically_able_adult = yes
			}
			save_scope_as = partner
		}
		scope:partner = {
			every_consort = {
				limit = {
					threatening_consort_trigger = { PARTNER = scope:partner }
				}
				add_to_list = threatening_consort_list
			}
			random_in_list = {
				list = threatening_consort_list
				weight = {
					base = 10
					modifier = {
						exists = scope:partner.primary_spouse
						this = scope:partner.primary_spouse
						add = 15
					}
					modifier = {
						has_court_position = grand_consort_court_position
						add = 10
					}
					modifier = {
						is_married = yes
						add = 10
					}

					modifier = {
						has_trait = beauty_good_1
						add = 5
					}
					modifier = {
						has_trait = beauty_good_2
						add = 10
					}
					modifier = {
						has_trait = beauty_good_3
						add = 15
					}

					modifier = {
						any_close_family_member = {
							is_liege_or_above_of = scope:partner
						}
						add = 20
					}
					modifier = {
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = scope:partner
								is_councillor_of = scope:partner
								is_parent_of = scope:partner
								is_liege_or_above_of = scope:partner
							}
						}
						add = 10
					}

					modifier = {
						has_character_modifier = beloved_consort_modifier
						add = 20
					}
					modifier = {
						has_character_modifier = favor_boost_modifier
						add = 15
					}
					modifier = {
						has_character_modifier = favored_consort_modifier
						add = 10
					}

					modifier = {
						has_relation_soulmate = scope:partner
						add = 20
					}
					modifier = {
						has_relation_lover = scope:partner
						add = 10
					}
				}
				save_scope_as = threatening_consort
				scope:threatening_consort = {
					add_character_flag = {
						flag = flag_considered_poison_consort
						years = 5
					}
				}
			}
		}
	}
	
	#Langua's "friendship bracelet"
	option = {
		name = consort_events.0019.a
		trigger = { 
			OR = { 
				any_spouse = { 
					this = scope:partner
				}
				has_court_position = grand_consort_court_position
			}
		}
		random_list = {
			75 = { #The consort accepts it
				opinion_modifier = { #Opinion
					WHO = scope:threatening_consort
					opinion_target = root
					min = -20
					max = 20
					multiplier = 1
				}
				modifier = { #Traits
					scope:threatening_consort = { has_trait = trusting }
					add = 20
				}
				modifier = { #Spouses
					is_spouse_of = scope:partner
					add = 5
				}
				modifier = { #Grand Consort
					root = { 
						has_court_position = grand_consort_court_position
					}
					add = 5
				}
				modifier = { #Primary Spouse
					scope:partner = { 
						exists = primary_spouse
						primary_spouse = {
							this = root
						}
					}
					add = 50
				}

				modifier = { #Favored consorts
					root = { 
						has_character_modifier = beloved_consort_modifier
					}
					add = 10
				}
				modifier = { #Favored consorts
					root = { 
						has_character_modifier = favor_boost_modifier
					}
					add = 5
				}
				modifier = { #Favored consorts
					root = { 
						has_character_modifier = favored_consort_modifier
					}
					add = 5
				}

				modifier = { #Favored consorts
					has_relation_friend = scope:threatening_consort
					add = 15
				}

				compare_modifier = { #Intrigue
					value = intrigue
					multiplier = 1
					max = 25
				}

				scope:threatening_consort = { 
					add_character_modifier = {
						modifier = langhua_bracelet_modifier
					}
					add_opinion = {
						target = root
						modifier = gifted_me_poison_opinion
					}
					if = {
						limit = { can_set_relation_potential_friend_trigger = { CHARACTER = root } }
						set_relation_potential_friend = root
					}
				}
			}
			25 = { #They reject the bracelet
				opinion_modifier = { #Opinion
					WHO = scope:threatening_consort
					opinion_target = root
					min = -20
					max = 10
					multiplier = -1
				}
				modifier = { #Traits
					scope:threatening_consort = { has_trait = paranoid }
					add = 15
				}
				compare_modifier = { #Intrigue
					value = scope:threatening_consort.intrigue
					multiplier = 1
					max = 25
				}

				modifier = { #Favored consorts
					root = { 
						has_character_modifier = unfavored_consort_modifier
					}
					add = 10
				}
				modifier = { #Favored consorts
					root = { 
						has_character_modifier = forgotten_consort_modifier
					}
					add = 15
				}

				modifier = { #Primary Spouse
					scope:partner = { 
						exists = primary_spouse
						primary_spouse = {
							this = scope:threatening_consort
						}
					}
					add = 10
				}
				modifier = { #GC
					scope:threatening_consort = { 
						has_court_position = grand_consort_court_position
					}
					add = 5
				}
				modifier = { #SS
					scope:threatening_consort = { 
						is_married = yes
					}
					add = 5
				}

				modifier = { #Suspicion
					scope:threatening_consort = { 
						has_opinion_modifier = {
							modifier = suspicion_opinion
							target = root
						}
					}
					add = 15
				}

				modifier = { #Herbalist
					scope:threatening_consort = { 
						has_trait = lifestyle_herbalist
					}
					add = 20
				}
				modifier = { #Scheming consort
					scope:threatening_consort = { 
						has_character_modifier = scheming_consort_modifier
					}
					add = 15
				}

				modifier = { #Rivals
					scope:threatening_consort = { 
						has_relation_rival = root
					}
					add = -15
				}
				modifier = { #Rivals
					scope:threatening_consort = { 
						has_relation_nemesis = root
					}
					add = -25
				}

				add_opinion = {
					target = scope:threatening_consort
					modifier = refusal_opinion
					opinion = -5
				}
				scope:threatening_consort = { 
					add_opinion = {
						target = root
						modifier = suspicion_opinion
						opinion = -10
					}
				}
			}
		}

		stress_impact = {
			honest = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			just = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}

			opinion_modifier = {
				who = root
				opinion_target = scope:threatening_consort
				min = -20
				max = 20
				multiplier = -1
			}

			modifier = { #Traits
				add = 10
				has_trait = disloyal
			}
			modifier = { #Traits
				add = 15
				has_trait = brave
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 10
				has_trait = greedy
			}
			modifier = { #Traits
				add = 10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = -15
				has_trait = craven
			}
			modifier = { #Traits
				add = -15
				has_trait = shy
			}

			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				has_character_flag = flag_yanwan
				add = 15
			}
			modifier = { #Mei
				has_character_flag = flag_mei
				add = 10
			}
			modifier = { # Special consorts
				harem_politics_special_consort_trigger = yes
				add = 5
			}
			
			modifier = { #Rank
				exists = scope:partner.primary_spouse
				this = scope:partner.primary_spouse
				add = 15
			}
			modifier = { #Rank
				has_court_position = grand_consort_court_position
				add = 10
			}
			modifier = { #Rank
				is_married = yes
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = 20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = 15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = 10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = -15
			}

			modifier = { #Friends
				has_relation_friend = scope:threatening_consort
				add = 20
			}
			modifier = { #Rivals
				has_relation_rival = scope:threatening_consort
				add = -5
			}
			modifier = { #Rivals
				has_relation_nemesis = scope:threatening_consort
				add = -15
			}

			modifier = { #Favored consorts
				scope:threatening_consort = {
					has_relation_lover = scope:partner
				}
				add = 15
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					has_relation_soulmate = scope:partner
				}
				add = 25
			}

			modifier = { #Favored consorts
				scope:threatening_consort = {
					harem_politics_favored_consort_trigger = yes
				}
				add = 10
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = 10
			}

			modifier = { #Favored consorts
				scope:threatening_consort = {
					has_trait = beauty_good_2
				}
				add = 10
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					has_trait = beauty_good_3
				}
				add = 20
			}

			modifier = { #Favored consorts
				scope:threatening_consort = {
					has_trait = lifestyle_herbalist
				}
				add = -20
			}

			modifier = { #Favored consorts
				intrigue <= medium_skill_rating
				add = -5
			}
			modifier = { #Favored consorts
				intrigue <= mediocre_skill_rating
				add = -5
			}
			modifier = { #Favored consorts
				intrigue <= low_skill_rating
				add = -5
			}

			modifier = { #Favored consorts
				scope:threatening_consort = {
					intrigue >= medium_skill_rating
				}
				add = -5
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					intrigue >= decent_skill_rating
				}
				add = -5
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					intrigue >= high_skill_rating
				}
				add = -5
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					intrigue >= very_high_skill_rating
				}
				add = -5
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					intrigue >= extremely_high_skill_rating
				}
				add = -5
			}
		}
	}
	
	#Lingrong's "ointment"
	option = {
		name = consort_events.0019.b
		random_list = {
			50 = { #The consort accepts it
				opinion_modifier = { #Opinion
					WHO = scope:threatening_consort
					opinion_target = root
					min = -20
					max = 20
					multiplier = 1
				}
				modifier = { #Traits
					scope:threatening_consort = { has_trait = trusting }
					add = 20
				}
				modifier = { #Spouses
					is_spouse_of = scope:partner
					add = 5
				}
				modifier = { #Grand Consort
					root = { 
						has_court_position = grand_consort_court_position
					}
					add = 5
				}
				modifier = { #Primary Spouse
					scope:partner = { 
						exists = primary_spouse
						primary_spouse = {
							this = root
						}
					}
					add = 50
				}

				modifier = { #Favored consorts
					root = { 
						has_character_modifier = beloved_consort_modifier
					}
					add = 10
				}
				modifier = { #Favored consorts
					root = { 
						has_character_modifier = favor_boost_modifier
					}
					add = 5
				}
				modifier = { #Favored consorts
					root = { 
						has_character_modifier = favored_consort_modifier
					}
					add = 5
				}

				modifier = { #Favored consorts
					has_relation_friend = scope:threatening_consort
					add = 15
				}

				compare_modifier = { #Intrigue
					value = intrigue
					multiplier = 1
					max = 25
				}

				scope:threatening_consort = { 
					add_character_modifier = {
						modifier = lingrong_ointment_modifier
					}
					add_opinion = {
						target = root
						modifier = gifted_me_poison_opinion
					}
					if = {
						limit = { can_set_relation_potential_friend_trigger = { CHARACTER = root } }
						set_relation_potential_friend = root
					}
				}
			}
			50 = { #They reject the bracelet
				opinion_modifier = { #Opinion
					WHO = scope:threatening_consort
					opinion_target = root
					min = -20
					max = 10
					multiplier = -1
				}
				modifier = { #Traits
					scope:threatening_consort = { has_trait = paranoid }
					add = 15
				}
				compare_modifier = { #Intrigue
					value = scope:threatening_consort.intrigue
					multiplier = 1
					max = 25
				}

				modifier = { #Favored consorts
					root = { 
						has_character_modifier = unfavored_consort_modifier
					}
					add = 10
				}
				modifier = { #Favored consorts
					root = { 
						has_character_modifier = forgotten_consort_modifier
					}
					add = 15
				}

				modifier = { #Primary Spouse
					scope:partner = { 
						exists = primary_spouse
						primary_spouse = {
							this = scope:threatening_consort
						}
					}
					add = 10
				}
				modifier = { #GC
					scope:threatening_consort = { 
						has_court_position = grand_consort_court_position
					}
					add = 5
				}
				modifier = { #SS
					scope:threatening_consort = { 
						is_married = yes
					}
					add = 5
				}

				modifier = { #Suspicion
					scope:threatening_consort = { 
						has_opinion_modifier = {
							modifier = suspicion_opinion
							target = root
						}
					}
					add = 15
				}

				modifier = { #Herbalist
					scope:threatening_consort = { 
						has_trait = lifestyle_herbalist
					}
					add = 20
				}
				modifier = { #Scheming consort
					scope:threatening_consort = { 
						has_character_modifier = scheming_consort_modifier
					}
					add = 15
				}

				modifier = { #Rivals
					scope:threatening_consort = { 
						has_relation_rival = root
					}
					add = -15
				}
				modifier = { #Rivals
					scope:threatening_consort = { 
						has_relation_nemesis = root
					}
					add = -25
				}

				add_opinion = {
					target = scope:threatening_consort
					modifier = refusal_opinion
					opinion = -5
				}
				scope:threatening_consort = { 
					add_opinion = {
						target = root
						modifier = suspicion_opinion
						opinion = -10
					}
				}
			}
		}

		stress_impact = {
			honest = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			just = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}

			opinion_modifier = {
				who = root
				opinion_target = scope:threatening_consort
				min = -20
				max = 20
				multiplier = -1
			}

			modifier = { #Traits
				add = 10
				has_trait = disloyal
			}
			modifier = { #Traits
				add = 15
				has_trait = brave
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 10
				has_trait = greedy
			}
			modifier = { #Traits
				add = 10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = -15
				has_trait = craven
			}
			modifier = { #Traits
				add = -15
				has_trait = shy
			}

			modifier = { #Scheming Consorts
				add = 15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				has_character_flag = flag_yanwan
				add = 15
			}
			modifier = { #Mei
				has_character_flag = flag_mei
				add = 10
			}
			modifier = { #Special consorts
				harem_politics_special_consort_trigger = yes
				add = 5
			}
			
			modifier = { #Rank
				exists = scope:partner.primary_spouse
				this = scope:partner.primary_spouse
				add = 10
			}
			modifier = { #Rank
				has_court_position = grand_consort_court_position
				add = 5
			}
			modifier = { #Rank
				is_married = yes
				add = 5
			}

			modifier = { #Favor
				has_character_modifier = beloved_consort_modifier
				add = 20
			}
			modifier = { #Favor
				has_character_modifier = favor_boost_modifier
				add = 15
			}
			modifier = { #Favor
				has_character_modifier = favored_consort_modifier
				add = 10
			}

			modifier = { #Favor
				has_character_modifier = unfavored_consort_modifier
				add = -10
			}
			modifier = { #Favor
				has_character_modifier = forgotten_consort_modifier
				add = -15
			}

			modifier = { #Friends
				has_relation_friend = scope:threatening_consort
				add = 20
			}
			modifier = { #Rivals
				has_relation_rival = scope:threatening_consort
				add = -5
			}
			modifier = { #Rivals
				has_relation_nemesis = scope:threatening_consort
				add = -15
			}

			modifier = { #Favored consorts
				scope:threatening_consort = {
					has_relation_lover = scope:partner
				}
				add = 15
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					has_relation_soulmate = scope:partner
				}
				add = 25
			}

			modifier = { #Favored consorts
				scope:threatening_consort = {
					harem_politics_favored_consort_trigger = yes
				}
				add = 10
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					has_character_modifier = beloved_consort_modifier
				}
				add = 10
			}

			modifier = { #Favored consorts
				scope:threatening_consort = {
					has_trait = beauty_good_2
				}
				add = 10
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					has_trait = beauty_good_3
				}
				add = 20
			}

			modifier = { #Favored consorts
				scope:threatening_consort = {
					has_trait = lifestyle_herbalist
				}
				add = -20
			}

			modifier = { #Favored consorts
				intrigue <= medium_skill_rating
				add = -5
			}
			modifier = { #Favored consorts
				intrigue <= mediocre_skill_rating
				add = -5
			}
			modifier = { #Favored consorts
				intrigue <= low_skill_rating
				add = -5
			}

			modifier = { #Favored consorts
				scope:threatening_consort = {
					intrigue >= medium_skill_rating
				}
				add = -5
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					intrigue >= decent_skill_rating
				}
				add = -5
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					intrigue >= high_skill_rating
				}
				add = -5
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					intrigue >= very_high_skill_rating
				}
				add = -5
			}
			modifier = { #Favored consorts
				scope:threatening_consort = {
					intrigue >= extremely_high_skill_rating
				}
				add = -5
			}
		}
	}
	
	#Don't do anything
	option = {
		name = harem_politics.0012.d
		stress_impact = {
			impatient = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
				ai_energy = 0.15
			}

			opinion_modifier = {
				who = root
				opinion_target = scope:threatening_consort
				min = -20
				max = 20
				multiplier = 1
			}

			modifier = { #Traits
				add = -25
				has_trait = impatient
			}
			modifier = { #Traits
				add = 15
				has_trait = shy
			}
			modifier = { #Traits
				add = 15
				has_trait = craven
			}

			modifier = { #Scheming Consorts
				add = -15
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Consort Ling
				has_character_flag = flag_yanwan
				add = -15
			}
			modifier = { #Mei
				has_character_flag = flag_mei
				add = -10
			}
			modifier = { #Special consorts
				harem_politics_special_consort_trigger = yes
				add = -5
			}
			
			modifier = { #Intrigue
				add = 5
				intrigue <= medium_skill_rating
			}
			modifier = { #Intrigue
				add = 5
				intrigue <= mediocre_skill_rating
			}
			modifier = { #Intrigue
				add = 10
				intrigue <= low_skill_rating
			}
			
			modifier = { #Intrigue
				add = -5
				intrigue >= high_skill_rating
			}
			modifier = { #Intrigue
				add = -5
				intrigue >= very_high_skill_rating
			}
			modifier = { #Intrigue
				add = -10
				intrigue >= extremely_high_skill_rating
			}

			modifier = { #Unfavor
				add = 10
				has_character_modifier = unfavored_consort_modifier
			}
			modifier = { #Unfavor
				add = 20
				has_character_modifier = forgotten_consort_modifier
			}

			modifier = { #Relations
				add = 10
				has_relation_rival = scope:threatening_consort
			}
			modifier = { #Relations
				add = 20
				has_relation_nemesis = scope:threatening_consort
			}

			modifier = { #Primary Spouse
				scope:partner = { 
					exists = primary_spouse
					primary_spouse = {
						this = scope:threatening_consort
					}
				}
				add = 15
			}
			modifier = { #GC
				scope:threatening_consort = { 
					has_court_position = grand_consort_court_position
				}
				add = 10
			}
			modifier = { #SS
				scope:threatening_consort = { 
					is_married = yes
				}
				add = 5
			}

			modifier = { #Traits
				scope:threatening_consort = { has_trait = paranoid }
				add = 15
			}

			modifier = { #Herbalist
				scope:threatening_consort = { 
					has_trait = lifestyle_herbalist
				}
				add = 20
			}
			modifier = { #Scheming consort
				scope:threatening_consort = { 
					has_character_modifier = scheming_consort_modifier
				}
				add = 20
			}
		}
	}
	
	after = {
		add_character_flag = {
			flag = considered_poisoning_threatening_consort
			years = 5
		}
	}
}

##############################
##Ending someone's pregnancy##
##############################
consort_events.0020 = {
	type = character_event
	title = consort_events.0019.t
	desc = consort_events.0020.desc
	theme = corruption
	override_background = {
		reference = corridor_night
	}
	
	left_portrait = { 	
		character = scope:actor
		animation = spymaster
	}
	right_portrait = { 	
		character = scope:recipient
		animation = pregnant
	}
	
	trigger = {
		any_consort = {
			is_landed_or_landless_administrative = yes
			highest_held_title_tier >= tier_county
			save_temporary_scope_as = temporary_partner
			any_consort = {
				threatening_pregnant_consort_trigger = { PARTNER = scope:temporary_partner }
				this = scope:recipient
			}
		}
		NOR = {
			exists = scope:is_being_divorced
			exists = scope:is_being_set_aside
			has_character_flag = attempted_miscarriage_flag
		}
		
		OR = {
			AND = {
				is_landed_or_landless_administrative = yes
				any_liege_or_above = { this = scope:temporary_partner }
			}
			AND = {
				exists = court_owner
				court_owner = {
					this = scope:temporary_partner
					is_landed_or_landless_administrative = yes
				}
			}
		}
		is_physically_able_adult = yes
	}

	
	immediate = {
		random_consort = {
			limit = {
				is_landed_or_landless_administrative = yes
				highest_held_title_tier >= tier_county
				any_consort = {
					this = scope:actor
				}
				any_consort = {
					this = scope:recipient
				}
			}
			save_scope_as = partner
		}
	}
	
	#End the pregnancy - quick method
	option = {
		name = consort_events.0020.a
		duel = {
			skill = intrigue
			target = scope:recipient
			50 = { # Not caught
				compare_modifier = {
					value = scope:duel_value
					multiplier = 2.5
					min = -50
				}
				modifier = { #Trusting consorts
					add = 10
					scope:recipient = {
						has_trait = trusting
					}
				}
				modifier = { #Friends
					add = 5
					scope:recipient = {
						has_relation_potential_friend = scope:actor
					}
				}
				modifier = { #Friends
					add = 10
					scope:recipient = {
						has_relation_friend = scope:actor
					}
				}
				modifier = { #Friends
					add = 15
					scope:recipient = {
						has_relation_best_friend = scope:actor
					}
				}
				modifier = { #Traits
					add = -15
					scope:recipient = {
						has_trait = deceitful
					}
				}
				modifier = { #Herbalist
					add = -25
					scope:recipient = {
						has_trait = lifestyle_herbalist
					}
				}
				modifier = { #Herbalist
					add = 25
					has_trait = lifestyle_herbalist
				}
				modifier = { #Scheming consorts
					add = -15
					scope:recipient = {
						has_character_modifier = scheming_consort_modifier
					}
				}
				modifier = { #Vigilant consorts
					add = -15
					scope:recipient = {
						has_character_modifier = more_vigilant_recistance_modifier
					}
				}
				opinion_modifier = {
					who = scope:recipient
					opinion_target = scope:actor
					min = -30
					max = 30
					multiplier = 1
				}
				
				modifier = { #Favored consorts are harder to target
					add = -15
					scope:recipient = {
						has_character_modifier = favored_consort_modifier
					}
				}
				modifier = { #Favored consorts are harder to target
					add = -20
					scope:recipient = {
						has_character_modifier = favor_boost_modifier
					}
				}
				modifier = { #Favored consorts are harder to target
					add = -25
					scope:recipient = {
						has_character_modifier = beloved_consort_modifier
					}
				}
				modifier = { #Favored consorts have more servants at their disposal
					add = 15
					has_character_modifier = favored_consort_modifier
				}
				modifier = { #Favored consorts have more servants at their disposal
					add = 20
					has_character_modifier = favor_boost_modifier
				}
				modifier = { #Favored consorts have more servants at their disposal
					add = 25
					has_character_modifier = beloved_consort_modifier
				}

				modifier = { #Unfavored consorts don't have many servants at their disposal
					add = -10
					has_character_modifier = unfavored_consort_modifier
				}
				modifier = { #Unfavored consorts don't have many servants at their disposal
					add = -20
					has_character_modifier = forgotten_consort_modifier
				}
				
				modifier = { #Concubines have less servants at their disposal
					add = -10
					is_concubine = yes
				}
				modifier = { #Spouses have authority
					add = 10
					is_married = yes
				}
				modifier = { #The Grand Consort too
					add = 5
					has_court_position = grand_consort_court_position
				}
				modifier = { #The Main Spouse and parents do more
					add = 10
					OR = { 	
						AND = { 
							exists = scope:partner.primary_spouse
							this = scope:partner.primary_spouse
						}
						is_parent_of = scope:partner
					}
				}
				
				modifier = { #Spouses have authority
					add = 10
					scope:recipient = {
						is_concubine = yes
					}
				}
				modifier = { #Spouses have authority
					add = -10
					scope:recipient = {
						is_married = yes
					}
				}
				modifier = { #The Grand Consort too
					add = -5
					scope:recipient = {
						has_court_position = grand_consort_court_position
					}
				}
				modifier = { #The Main Spouse and parents do more
					add = -10
					scope:recipient = { 	
						OR = { 	
							AND = { 
								exists = scope:partner.primary_spouse
								this = scope:partner.primary_spouse
							}
							is_parent_of = scope:partner
						}
					}
				}
				
				modifier = { #Intelligent consorts
					add = -5
					scope:recipient = {
						has_trait = intellect_good_1
					}
				}
				modifier = { #Intelligent consorts
					add = -10
					scope:recipient = {
						has_trait = intellect_good_2
					}
				}
				modifier = { #Intelligent consorts
					add = -15
					scope:recipient = {
						has_trait = intellect_good_3
					}
				}

				modifier = { #Intelligent consorts
					add = 5
					has_trait = intellect_good_1
				}
				modifier = { #Intelligent consorts
					add = 7
					has_trait = intellect_good_2
				}
				modifier = { #Intelligent consorts
					add = 10
					has_trait = intellect_good_3
				}

				#Actual effect
				custom_tooltip = consort_events.0020.success
				set_local_variable = {
					name = short_method_miscarriage
					value = yes
				}
				trigger_event = {
					id = consort_events.0021
					days = { 10 20 }
				}
			}
			50 = { # Caught
				compare_modifier = {
					value = scope:duel_value
					multiplier = -2.5
					min = -50
				}
				modifier = { #Paranoid consorts
					add = 10
					scope:recipient = {
						has_trait = paranoid
					}
				}
				modifier = { #Rivals
					add = 5
					scope:recipient = {
						has_relation_potential_rival = scope:actor
					}
				}
				modifier = { #Friends
					add = 10
					scope:recipient = {
						has_relation_rival = scope:actor
					}
				}
				modifier = { #Friends
					add = 15
					scope:recipient = {
						has_relation_nemesis = scope:actor
					}
				}
				modifier = { #Traits
					add = 15
					scope:recipient = {
						has_trait = deceitful
					}
				}
				modifier = { #Herbalist
					add = 25
					scope:recipient = {
						has_trait = lifestyle_herbalist
					}
				}
				modifier = { #Herbalist
					add = -25
					has_trait = lifestyle_herbalist
				}
				modifier = { #Scheming consorts
					add = 15
					scope:recipient = {
						has_character_modifier = scheming_consort_modifier
					}
				}
				modifier = { #Vigilant consorts
					add = 15
					scope:recipient = {
						has_character_modifier = more_vigilant_recistance_modifier
					}
				}
				opinion_modifier = {
					who = scope:recipient
					opinion_target = scope:actor
					min = -30
					max = 30
					multiplier = -1
				}
				
				modifier = { #Favored consorts are harder to target
					add = 15
					scope:recipient = {
						has_character_modifier = favored_consort_modifier
					}
				}
				modifier = { #Favored consorts are harder to target
					add = 20
					scope:recipient = {
						has_character_modifier = favor_boost_modifier
					}
				}
				modifier = { #Favored consorts are harder to target
					add = 25
					scope:recipient = {
						has_character_modifier = beloved_consort_modifier
					}
				}
				modifier = { #Favored consorts have more servants at their disposal
					add = -15
					has_character_modifier = favored_consort_modifier
				}
				modifier = { #Favored consorts have more servants at their disposal
					add = -20
					has_character_modifier = favor_boost_modifier
				}
				modifier = { #Favored consorts have more servants at their disposal
					add = -25
					has_character_modifier = beloved_consort_modifier
				}

				modifier = { #Unfavored consorts don't have many servants at their disposal
					add = 10
					has_character_modifier = unfavored_consort_modifier
				}
				modifier = { #Unfavored consorts don't have many servants at their disposal
					add = 20
					has_character_modifier = forgotten_consort_modifier
				}
				
				modifier = { #Concubines have less servants at their disposal
					add = 10
					is_concubine = yes
				}
				modifier = { #Spouses have authority
					add = -10
					is_married = yes
				}
				modifier = { #The Grand Consort too
					add = -5
					has_court_position = grand_consort_court_position
				}
				modifier = { #The Main Spouse and parents do more
					add = -10
					OR = { 	
						AND = { 
							exists = scope:partner.primary_spouse
							this = scope:partner.primary_spouse
						}
						is_parent_of = scope:partner
					}
				}
				
				modifier = { #Spouses have authority
					add = -10
					scope:recipient = {
						is_concubine = yes
					}
				}
				modifier = { #Spouses have authority
					add = 10
					scope:recipient = {
						is_married = yes
					}
				}
				modifier = { #The Grand Consort too
					add = 5
					scope:recipient = {
						has_court_position = grand_consort_court_position
					}
				}
				modifier = { #The Main Spouse and parents do more
					add = 10
					scope:recipient = { 	
						OR = { 	
							AND = { 
								exists = scope:partner.primary_spouse
								this = scope:partner.primary_spouse
							}
							is_parent_of = scope:partner
						}
					}
				}
				
				modifier = { #Intelligent consorts
					add = 5
					scope:recipient = {
						has_trait = intellect_good_1
					}
				}
				modifier = { #Intelligent consorts
					add = 10
					scope:recipient = {
						has_trait = intellect_good_2
					}
				}
				modifier = { #Intelligent consorts
					add = 15
					scope:recipient = {
						has_trait = intellect_good_3
					}
				}

				modifier = { #Intelligent consorts
					add = -5
					has_trait = intellect_good_1
				}
				modifier = { #Intelligent consorts
					add = -7
					has_trait = intellect_good_2
				}
				modifier = { #Intelligent consorts
					add = -10
					has_trait = intellect_good_3
				}

				#Actual effect
				custom_tooltip = consort_events.0020.failure
				scope:partner = {
					trigger_event = {
						id = harem_politics.0021
						days = { 10 20 }
					}
				}
			}
		}

		add_character_flag = {
			flag = attempted_miscarriage_flag
			months = 6
		}
		
		stress_impact = {
			honest = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			just = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
			loyal = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
			}
			modifier = { #Traits
				add = 20
				has_trait = disloyal
			}
			modifier = { #Traits
				add = 5
				has_trait = brave
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}
			modifier = { #Traits
				add = 5
				has_trait = cynical
			}
			modifier = { #Traits
				add = 10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = -15
				has_trait = craven
			}
			modifier = { #Traits
				add = -25
				has_trait = loyal
			}
			modifier = { #Traits
				add = -20
				has_trait = zealous
			}
			modifier = { #Traits
				add = -50
				has_trait = lazy
			}
			modifier = { #Traits
				add = -50
				has_trait = honest
			}
			modifier = { #Traits
				add = -50
				has_trait = compassionate
			}
			modifier = { #Traits
				add = -50
				has_trait = forgiving
			}
			modifier = { #Traits
				add = -50
				has_trait = just
			}
			modifier = { #Traits
				add = -50
				has_trait = temperate
			}
			modifier = { #Traits
				add = -20
				has_trait = calm
			}
			modifier = { #Traits
				add = -5
				has_trait = shy
			}
			modifier = { #Traits
				add = -5
				has_trait = humble
			}
			modifier = { #Scheming Consorts
				add = 10
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Evil Consorts
				add = 5
				harem_politics_evil_consort_trigger = yes
			}
			modifier = { #Intrigue
				add = 10
				intrigue < medium_skill_rating
			}
			modifier = { #Intellect
				add = 10
				has_trait = intellect_bad
			}
			modifier = { #Consort Ling
				OR = {	
					has_character_flag = flag_yanwan
					has_character_flag = flag_nurbanu
				}
				add = 15
			}
			modifier = { #Mei
				has_character_flag = flag_mei
				add = 5
			}
			modifier = { #You're a powerful consort
				add = 10
				OR = {
					AND = {
						exists = scope:partner.primary_spouse
						this = scope:partner.primary_spouse
					}
					has_court_position = grand_consort_court_position
					is_spouse_of = scope:partner
				}
			}
			modifier = { #She's a powerful consort
				add = 10
				scope:recipient = {
					OR = {
						AND = {
							exists = scope:partner.primary_spouse
							this = scope:partner.primary_spouse
						}
						has_court_position = grand_consort_court_position
						is_spouse_of = scope:partner
						has_character_modifier = favored_consort_modifier
					}
				}
			}

			modifier = { #You're favored
				has_character_modifier = favored_consort_modifier
				add = 15
			}
			modifier = { #You're favored
				has_character_modifier = favor_boost_modifier
				add = 20
			}
			modifier = { #You're favored
				has_character_modifier = beloved_consort_modifier
				add = 25
			}

			modifier = { #You're unfavored
				has_character_modifier = unfavored_consort_modifier
				add = -10
			}
			modifier = { #You're unfavored
				has_character_modifier = forgotten_consort_modifier
				add = -20
			}

			modifier = { #Herbalist
				add = -25
				scope:recipient = {
					has_trait = lifestyle_herbalist
				}
			}
			modifier = { #Herbalist
				add = 25
				has_trait = lifestyle_herbalist
			}
			
			opinion_modifier = {
				who = scope:actor
				opinion_target = scope:recipient
				min = -30
				max = 30
				multiplier = -1
			}
		}
	}
	
	#End the pregnancy - long method
	option = {
		name = consort_events.0020.b
		trigger = {
			scope:recipient = {
				pregnancy_month <= 6
			}
		}
		show_as_unavailable = { 
			custom_tooltip = { text = advanced_pregnancy } 
			scope:recipient = {
				pregnancy_month > 6
			}
		}

		duel = {
			skill = intrigue
			target = scope:recipient
			65 = { # Not caught
				compare_modifier = {
					value = scope:duel_value
					multiplier = 2
					min = -50
				}
				modifier = { #Trusting consorts
					add = 15
					scope:recipient = {
						has_trait = trusting
					}
				}
				modifier = { #Friends
					add = 7
					scope:recipient = {
						has_relation_potential_friend = scope:actor
					}
				}
				modifier = { #Friends
					add = 12
					scope:recipient = {
						has_relation_friend = scope:actor
					}
				}
				modifier = { #Friends
					add = 20
					scope:recipient = {
						has_relation_best_friend = scope:actor
					}
				}
				modifier = { #Traits
					add = -15
					scope:recipient = {
						has_trait = deceitful
					}
				}
				modifier = { #Herbalist
					add = -25
					scope:recipient = {
						has_trait = lifestyle_herbalist
					}
				}
				modifier = { #Herbalist
					add = 25
					has_trait = lifestyle_herbalist
				}
				modifier = { #Scheming consorts
					add = -15
					scope:recipient = {
						has_character_modifier = scheming_consort_modifier
					}
				}
				modifier = { #Vigilant consorts
					add = -15
					scope:recipient = {
						has_character_modifier = more_vigilant_recistance_modifier
					}
				}
				opinion_modifier = {
					who = scope:recipient
					opinion_target = scope:actor
					min = -30
					max = 30
					multiplier = 1
				}
				
				modifier = { #Favored consorts are harder to target
					add = -15
					scope:recipient = {
						has_character_modifier = favored_consort_modifier
					}
				}
				modifier = { #Favored consorts are harder to target
					add = -20
					scope:recipient = {
						has_character_modifier = favor_boost_modifier
					}
				}
				modifier = { #Favored consorts are harder to target
					add = -25
					scope:recipient = {
						has_character_modifier = beloved_consort_modifier
					}
				}
				modifier = { #Favored consorts have more servants at their disposal
					add = 15
					has_character_modifier = favored_consort_modifier
				}
				modifier = { #Favored consorts have more servants at their disposal
					add = 20
					has_character_modifier = favor_boost_modifier
				}
				modifier = { #Favored consorts have more servants at their disposal
					add = 25
					has_character_modifier = beloved_consort_modifier
				}

				modifier = { #Unfavored consorts don't have many servants at their disposal
					add = -10
					has_character_modifier = unfavored_consort_modifier
				}
				modifier = { #Unfavored consorts don't have many servants at their disposal
					add = -20
					has_character_modifier = forgotten_consort_modifier
				}
				
				modifier = { #Concubines have less servants at their disposal
					add = -10
					is_concubine = yes
				}
				modifier = { #Spouses have authority
					add = 15
					is_married = yes
				}
				modifier = { #The Grand Consort too
					add = 7
					has_court_position = grand_consort_court_position
				}
				modifier = { #The Main Spouse and parents do more
					add = 15
					OR = { 	
						AND = { 
							exists = scope:partner.primary_spouse
							this = scope:partner.primary_spouse
						}
						is_parent_of = scope:partner
					}
				}
				
				modifier = { #Spouses have authority
					add = 10
					scope:recipient = {
						is_concubine = yes
					}
				}
				modifier = { #Spouses have authority
					add = -12
					scope:recipient = {
						is_married = yes
					}
				}
				modifier = { #The Grand Consort too
					add = -7
					scope:recipient = {
						has_court_position = grand_consort_court_position
					}
				}
				modifier = { #The Main Spouse and parents do more
					add = -15
					scope:recipient = { 	
						OR = { 	
							AND = { 
								exists = scope:partner.primary_spouse
								this = scope:partner.primary_spouse
							}
							is_parent_of = scope:partner
						}
					}
				}
				
				modifier = { #Intelligent consorts
					add = -5
					scope:recipient = {
						has_trait = intellect_good_1
					}
				}
				modifier = { #Intelligent consorts
					add = -10
					scope:recipient = {
						has_trait = intellect_good_2
					}
				}
				modifier = { #Intelligent consorts
					add = -15
					scope:recipient = {
						has_trait = intellect_good_3
					}
				}

				modifier = { #Intelligent consorts
					add = 5
					has_trait = intellect_good_1
				}
				modifier = { #Intelligent consorts
					add = 7
					has_trait = intellect_good_2
				}
				modifier = { #Intelligent consorts
					add = 10
					has_trait = intellect_good_3
				}

				#Actual effect
				custom_tooltip = consort_events.0020.success
				set_local_variable = {
					name = long_method_miscarriage
					value = yes
				}
				trigger_event = {
					id = consort_events.0021
					days = { 60 120 }
				}
			}
			35 = { # Caught
				compare_modifier = {
					value = scope:duel_value
					multiplier = -2
					min = -50
				}
				modifier = { #Trusting consorts
					add = -17
					scope:recipient = {
						has_trait = trusting
					}
				}
				modifier = { #Friends
					add = -7
					scope:recipient = {
						has_relation_potential_friend = scope:actor
					}
				}
				modifier = { #Friends
					add = -12
					scope:recipient = {
						has_relation_friend = scope:actor
					}
				}
				modifier = { #Friends
					add = -20
					scope:recipient = {
						has_relation_best_friend = scope:actor
					}
				}
				modifier = { #Traits
					add = 15
					scope:recipient = {
						has_trait = deceitful
					}
				}
				modifier = { #Herbalist
					add = 25
					scope:recipient = {
						has_trait = lifestyle_herbalist
					}
				}
				modifier = { #Herbalist
					add = -25
					has_trait = lifestyle_herbalist
				}
				modifier = { #Scheming consorts
					add = 15
					scope:recipient = {
						has_character_modifier = scheming_consort_modifier
					}
				}
				modifier = { #Vigilant consorts
					add = 15
					scope:recipient = {
						has_character_modifier = more_vigilant_recistance_modifier
					}
				}
				opinion_modifier = {
					who = scope:recipient
					opinion_target = scope:actor
					min = -20
					max = 20
					multiplier = -1
				}
				
				modifier = { #Favored consorts are harder to target
					add = 15
					scope:recipient = {
						has_character_modifier = favored_consort_modifier
					}
				}
				modifier = { #Favored consorts are harder to target
					add = 20
					scope:recipient = {
						has_character_modifier = favor_boost_modifier
					}
				}
				modifier = { #Favored consorts are harder to target
					add = 25
					scope:recipient = {
						has_character_modifier = beloved_consort_modifier
					}
				}
				modifier = { #Favored consorts have more servants at their disposal
					add = -15
					has_character_modifier = favored_consort_modifier
				}
				modifier = { #Favored consorts have more servants at their disposal
					add = -20
					has_character_modifier = favor_boost_modifier
				}
				modifier = { #Favored consorts have more servants at their disposal
					add = -25
					has_character_modifier = beloved_consort_modifier
				}

				modifier = { #Unfavored consorts don't have many servants at their disposal
					add = 10
					has_character_modifier = unfavored_consort_modifier
				}
				modifier = { #Unfavored consorts don't have many servants at their disposal
					add = 20
					has_character_modifier = forgotten_consort_modifier
				}
				
				modifier = { #Concubines have less servants at their disposal
					add = 10
					is_concubine = yes
				}
				modifier = { #Spouses have authority
					add = -15
					is_married = yes
				}
				modifier = { #The Grand Consort too
					add = -7
					has_court_position = grand_consort_court_position
				}
				modifier = { #The Main Spouse and parents do more
					add = -15
					OR = { 	
						AND = { 
							exists = scope:partner.primary_spouse
							this = scope:partner.primary_spouse
						}
						is_parent_of = scope:partner
					}
				}
				
				modifier = { #Spouses have authority
					add = -10
					scope:recipient = {
						is_concubine = yes
					}
				}
				modifier = { #Spouses have authority
					add = 12
					scope:recipient = {
						is_married = yes
					}
				}
				modifier = { #The Grand Consort too
					add = 7
					scope:recipient = {
						has_court_position = grand_consort_court_position
					}
				}
				modifier = { #The Main Spouse and parents do more
					add = 15
					scope:recipient = { 	
						OR = { 	
							AND = { 
								exists = scope:partner.primary_spouse
								this = scope:partner.primary_spouse
							}
							is_parent_of = scope:partner
						}
					}
				}
				
				modifier = { #Intelligent consorts
					add = 5
					scope:recipient = {
						has_trait = intellect_good_1
					}
				}
				modifier = { #Intelligent consorts
					add = 10
					scope:recipient = {
						has_trait = intellect_good_2
					}
				}
				modifier = { #Intelligent consorts
					add = 15
					scope:recipient = {
						has_trait = intellect_good_3
					}
				}

				modifier = { #Intelligent consorts
					add = -5
					has_trait = intellect_good_1
				}
				modifier = { #Intelligent consorts
					add = -7
					has_trait = intellect_good_2
				}
				modifier = { #Intelligent consorts
					add = -10
					has_trait = intellect_good_3
				}

				#Actual effect
				custom_tooltip = consort_events.0020.failure
				scope:partner = {
					trigger_event = {
						id = harem_politics.0021
						days = { 20 120 }
					}
				}
			}
		}

		add_character_flag = {
			flag = attempted_miscarriage_flag
			months = 6
		}
		
		stress_impact = {
			honest = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			just = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
			loyal = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.25
				ai_compassion = -0.25
				ai_greed = 0.25
				ai_honor = -0.25
			}
			modifier = { #Traits
				add = 20
				has_trait = disloyal
			}
			modifier = { #Traits
				add = 5
				has_trait = brave
			}
			modifier = { #Traits
				add = 15
				has_trait = ambitious
			}
			modifier = { #Traits
				add = 15
				has_trait = greedy
			}
			modifier = { #Traits
				add = 5
				has_trait = cynical
			}
			modifier = { #Traits
				add = 10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = -15
				has_trait = craven
			}
			modifier = { #Traits
				add = -25
				has_trait = loyal
			}
			modifier = { #Traits
				add = -20
				has_trait = zealous
			}
			modifier = { #Traits
				add = -50
				has_trait = lazy
			}
			modifier = { #Traits
				add = -50
				has_trait = honest
			}
			modifier = { #Traits
				add = -50
				has_trait = compassionate
			}
			modifier = { #Traits
				add = -50
				has_trait = forgiving
			}
			modifier = { #Traits
				add = -50
				has_trait = just
			}
			modifier = { #Traits
				add = -50
				has_trait = temperate
			}
			modifier = { #Traits
				add = -20
				has_trait = calm
			}
			modifier = { #Traits
				add = -5
				has_trait = shy
			}
			modifier = { #Traits
				add = -5
				has_trait = humble
			}
			modifier = { #Scheming Consorts
				add = 10
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Evil Consorts
				add = 5
				harem_politics_evil_consort_trigger = yes
			}
			modifier = { #Intrigue
				add = 10
				intrigue >= medium_skill_rating
			}
			modifier = { #Intellect
				add = 10
				has_trait = intellect_good
			}
			modifier = { #Consort Ling
				OR = {	
					has_character_flag = flag_yanwan
					has_character_flag = flag_nurbanu
				}
				add = 15
			}
			modifier = { #Hailan
				has_character_flag = flag_hailan
				add = 5
			}
			modifier = { #You're a powerful consort
				add = 10
				OR = {
					AND = {
						exists = scope:partner.primary_spouse
						this = scope:partner.primary_spouse
					}
					has_court_position = grand_consort_court_position
					is_spouse_of = scope:partner
				}
			}
			modifier = { #She's a powerful consort
				add = 10
				scope:recipient = {
					OR = {
						AND = {
							exists = scope:partner.primary_spouse
							this = scope:partner.primary_spouse
						}
						has_court_position = grand_consort_court_position
						is_spouse_of = scope:partner
						has_character_modifier = favored_consort_modifier
					}
				}
			}

			modifier = { #You're favored
				has_character_modifier = favored_consort_modifier
				add = 15
			}
			modifier = { #You're favored
				has_character_modifier = favor_boost_modifier
				add = 20
			}
			modifier = { #You're favored
				has_character_modifier = beloved_consort_modifier
				add = 25
			}

			modifier = { #You're unfavored
				has_character_modifier = unfavored_consort_modifier
				add = -10
			}
			modifier = { #You're unfavored
				has_character_modifier = forgotten_consort_modifier
				add = -20
			}

			modifier = { #Herbalist
				add = -25
				scope:recipient = {
					has_trait = lifestyle_herbalist
				}
			}
			modifier = { #Herbalist
				add = 25
				has_trait = lifestyle_herbalist
			}
			
			opinion_modifier = {
				who = scope:actor
				opinion_target = scope:recipient
				min = -30
				max = 30
				multiplier = -1
			}
		}
	}

	#Nope
	option = {
		name = consort_events.0020.c
		stress_impact = {
			ambitious = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
		}
		
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = -0.25
				ai_compassion = 0.25
				ai_greed = -0.25
				ai_honor = 0.25
			}
			modifier = { #Traits
				add = -10
				has_trait = disloyal
			}
			modifier = { #Traits
				add = -5
				has_trait = brave
			}
			modifier = { #Traits
				add = -25
				has_trait = ambitious
			}
			modifier = { #Traits
				add = -25
				has_trait = greedy
			}
			modifier = { #Traits
				add = -5
				has_trait = cynical
			}
			modifier = { #Traits
				add = -10
				has_trait = deceitful
			}
			modifier = { #Traits
				add = 15
				has_trait = craven
			}
			modifier = { #Traits
				add = 10
				has_trait = loyal
			}
			modifier = { #Traits
				add = 20
				has_trait = zealous
			}
			modifier = { #Traits
				add = 10
				has_trait = lazy
			}
			modifier = { #Traits
				add = 15
				has_trait = honest
			}
			modifier = { #Traits
				add = 50
				has_trait = compassionate
			}
			modifier = { #Traits
				add = 50
				has_trait = forgiving
			}
			modifier = { #Traits
				add = 50
				has_trait = just
			}
			modifier = { #Traits
				add = 10
				has_trait = temperate
			}
			modifier = { #Traits
				add = 10
				has_trait = calm
			}
			modifier = { #Traits
				add = 5
				has_trait = shy
			}
			modifier = { #Traits
				add = 5
				has_trait = humble
			}
			modifier = { #Scheming Consorts
				add = -5
				has_character_modifier = scheming_consort_modifier
			}
			modifier = { #Good Consorts
				add = 5
				harem_politics_evil_consort_trigger = no
			}
			modifier = { #Intrigue
				add = -5
				intrigue >= medium_skill_rating
			}
			modifier = { #Consort Ling
				OR = {	
					has_character_flag = flag_yanwan
					has_character_flag = flag_nurbanu
				}
				add = -15
			}
			modifier = { #Mei
				has_character_flag = flag_mei
				add = -10
			}
			modifier = { #Hailan
				has_character_flag = flag_hailan
				add = -5
			}
			modifier = { #You're a weak consort
				add = 20
				is_concubine = yes
				is_grand_consort_trigger = no
			}
			modifier = { #She's a weak consort
				add = 20
				scope:recipient = {
					is_concubine = yes
					is_grand_consort_trigger = no
					NOT = { has_character_modifier = favored_consort_modifier }
				}
			}

			modifier = { #You're unfavored
				has_character_modifier = unfavored_consort_modifier
				add = 10
			}
			modifier = { #You're unfavored
				has_character_modifier = forgotten_consort_modifier
				add = 15
			}
			opinion_modifier = {
				who = scope:actor
				opinion_target = scope:recipient
				min = -50
				max = 50
				multiplier = 1
			}
			modifier = { #For the hidden events
				has_character_flag = scheming_consort_flag
				factor = 0
			}
		}
	}
}

######################
##More hidden events##
######################
##Discreet pregnancy termination - rushed way##
consort_events.0021 = {
	hidden = yes
	
	trigger = {
	}
	
	immediate = {
		if = {
			limit = {
				scope:recipient = {
					is_alive = yes
					threatening_pregnant_consort_trigger = { PARTNER = scope:partner }
				}
			}
			if = {
				limit = {
					exists = local_var:short_method_miscarriage
				}
				scope:recipient = {
					harem_politics_risky_not_caught_pregnancy_effect = yes
				}
			}
			else_if = {
				limit = {
					exists = local_var:long_method_miscarriage
				}
				scope:recipient = {
					harem_politics_riskfree_not_caught_pregnancy_effect = yes
				}
			}
		}
		else = {
			scope:actor = {
				send_interface_toast = {
					type = event_generic_neutral
					title = unvalid_miscarriage_t
					right_icon = scope:recipient
					custom_tooltip = unvalid_miscarriage_desc
				}
			}
		}		
	}
	
}

#############################
##Miscarriage notifications##
#############################
##Notification for pregnant consort##
consort_events.0022 = {
	type = character_event
	title = consort_events.0022.t
	desc = {
		desc = consort_events.0022.start.desc
		first_valid = {
			triggered_desc = { #They were punished
				trigger = {
					scope:schemer = {
						is_imprisoned_by = scope:partner
					}
				}
				desc = consort_events.0022.arrested.desc
			}
			triggered_desc = { #They weren't
				desc = consort_events.0022.generic.desc
			}
		}
		desc = consort_events.0022.end.desc
	}
	theme = corruption
	override_background = {
		reference = corridor_night
	}
	
	left_portrait = { 	
		character = scope:schemer
		animation = shock
	}
	right_portrait = { 	
		character = root
		animation = worry
	}
	
	trigger = {
	}
	
	immediate = {
		if = {
			limit = {
				scope:schemer = {
					is_alive = yes
				}
			}
			if = {
				limit = {
					can_set_relation_rival_trigger = { CHARACTER = scope:schemer }
				}
				set_relation_rival = { 
					target = scope:schemer
					reason = consort_rival_reason
				}
			}
			else_if = {
				limit = {
					can_set_relation_nemesis_trigger = { CHARACTER = scope:schemer }
				}
				set_relation_nemesis = { 
					target = scope:schemer
					reason = consort_rival_reason 
				}
			}
			show_as_tooltip = {
				add_opinion = {
					target = scope:schemer
					modifier = hatred_spouse_opinion
				}
			}
		}
		add_character_modifier = {
			modifier = more_vigilant_recistance_modifier
			years = 2
		}
	}

	option = {
		name = consort_events.0022.a
		
		ai_chance = {
			base = 10
		}
	}
	
}

##Success##
consort_events.0026 = {
	type = character_event
	title = consort_events.0026.t
	desc = {
		desc = consort_events.0026.start.desc
		first_valid = { #Intro
			triggered_desc = {
				trigger = {
					scope:recipient = {
						has_trait = ill
					}
				}
				desc = consort_events.0026.ill.desc
			}
			triggered_desc = {
				trigger = {
					scope:recipient = {
						is_alive = no
					}
				}
				desc = consort_events.0026.dead.desc
			}
			triggered_desc = {
				desc = consort_events.0026.generic.desc
			}
		}
		desc = consort_events.0026.end.desc
	}
	theme = corruption
	override_background = {
		reference = corridor_night
	}
	
	left_portrait = { 	
		character = scope:actor
		animation = schadenfreude
	}
	right_portrait = { 	
		character = scope:recipient
		animation = sadness
	}
	
	immediate = {
		show_as_tooltip = {
			scope:recipient = {
				if = {
					limit = {
						is_alive = yes
					}
					pregnancy_cleanup_effect = yes
					if = {
						limit = {
							has_trait = ill
						}
						add_trait = ill
					}
				}
				else = {
					scope:recipient = {
						death = { killer = root death_reason = death_treatment }
					}
					scope:actor = {
						add_secret = {
							type = secret_murder
							target = scope:recipient
						}
					}
				}
			}
		}
	}

	option = {
		name = consort_events.0026.a
		ai_chance = {
			base = 1
		}
	}
}

########################################
## A consort might cause a miscarriage##
########################################

consort_events.0027 = {

	hidden = yes
	
	trigger = {
		is_landed_or_landless_administrative = yes
		any_consort = {
			is_pregnant = yes
			has_trait = pregnant
			is_courtier_of = root
			
			pregnancy_month <= 7
			pregnancy_assumed_father ?= {
				this = root
			}
			
			save_temporary_scope_as = temporary_pregnant_consort
		}
		any_consort = {
			scheming_consort_trigger = { PREGNANT_CONSORT = scope:temporary_pregnant_consort }
		}
		any_consort = {
			is_courtier_of = root
			count >= 3
		}
		NOT = {
			has_character_flag = consort_ongoing_miscarriage
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = { #Scheming consorts
			add = 0.2
			any_consort = {
				has_character_modifier = scheming_consort_modifier
			}
		}
		modifier = { #Yanwan
			add = 0.25
			any_consort = {
				OR = {	
					has_character_flag = flag_yanwan
					has_character_flag = flag_nurbanu
				}
			}
		}
		modifier = { #Mei
			add = 0.05
			any_consort = {
				has_character_flag = flag_mei
			}
		}
		modifier = { #Hailan
			add = 0.05
			any_consort = {
				harem_politics_special_consort_trigger = yes
			}
		}
		modifier = { #Many consorts
			add = 0.15
			any_consort = {
				count >= 5
			}
		}
		modifier = { #No heir
			add = 0.2
			any_child = {
				is_alive = yes
				count = 0 
			}
		}
		modifier = { #Count-consorts won't care that much
			add = -0.5
			highest_held_title_tier <= tier_county
		}
		modifier = { #Royal consorts do care
			add = 0.6
			highest_held_title_tier >= tier_kingdom
		}
		modifier = { #More probability in early pregnancy
			add = 0.1
			any_consort = {
				is_pregnant = yes
				is_courtier_of = root
				
				pregnancy_month <= 5
				exists = pregnancy_assumed_father
				pregnancy_assumed_father = {
					this = root
				}
			}
		}
		#GC - High aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 3
				has_character_flag = gc_promoting_harmony
			}
			add = -0.2
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 4
				has_character_flag = gc_promoting_harmony
			}
			add = -0.25
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 5
				has_character_flag = gc_promoting_harmony
			}
			add = -0.25
		}
		#GC - Low aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position <= 2
				has_character_flag = gc_promoting_harmony
			}
			add = 0.15
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 1
				has_character_flag = gc_promoting_harmony
			}
			add = 0.25
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				is_pregnant = yes
				is_courtier_of = root
				pregnancy_month <= 7
				exists = pregnancy_assumed_father
				pregnancy_assumed_father = {
					this = root
				}
			}
			weight = {
				base = 15
				modifier = { #The PS will attract more unwanted attention
					exists = root.primary_spouse
					this = root.primary_spouse
					add = 10
				}
				modifier = { #The GC will attract more unwanted attention
					has_court_position = grand_consort_court_position
					add = 5
				}
				modifier = { #Spouses will attract more unwanted attention
					is_married = yes
					add = 5
				}
				modifier = { #Favored consorts will attract more unwanted attention
					OR = {	
						harem_politics_favored_consort_trigger = yes
						has_relation_lover = root
						has_relation_friend = root
					}
					add = 15
				}
				modifier = { #Favored consorts will attract more unwanted attention
					OR = {	
						has_relation_soulmate = root
						has_relation_best_friend = root
					}
					add = 20
				}

				modifier = { #Favored consorts will attract more unwanted attention
					has_character_modifier = favor_boost_modifier
					add = 5
				}
				modifier = { #Favored consorts will attract more unwanted attention
					has_character_modifier = beloved_consort_modifier
					add = 10
				}

				modifier = {
					is_lowborn = no
					add = 5
				}
				modifier = {
					any_close_family_member = {
						OR = {
							is_powerful_vassal_of = root
							is_councillor_of = root
							is_liege_or_above_of = root
						}
						NOT = {
							is_child_of = root
						}
					}
					add = 10
				}
				modifier = {
					any_child = {
						is_player_heir_of = root
					}
					add = 10
				}
				modifier = {
					OR = {
						has_trait = beauty_good
						has_trait = intellect_good
						has_trait = physique_good
					}
					add = 10
				}
				modifier = {
					any_relation = {
						type = rival
						is_consort_of = root
						is_courtier_of = root
						harem_politics_evil_consort_trigger = yes
					}
					add = 25
				}
				modifier = {
					any_relation = {
						type = nemesis
						is_consort_of = root
						is_courtier_of = root
						harem_politics_evil_consort_trigger = yes
					}
					add = 50
				}
			}
			save_scope_as = recipient
		}
		if = {
			limit = {
				exists = scope:recipient
			}
			every_consort = {
				limit = {
					scheming_consort_trigger = { PREGNANT_CONSORT = scope:recipient }
				}
				add_to_list = scheming_consort_list
			}
			random_in_list = {
				list = scheming_consort_list
				limit = {
					scheming_consort_trigger = { PREGNANT_CONSORT = scope:recipient }
				}
				weight = {
					base = 25
					opinion_modifier = { #Opinion
						opinion_target = scope:recipient
						min = -30
						max = 30
						multiplier = -0.30
					}
					modifier = { #The PS wants less competition
						exists = root.primary_spouse
						this = root.primary_spouse
						add = 10
					}
					modifier = { #The GC wants less competition
						has_court_position = grand_consort_court_position
						is_concubine = yes
						add = 15
					}
					modifier = { #The GC wants less competition
						has_court_position = grand_consort_court_position
						is_married = yes
						add = 5
					}
					modifier = { #Spouses want less competition
						is_married = yes
						add = 10
					}
					modifier = { #Favored consorts are more successful
						OR = {	
							has_relation_lover = root
							has_relation_friend = root
						}
						add = 10
					}
					modifier = { #Favored consorts are more successful
						OR = {	
							has_relation_soulmate = root
							has_relation_best_friend = root
						}
						add = 15
					}

					modifier = { #Favored and unfavored consorts have more reasons
						OR = {	
							harem_politics_favored_consort_trigger = yes
							harem_politics_unfavored_consort_trigger = yes
						}
						add = 15
					}

					modifier = { #Rivals
						OR = {
							has_relation_rival = scope:recipient
							has_relation_nemesis = scope:recipient
						}
						add = 25
					}
					modifier = { #Traits
						has_trait = brave
						add = 10
					}
					modifier = { #Traits
						has_trait = deceitful
						add = 10
					}
					modifier = { #Traits
						has_trait = paranoid
						add = 10
					}
					modifier = { #Traits
						has_trait = sadistic
						add = 10
					}
					modifier = { #Traits
						has_trait = wrathful
						add = 10
					}
					modifier = { #Traits
						has_trait = vengeful
						add = 10
					}
					modifier = { #Traits
						has_trait = callous
						add = 10
					}
					modifier = { #Traits
						has_trait = ambitious
						add = 10
					}
					modifier = { #Herbalist
						add = 20
						has_trait = lifestyle_herbalist
					}
					modifier = { #Craven
						add = -15
						has_trait = craven
					}
					modifier = { #Calm
						add = -15
						has_trait = calm
					}
					modifier = { #Shy
						add = -15
						has_trait = shy
					}
					modifier = { #Scheming consorts
						add = 15
						has_character_modifier = scheming_consort_modifier
					}
					modifier = { #Diplomatic consorts
						add = -15
						has_character_modifier = diplomatic_consort_modifier
					}
					modifier = { #Powerful consorts are more daring
						any_close_family_member = {
							OR = {
								is_powerful_vassal_of = root
								is_councillor_of = root
								is_liege_or_above_of = root
							}
							NOT = {
								is_child_of = root
							}
						}
						add = 10
					}
					modifier = { #Parents of the heir want less competition
						any_child = {
							is_player_heir_of = root
						}
						add = 10
					}
					modifier = { #Childless consorts are jealous
						any_child = {
							is_child_of = root
							is_alive = yes
							count = 0
						}
						add = 10
					}
					modifier = { #Childless consorts are jealous
						any_child = {
							is_child_of = root
							is_alive = yes
							character_gender_can_inherit_from_trigger = { CHARACTER = root }
							count = 0
						}
						add = 10
					}

					modifier = { #Intrigue
						add = -10
						intrigue <= low_skill_rating
					}
					modifier = { #Intrigue
						add = -5
						intrigue <= mediocre_skill_rating
					}
					modifier = { #Intrigue
						add = -5
						intrigue < medium_skill_rating
					}
					modifier = { #Intrigue
						add = 25
						intrigue >= medium_skill_rating
					}
					modifier = { #Intrigue
						add = 25
						intrigue >= decent_skill_rating
					}
					modifier = { #Intrigue
						add = 20
						intrigue >= high_skill_rating
					}
					modifier = { #Yanwan would totally do it
						add = 15
						has_character_flag = flag_yanwan
					}
					modifier = { # Special consorts
						add = 10
						harem_politics_special_consort_trigger = yes
					}
				}
				save_scope_as = actor
			}
			if = {
				limit = { 
					exists = scope:actor
				}
				scope:actor = {
					add_character_flag = {
						flag = scheming_consort_flag
						days = 5
					}
					trigger_event = consort_events.0020
				}
				add_character_flag = {
					flag = consort_ongoing_miscarriage
					months = 5
				}
				if = {
					limit = {
						debug_only = yes
					}
					root = {
						send_interface_toast = {
							type = event_generic_neutral
							title = success_hidden_event_t
							right_icon = scope:actor
							left_icon = scope:recipient
							custom_tooltip = successful_hidden_event_desc
						}
					}
				}
			}
		}
	}
	
}

###########################
##Consorts acquire traits##
###########################

#A consort becomes a poet#
consort_events.0028 = {
	hidden = yes
	
	trigger = {
		is_landed_or_landless_administrative = yes
		highest_held_title_tier >= tier_duchy
		any_consort = {
			is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
			count >= 4
		}
		any_consort = {
			is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
			age >= 20
			hp_accepts_harems = yes
			diplomacy >= 14
			learning >= 9
			OR = { #Proper education
				has_trait = education_learning
				has_trait = education_diplomacy
				has_trait = education_intrigue
			}
			NOR = { 
				has_trait = poet 
				has_relation_rival = root
				has_relation_nemesis = root
			}
		}
		NOR = {
			has_character_flag = consort_poet_gain_flag
			any_consort = {
				is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
				has_trait = poet
			}
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = { #Many consorts
			add = 0.1
			any_consort = {
				count >= 8
			}
		}
		modifier = {
			add = 0.1
			highest_held_title_tier >= tier_kingdom
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
				age >= 20
				hp_accepts_harems = yes
				diplomacy >= 15
				learning >= 9
				OR = { #Proper education
					has_trait = education_learning
					has_trait = education_diplomacy
					has_trait = education_intrigue
				}
				NOT = { has_trait = poet }
			}
			weight = {
				base = 10
				modifier = { #Concubines will learn poetry just to be noticed
					is_concubine = yes
					add = 10
				}
				modifier = { #Lowborns received less formal education
					is_lowborn = no
					add = 10
				}
				modifier = { #And unfavored consorts
					has_variable = favor
					var:favor < neutral_consort_lower_limit
					add = 10
				}
				modifier = { #... and forgotten consorts
					has_variable = favor
					var:favor < unfavored_consort_lower_limit
					add = 10
				}
				modifier = { #Var:favor doesn't exist
					NOT = { has_variable = favor }
					has_character_modifier = unfavored_consort_modifier
					add = 10
				}
				modifier = { #Var:favor doesn't exist
					NOT = { has_variable = favor }
					has_character_modifier = forgotten_consort_modifier
					add = 20
				}

				modifier = { #Diplomacy
					add = {
						value = diplomacy
						multiply = 1.5
					}
				}
				modifier = { #Learning
					add = {
						value = learning
						multiply = 1.2
					}
				}
				modifier = { #Intrigue
					add = intrigue
				}

				modifier = { #Diplomacy
					add = 5
					has_trait = education_diplomacy_1
				}
				modifier = { #Diplomacy
					add = 5
					has_trait = education_diplomacy_2
				}
				modifier = { #Diplomacy
					add = 5
					has_trait = education_diplomacy_3
				}
				modifier = { #Diplomacy
					add = 10
					has_trait = education_diplomacy_4
				}
				modifier = { #Diplomacy
					add = 10
					has_trait = education_diplomacy_5
				}

				modifier = { #Learning
					add = 5
					has_trait = education_learning_1
				}
				modifier = { #Learning
					add = 5
					has_trait = education_learning_2
				}
				modifier = { #Learning
					add = 5
					has_trait = education_learning_3
				}
				modifier = { #Learning
					add = 10
					has_trait = education_learning_4
				}
				modifier = { #Learning
					add = 10
					has_trait = education_learning_5
				}

				modifier = { #Intrigue
					add = 5
					has_trait = education_intrigue_3
				}
				modifier = { #Intrigue
					add = 5
					has_trait = education_intrigue_4
				}
				modifier = { #Intrigue
					add = 10
					has_trait = education_intrigue_5
				}
				
				modifier = { #Beautiful poets
					add = 10
					has_trait = beauty_good
				}
				modifier = { #Beautiful poets
					add = 5
					has_trait = beauty_good_2
				}
				modifier = { #Beautiful poets
					add = 10
					has_trait = beauty_good_3
				}

				modifier = { #Intelligent seducers
					add = 5
					has_trait = intellect_good
				}
				modifier = { #Intelligent seducers
					add = 10
					has_trait = intellect_good_2
				}
				modifier = { #Intelligent seducers
					add = 15
					has_trait = intellect_good_3
				}

				modifier = { #Diplomatic consorts
					add = 10
					has_character_modifier = diplomatic_consort_modifier
				}
			}
			save_scope_as = consort_1
		}
		if = {
			limit = {
				exists = scope:consort_1
			}
			scope:consort_1 = {
				add_trait = poet
			}
			add_character_flag = {
				flag = consort_poet_gain_flag
				years = 8
			}
			if = {
				limit = {
					debug_only = yes
					root = {
						is_ai = no
					}
				}
				root = {
					send_interface_toast = {
						type = event_generic_neutral
						title = success_hidden_event_t
						right_icon = scope:consort_1
						custom_tooltip = successful_consort_poet_desc
					}
				}
			}
		}
	}
	
}

#A consort becomes a seducer#
consort_events.0029 = {
	hidden = yes
	
	trigger = {
		is_landed_or_landless_administrative = yes
		highest_held_title_tier >= tier_duchy
		any_consort = {
			is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
			count >= 4
		}
		any_consort = {
			is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
			age >= 20
			hp_accepts_harems = yes
			intrigue >= 13
			OR = { #Proper education
				has_trait = education_intrigue_1
				has_trait = education_intrigue_2
				has_trait = education_intrigue_3
				has_trait = education_intrigue_4
				has_trait = education_intrigue_5
			}
			NOR = { 
				has_trait = seducer 
				has_relation_rival = root
				has_relation_nemesis = root
				has_trait = beauty_bad
			}
		}
		NOT = {
			has_character_flag = consort_seducer_gain_flag
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = { #Many consorts
			add = 0.1
			any_consort = {
				count >= 8
			}
		}
		modifier = { #Many seducers
			add = -0.15
			any_consort = {
				has_trait = seducer 
			}
		}
		modifier = {
			add = 0.1
			highest_held_title_tier >= tier_kingdom
		}
		#GC - High aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 3
				has_character_flag = gc_promoting_harmony
			}
			add = -0.15
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 4
				has_character_flag = gc_promoting_harmony
			}
			add = -0.15
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 5
				has_character_flag = gc_promoting_harmony
			}
			add = -0.15
		}
		#GC - Low aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position <= 2
				has_character_flag = gc_promoting_harmony
			}
			add = 0.15
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 1
				has_character_flag = gc_promoting_harmony
			}
			add = 0.15
		}
	}
	
	immediate = {
		random_consort = {
			limit = {
				is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
				age >= 20
				hp_accepts_harems = yes
				intrigue >= 13
				OR = { #Proper education
					has_trait = education_intrigue_1
					has_trait = education_intrigue_2
					has_trait = education_intrigue_3
					has_trait = education_intrigue_4
					has_trait = education_intrigue_5
				}
				NOR = { 
					has_trait = seducer 
					has_relation_rival = root
					has_relation_nemesis = root
					has_trait = beauty_bad
				}
			}
			weight = {
				base = 10
				modifier = { #Concubines are more willing to become seducers
					is_concubine = yes
					add = 10
				}
				modifier = { #Lowborns too
					is_lowborn = yes
					add = 10
				}
				modifier = { #And unfavored consorts
					has_variable = favor
					var:favor < neutral_consort_lower_limit
					add = 10
				}
				modifier = { #... and forgotten consorts
					has_variable = favor
					var:favor < unfavored_consort_lower_limit
					add = 10
				}
				modifier = { #Var:favor doesn't exist
					NOT = { has_variable = favor }
					has_character_modifier = unfavored_consort_modifier
					add = 10
				}
				modifier = { #Var:favor doesn't exist
					NOT = { has_variable = favor }
					has_character_modifier = forgotten_consort_modifier
					add = 10
				}

				modifier = { #Intrigue
					add = {
						value = intrigue
						multiply = 1.5
					}
				}

				modifier = { #Intrigue
					add = 5
					has_trait = education_intrigue_2
				}
				modifier = { #Intrigue
					add = 5
					has_trait = education_intrigue_3
				}
				modifier = { #Intrigue
					add = 10
					has_trait = education_intrigue_4
				}
				modifier = { #Intrigue
					add = 10
					has_trait = education_intrigue_5
				}
				
				modifier = { #Beautiful seducers
					add = 10
					has_trait = beauty_good
				}
				modifier = { #Beautiful seducers
					add = 5
					has_trait = beauty_good_2
				}
				modifier = { #Beautiful seducers
					add = 10
					has_trait = beauty_good_3
				}

				modifier = { #Intelligent seducers
					add = 5
					has_trait = intellect_good
				}
				modifier = { #Intelligent seducers
					add = 5
					has_trait = intellect_good_2
				}
				modifier = { #Intelligent seducers
					add = 10
					has_trait = intellect_good_3
				}

				modifier = { #Honest consorts wouldn't dare
					add = 10
					NOT = {	
						has_trait = honest
					}
				}

				modifier = { #Scheming consorts
					add = 10
					has_character_modifier = scheming_consort_modifier
				}

				modifier = { #Hailan is less likely to become a seducer
					add = -10
					has_character_flag = flag_hailan
				}
				modifier = { #Yanwan is more likely to become a seducer
					add = 10
					OR = {	
						has_character_flag = flag_yanwan
						has_character_flag = flag_nurbanu
					}
				}
				modifier = { #Mei is more likely to become a seducer
					add = 5
					has_character_flag = flag_mei
				}

				modifier = { #Age
					add = 5
					age <= 25
				}
				modifier = { #Age
					add = 10
					age <= 22
				}
			}
			save_scope_as = seducer_consort
		}
		if = {
			limit = {
				exists = scope:seducer_consort
			}
			scope:seducer_consort = {
				add_trait = seducer
			}
			add_character_flag = {
				flag = consort_seducer_gain_flag
				years = 4
			}
			if = {
				limit = {
					debug_only = yes
				}
				root = {
					send_interface_toast = {
						type = event_generic_neutral
						title = success_hidden_event_t
						left_icon = scope:seducer_consort
						show_as_tooltip = {
							scope:seducer_consort = {
								add_trait = seducer
							}	
						}
					}
				}
			}
		}
	}	
}

############################
##A Consort learns secrets##
############################
scripted_trigger consort_events_secret_trigger = {
	OR = {	
		is_shunned_for = secret_owner
		is_criminal_for = secret_owner
	}
	NOT = { is_known_by = scope:consort }
}

scripted_trigger consort_events_courtier_trigger = {
	save_temporary_scope_as = secret_holder
	court_owner = {
		any_courtier = {
			NOT = { this = scope:secret_holder }
			OR = {
				is_consort_of = root
				is_parent_of = root
			}
			is_imprisoned = no
			any_close_family_member = {
				is_vassal_of = root
				NOT = {
					is_child_of = root
				}
			}
			save_temporary_scope_as = consort
		}
	}
	any_secret = {
		consort_events_secret_trigger = yes
	}
}

##Consort learns of a courtier's secrets##
consort_events.0030 = {
	hidden = yes

	trigger = {
		any_consort = {
			is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
			is_imprisoned = no
			count >= 3
		}
		any_courtier = {
			consort_events_courtier_trigger = yes
		}
		NOT = {
			has_character_flag = flag_consort_learned_secret
		}
		is_landed_or_landless_administrative = yes
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			any_consort = {
				has_character_flag = flag_mei
				is_courtier_of = root
			}
		}
		modifier = {
			add = 0.1
			any_courtier = {
				OR = {
					is_consort_of = root
					is_parent_of = root
				}
				any_close_family_member = {
					is_vassal_of = root
					NOT = {
						is_child_of = root
					}
				}
			}
		}
	}

	immediate = {
		random_courtier = {
			limit = {
				consort_events_courtier_trigger = yes
			}
			weight = {
				base = 10
				#Juicy secrets
				modifier = {
					any_secret = {
						is_criminal_for = secret_owner
						NOT = { is_known_by = scope:consort }
					}
					add = 2
				}
			}
			save_scope_as = secret_holder
		}
		random_courtier = {
			limit = {
				NOT = { this = scope:secret_holder }
				OR = {
					is_consort_of = root
					is_parent_of = root
				}
				is_imprisoned = no
				any_close_family_member = {
					is_vassal_of = root
					NOT = {
						is_child_of = root
					}
				}
				save_temporary_scope_as = consort
				scope:secret_holder = {
					any_secret = {
						consort_events_secret_trigger = yes
					}
				}
			}
			weight = {
				base = 10
				#Scheming consorts
				modifier = {
					has_character_modifier = scheming_consort_modifier
					add = 2
				}

				#Scheming consorts
				modifier = {
					add = {
						value = intrigue
						multiply = 1.5
					}
				}

				#PS
				modifier = {
					exists = root.primary_spouse
					this = root.primary_spouse
					add = 3
				}
				#GC
				modifier = {
					has_court_position = grand_consort_court_position
					add = 2
				}
				#SS
				modifier = {
					is_married = yes
					NOR = {
						this = root.primary_spouse
						has_court_position = grand_consort_court_position
					}
					add = 1
				}

				#Mei is a spy
				modifier = {
					has_character_flag = flag_mei
					add = 3
				}

				#Your vassals' children
				modifier = {
					any_close_family_member = {
						is_vassal_of = root
						NOT = {
							is_child_of = root
						}
					}
					add = 10
				}
			}
			save_scope_as = consort
		}
		scope:secret_holder = {
			random_secret = {
				limit = {
					consort_events_secret_trigger = yes
				}
				weight = {
					base = 10
					modifier = {
						is_criminal_for = secret_owner
						add = 5
					}
				}
				reveal_to = scope:consort
			}
		}
		random_list = {
			4 = {			
				add_character_flag = {
					flag = flag_consort_learned_secret
					months = 8
				}
			}
			6 = {			
				add_character_flag = {
					flag = flag_consort_learned_secret
					months = 24
				}
			}
			6 = {			
				add_character_flag = {
					flag = flag_consort_learned_secret
					months = 36
				}
			}
			6 = {			
				add_character_flag = {
					flag = flag_consort_learned_secret
					months = 48
				}
			}
		}
		if = {
			limit = {
				debug_only = yes
				exists = scope:consort
				exists = scope:secret_holder
			}
			root = {
				send_interface_toast = {
					type = event_generic_neutral
					title = success_hidden_event_t
					right_icon = scope:consort
					left_icon = scope:secret_holder
					custom_tooltip = secret_learned_debug_desc
				}
			}
		}
	}
}

##Consort learns of one of your known secrets##
scripted_trigger consort_events_vassal_trigger = {
	save_temporary_scope_as = secret_holder
	root = {
		any_courtier = {
			NOT = { 
				is_close_family_of = scope:secret_holder
			}
			OR = {
				is_consort_of = root
				is_parent_of = root
			}
			is_imprisoned = no
			any_close_family_member = {
				is_vassal_of = root
				NOT = {
					is_child_of = root
				}
			}
			save_temporary_scope_as = consort
		}
	}
	any_secret = {
		consort_events_secret_trigger = yes
		is_known_by = root
	}
}

consort_events.0031 = {
	hidden = yes

	trigger = {
		any_consort = {
			is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
			is_imprisoned = no
			count >= 3
		}
		any_vassal = {
			consort_events_vassal_trigger = yes
		}
		NOT = {
			has_character_flag = flag_consort_learned_secret
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			any_consort = {
				has_character_flag = flag_mei
				is_courtier_of = root
			}
		}
		modifier = {
			add = 0.1
			any_courtier = {
				OR = {
					is_consort_of = root
					is_parent_of = root
				}
				any_close_family_member = {
					is_vassal_of = root
					NOT = {
						is_child_of = root
					}
				}
			}
		}
	}

	immediate = {
		random_vassal = {
			limit = {
				consort_events_vassal_trigger = yes
			}
			weight = {
				base = 10
				#Juicy secrets
				modifier = {
					any_secret = {
						is_criminal_for = secret_owner
						NOT = { is_known_by = scope:consort }
					}
					add = 1
				}
				modifier = {
					is_powerful_vassal_of = root
					add = 2
				}
			}
			save_scope_as = secret_holder
		}
		random_courtier = {
			limit = {
				NOT = { 
					is_close_family_of = scope:secret_holder
				}
				OR = {
					is_consort_of = root
					is_parent_of = root
				}
				is_imprisoned = no
				any_close_family_member = {
					is_vassal_of = root
					NOT = {
						is_child_of = root
					}
				}
				save_temporary_scope_as = consort
				scope:secret_holder = {
					any_secret = {
						consort_events_secret_trigger = yes
					}
				}
			}
			weight = {
				base = 10
				#Scheming consorts
				modifier = {
					has_character_modifier = scheming_consort_modifier
					add = 2
				}

				#Scheming consorts
				modifier = {
					add = {
						value = intrigue
						multiply = 1.2
					}
				}

				#PS
				modifier = {
					exists = root.primary_spouse
					this = root.primary_spouse
					add = 3
				}
				#GC
				modifier = {
					has_court_position = grand_consort_court_position
					add = 2
				}
				#SS
				modifier = {
					is_married = yes
					NOR = {
						this = root.primary_spouse
						has_court_position = grand_consort_court_position
					}
					add = 1
				}

				#Mei is a spy
				modifier = {
					has_character_flag = flag_mei
					add = 3
				}

				#Relation
				modifier = {
					has_relation_potential_lover = root
					add = 1
				}
				modifier = {
					has_relation_lover = root
					add = 2
				}
				modifier = {
					has_relation_soulmate = root
					add = 3
				}

				modifier = {
					has_relation_potential_friend = root
					add = 1
				}
				modifier = {
					has_relation_friend = root
					add = 2
				}
				modifier = {
					has_relation_best_friend = root
					add = 3
				}

				#Your vassals' children
				modifier = {
					any_close_family_member = {
						is_vassal_of = root
						NOT = {
							is_child_of = root
						}
					}
					add = 10
				}
			}
			save_scope_as = consort
		}
		scope:secret_holder = {
			random_secret = {
				limit = {
					consort_events_secret_trigger = yes
				}
				weight = {
					base = 10
					modifier = {
						is_criminal_for = secret_owner
						add = 5
					}
				}
				reveal_to = scope:consort
			}
		}
		random_list = {
			4 = {			
				add_character_flag = {
					flag = flag_consort_learned_secret
					months = 8
				}
			}
			6 = {			
				add_character_flag = {
					flag = flag_consort_learned_secret
					months = 24
				}
			}
			6 = {			
				add_character_flag = {
					flag = flag_consort_learned_secret
					months = 36
				}
			}
			6 = {			
				add_character_flag = {
					flag = flag_consort_learned_secret
					months = 48
				}
			}
		}
		if = {
			limit = {
				debug_only = yes
				exists = scope:consort
				exists = scope:secret_holder
			}
			root = {
				send_interface_toast = {
					type = event_generic_neutral
					title = success_hidden_event_t
					right_icon = scope:consort
					left_icon = scope:secret_holder
					custom_tooltip = secret_learned_debug_desc
				}
			}
		}
	}
}

##Consort learns of one of your secrets##
consort_events.0032 = {
	hidden = yes

	trigger = {
		any_consort = {
			is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
			is_imprisoned = no
			count >= 3
		}
		any_courtier = {
			OR = {
				is_consort_of = root
				is_parent_of = root
			}
			is_imprisoned = no
			any_close_family_member = {
				is_vassal_of = root
				NOT = {
					is_child_of = root
				}
			}
			save_temporary_scope_as = consort
		}
		any_secret = {
			consort_events_secret_trigger = yes
		}
		NOT = {
			has_character_flag = flag_consort_learned_secret
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			any_consort = {
				has_character_flag = flag_mei
				is_courtier_of = root
			}
		}
		modifier = {
			add = 0.1
			any_courtier = {
				OR = {
					is_consort_of = root
					is_parent_of = root
				}
				any_close_family_member = {
					is_vassal_of = root
					NOT = {
						is_child_of = root
					}
				}
			}
		}
	}

	immediate = {
		save_scope_as = secret_holder
		random_courtier = {
			limit = {
				OR = {
					is_consort_of = root
					is_parent_of = root
				}
				is_imprisoned = no
				any_close_family_member = {
					is_vassal_of = root
					NOT = {
						is_child_of = root
					}
				}
				save_temporary_scope_as = consort
				root = {
					any_secret = {
						consort_events_secret_trigger = yes
					}
				}
			}
			weight = {
				base = 10
				#Scheming consorts
				modifier = {
					has_character_modifier = scheming_consort_modifier
					add = 2
				}

				#Scheming consorts
				modifier = {
					add = {
						value = intrigue
						multiply = 1.2
					}
				}

				#PS
				modifier = {
					exists = root.primary_spouse
					this = root.primary_spouse
					add = 3
				}
				#GC
				modifier = {
					has_court_position = grand_consort_court_position
					add = 2
				}
				#SS
				modifier = {
					is_married = yes
					NOR = {
						this = root.primary_spouse
						has_court_position = grand_consort_court_position
					}
					add = 1
				}

				#Favor
				modifier = {
					has_character_modifier = beloved_consort_modifier
					add = 3
				}
				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 2
				}
				modifier = {
					has_character_modifier = favor_boost_modifier
					add = 2
				}

				#Relation
				modifier = {
					has_relation_potential_lover = root
					add = 1
				}
				modifier = {
					has_relation_lover = root
					add = 2
				}
				modifier = {
					has_relation_soulmate = root
					add = 3
				}

				modifier = {
					has_relation_potential_friend = root
					add = 1
				}
				modifier = {
					has_relation_friend = root
					add = 2
				}
				modifier = {
					has_relation_best_friend = root
					add = 3
				}

				#Mei is a spy
				modifier = {
					has_character_flag = flag_mei
					add = 3
				}

				#Your vassals' children
				modifier = {
					any_close_family_member = {
						is_vassal_of = root
						NOT = {
							is_child_of = root
						}
					}
					add = 10
				}
			}
			save_scope_as = consort
		}
		scope:secret_holder = {
			random_secret = {
				limit = {
					consort_events_secret_trigger = yes
				}
				weight = {
					base = 10
					modifier = {
						is_criminal_for = secret_owner
						add = 5
					}
				}
				reveal_to = scope:consort
			}
		}
		random_list = {
			4 = {			
				add_character_flag = {
					flag = flag_consort_learned_secret
					months = 8
				}
			}
			6 = {			
				add_character_flag = {
					flag = flag_consort_learned_secret
					months = 24
				}
			}
			6 = {			
				add_character_flag = {
					flag = flag_consort_learned_secret
					months = 36
				}
			}
			6 = {			
				add_character_flag = {
					flag = flag_consort_learned_secret
					months = 48
				}
			}
		}
		if = {
			limit = {
				debug_only = yes
				exists = scope:consort
				exists = scope:secret_holder
			}
			root = {
				send_interface_toast = {
					type = event_generic_neutral
					title = success_hidden_event_t
					right_icon = scope:consort
					left_icon = scope:secret_holder
					custom_tooltip = secret_learned_debug_desc
				}
			}
		}
	}
}

##Consort leaks a secret to a vassal##
scripted_trigger consort_events_secret_0033_trigger = {
	OR = {	
		is_shunned_for = secret_owner
		is_criminal_for = secret_owner
	}
	secret_owner = {
		OR = {
			this = root
			is_courtier_of = root
			is_vassal_of = root
		}
		NOR = {
			is_close_family_of = scope:consort
			this = scope:consort
		}
	}
	NOT = {
		is_known_by = scope:confidant
	}
}

scripted_trigger consort_events_consort_0033_trigger = {
	OR = {
		is_consort_of = root
		is_parent_of = root
	}
	any_close_family_member = {
		NOR = {
			is_child_of = root
			has_trait = loyal
		}
		is_vassal_of = root
		save_temporary_scope_as = confidant
	}
	save_temporary_scope_as = consort
	any_known_secret = {
		consort_events_secret_0033_trigger = yes
	}
	NOR = {
		has_relation_soulmate = root
		has_relation_best_friend = root

		has_trait = loyal
		has_trait = honest

		has_trait = craven
		has_character_flag = flag_caught_leaking_information
	}
	intrigue >= 15
}

consort_events.0033 = {
	hidden = yes

	trigger = {
		any_consort = {
			is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
			is_imprisoned = no
			count >= 3
		}
		any_courtier = {
			consort_events_consort_0033_trigger = yes
		}
		NOT = {
			has_character_flag = flag_consort_leaked_secret
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			any_consort = {
				has_character_flag = flag_mei
				is_courtier_of = root
			}
		}
		modifier = {
			add = 0.1
			any_courtier = {
				OR = {
					is_consort_of = root
					is_parent_of = root
				}
				any_close_family_member = {
					is_vassal_of = root
					NOT = {
						is_child_of = root
					}
				}
			}
		}
		#The GC aptitude
		#GC - High aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 3
				opinion = {
					target = root
					value >= -10
				}
			}
			add = -0.1
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 4
				opinion = {
					target = root
					value >= -10
				}
			}
			add = -0.05
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 5
				opinion = {
					target = root
					value >= -10
				}
			}
			add = -0.05
		}
		#GC - Low aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position <= 2
			}
			add = 0.1
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 1
			}
			add = 0.1
		}
	}

	immediate = {
		save_scope_as = harem_liege
		random_courtier = {
			limit = {
				consort_events_consort_0033_trigger = yes
			}
			weight = {
				base = 10
				#Scheming consorts
				modifier = {
					has_character_modifier = scheming_consort_modifier
					add = 2
				}

				#Evil consorts
				modifier = {
					harem_politics_evil_consort_trigger = yes
					add = 2
				}

				#Scheming consorts
				modifier = {
					add = {
						value = intrigue
						multiply = 1.5
					}
				}

				#PS
				modifier = {
					exists = root.primary_spouse
					this = root.primary_spouse
					add = 3
				}
				#GC
				modifier = {
					has_court_position = grand_consort_court_position
					add = 2
				}
				#SS
				modifier = {
					is_married = yes
					NOR = {
						this = root.primary_spouse
						has_court_position = grand_consort_court_position
					}
					add = 1
				}
				#Parent
				modifier = {
					is_parent_of = root
					add = 15
				}

				#Favor
				modifier = {
					has_character_modifier = beloved_consort_modifier
					add = 3
				}
				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 2
				}
				modifier = {
					has_character_modifier = favor_boost_modifier
					add = 2
				}

				#Spies
				modifier = {
					any_close_family_member = {
						is_powerful_vassal_of = root
						NOT = {
							is_child_of = root
						}
					}
					add = 10
				}
				modifier = {
					any_close_family_member = {
						is_councillor_of = root
						NOT = {
							is_child_of = root
						}
					}
					add = 5
				}

				#Mei is a spy
				modifier = {
					has_character_flag = flag_mei
					add = 3
				}
			}
			save_scope_as = consort
		}
		scope:consort = {
			random_close_family_member = {
				limit = {
					NOR = {
						is_child_of = root
						has_trait = loyal
					}
					is_vassal_of = root
					save_temporary_scope_as = confidant
					scope:consort = {
						any_known_secret = {
							consort_events_secret_0033_trigger = yes
						}
					}
				}
				weight = {
					base = 10
					modifier = {
						is_powerful_vassal_of = root
						add = 10
					}
					modifier = {
						is_councillor_of = root
						add = 5
					}
				}
				save_scope_as = confidant
			}
			random_known_secret = {
				limit = {
					consort_events_secret_0033_trigger = yes
				}
				weight = {
					base = 10
					modifier = {
						is_criminal_for = secret_owner
						add = 5
					}
					modifier = {
						secret_owner = {
							this = root
						}
						add = 5
					}
					modifier = {
						secret_owner = {
							is_vassal_of = root
						}
						add = 5
					}
				}
				save_scope_as = secret_to_reveal
				scope:secret_to_reveal = {
					secret_owner = {
						save_scope_as = secret_holder
					}
				}
			}

			if = {
				limit = {
					exists = root.cp:councillor_spymaster
					NOT = {
						this = root.cp:councillor_spymaster
					}
				}
				root.cp:councillor_spymaster = {
					save_scope_as = spymaster
				}
			}
			else = {
				root = {
					save_scope_as = spymaster
				}
			}

			duel = {
				skill = intrigue
				target = scope:spymaster
				50 = { # Not caught
					compare_modifier = {
						value = scope:duel_value
						multiplier = 2.5
						min = -50
					}

					modifier = { #Trusting
						add = 10
						scope:spymaster = {
							has_trait = trusting
						}
					}

					modifier = { #Friends
						add = 5
						scope:spymaster = {
							has_relation_potential_friend = scope:consort
						}
					}
					modifier = { #Friends
						add = 10
						scope:spymaster = {
							has_relation_friend = scope:consort
						}
					}
					modifier = { #Friends
						add = 15
						scope:spymaster = {
							has_relation_best_friend = scope:consort
						}
					}
					
					modifier = { #Lovers
						add = 5
						scope:spymaster = {
							has_relation_potential_lover = scope:consort
						}
					}
					modifier = { #Lovers
						add = 10
						scope:spymaster = {
							has_relation_lover = scope:consort
						}
					}
					modifier = { #Lovers
						add = 15
						scope:spymaster = {
							has_relation_soulmate = scope:consort
						}
					}

					modifier = { #Traits
						add = -15
						scope:spymaster = {
							has_trait = deceitful
						}
					}

					modifier = { #Scheming consorts
						add = 5
						has_character_modifier = scheming_consort_modifier
					}

					opinion_modifier = {
						who = scope:spymaster
						opinion_target = scope:consort
						min = -20
						max = 20
						multiplier = 1
					}
					
					modifier = { #Favored consorts are harder to target
						add = 5
						has_character_modifier = favored_consort_modifier
					}
					modifier = { #Favored consorts are harder to target
						add = 5
						has_character_modifier = favor_boost_modifier
					}
					modifier = { #Favored consorts are harder to target
						add = 10
						has_character_modifier = beloved_consort_modifier
					}

					modifier = { #Unfavored consorts don't have many servants at their disposal
						add = -10
						has_character_modifier = unfavored_consort_modifier
					}
					modifier = { #Unfavored consorts don't have many servants at their disposal
						add = -20
						has_character_modifier = forgotten_consort_modifier
					}
					
					#PS
					modifier = {
						exists = root.primary_spouse
						this = root.primary_spouse
						add = 20
					}
					#GC
					modifier = {
						has_court_position = grand_consort_court_position
						add = 15
					}
					#SS
					modifier = {
						is_married = yes
						NOR = {
							this = root.primary_spouse
							has_court_position = grand_consort_court_position
						}
						add = 10
					}
					#Parent
					modifier = {
						is_parent_of = root
						add = 15
					}
	
					#Actual effect
					if = {
						limit = {
							scope:confidant = {
								is_ai = yes
							}
						}
						scope:secret_to_reveal = {
							reveal_to = scope:confidant
						}
					}
					else = {
						scope:confidant = {
							trigger_event = {
								id = consort_events.0034
								days = { 6 12 }
							}
						}
					}
				}
				50 = { # Caught
					compare_modifier = {
						value = scope:duel_value
						multiplier = -2.5
						min = -50
					}
					modifier = { #Paranoid consorts
						add = 10
						scope:spymaster = {
							has_trait = paranoid
						}
					}
					modifier = { #Rivals
						add = 5
						scope:spymaster = {
							has_relation_potential_rival = scope:consort
						}
					}
					modifier = { #Friends
						add = 10
						scope:spymaster = {
							has_relation_rival = scope:consort
						}
					}
					modifier = { #Friends
						add = 15
						scope:spymaster = {
							has_relation_nemesis = scope:consort
						}
					}
					
					opinion_modifier = {
						who = scope:spymaster
						opinion_target = scope:consort
						min = -10
						max = 10
						multiplier = -1
					}
					
					modifier = { #Favored consorts are harder to target
						add = -5
						has_character_modifier = favored_consort_modifier
					}
					modifier = { #Favored consorts are harder to target
						add = -5
						has_character_modifier = favor_boost_modifier
					}
					modifier = { #Favored consorts are harder to target
						add = -10
						has_character_modifier = beloved_consort_modifier
					}

					modifier = { #Unfavored consorts don't have many servants at their disposal
						add = 10
						has_character_modifier = unfavored_consort_modifier
					}
					modifier = { #Unfavored consorts don't have many servants at their disposal
						add = 20
						has_character_modifier = forgotten_consort_modifier
					}
					
					#PS
					modifier = {
						exists = root.primary_spouse
						this = root.primary_spouse
						add = -15
					}
					#GC
					modifier = {
						has_court_position = grand_consort_court_position
						add = -10
					}
					#SS
					modifier = {
						is_married = yes
						NOR = {
							this = root.primary_spouse
							has_court_position = grand_consort_court_position
						}
						add = -5
					}
					#Parent
					modifier = {
						is_parent_of = root
						add = -20
					}
	
					#Actual effect
					save_scope_as = schemer
					root = {
						trigger_event = {
							id = harem_politics.0033
							days = { 6 12 }
						}
					}
				}
			}
		}

		random_list = {
			4 = {			
				add_character_flag = {
					flag = flag_consort_leaked_secret
					months = 8
				}
			}
			6 = {			
				add_character_flag = {
					flag = flag_consort_leaked_secret
					months = 48
				}
			}
		}
		if = {
			limit = {
				debug_only = yes
				exists = scope:consort
				exists =  scope:confidant
			}
			root = {
				send_interface_toast = {
					type = event_generic_neutral
					title = success_hidden_event_t
					right_icon = scope:consort
					left_icon = scope:confidant
					custom_tooltip = secret_leaked_debug_desc
				}
			}
		}
	}
}

##Successful leak##
consort_events.0034 = {
	type = letter_event
	opening = harem_politics.0029.opening.neutral
	desc = consort_events.0034.desc
	sender = scope:consort

	immediate = {
		scope:secret_to_reveal = {
			reveal_to = root
		}
	}

	option = {
		name = consort_events.0031.a
		ai_chance = {
			base = 1
		}
	}
}

#################################################
##Influential consort gives influence to family##
#################################################
scripted_trigger is_influential_consort_trigger = {
	is_courtier_of = root
	is_available_healthy_adult = yes
	harem_politics_unfavored_consort_trigger = no
	harem_politics_evil_consort_trigger = yes

	OR = {
		AND = {	#Consorts need some favor
			is_consort_of = root
			OR = {	
				harem_politics_favored_consort_trigger = yes
				has_relation_lover = root
				has_relation_soulmate = root
			}
		}
		is_parent_of = root
	}

	house ?= {
		NOT = { this = root.house }
		house_head = {
			is_adult = yes
			government_allows = administrative
			is_vassal_or_below_of = root
			OR = {
				is_landless_administrative = yes
				is_governor = yes
			}
			NOR = {
				is_child_of = root
				has_trait = humble
				has_trait = content
				has_trait = loyal
				has_trait = just
			}
		}
	}
	
	NOR = {
		has_trait = humble
		has_trait = content
		has_trait = loyal
		has_trait = just

		has_relation_potential_rival = root
		has_relation_rival = root
		has_relation_nemesis = root
	}
}

consort_events.0035 = {
	hidden = yes
	
	trigger = {
		government_has_flag = government_has_influence
		is_landed = yes
		is_independent_ruler = yes
		highest_held_title_tier >= tier_kingdom

		exists = house
		any_consort = {
			is_courtier_of = root
			count >= 3
		}
		any_consort = {
			is_influential_consort_trigger = yes
		}

		influence >= medium_influence_value

		is_physically_able_adult = yes

		NOT = {
			has_character_flag = had_influential_consort_flag
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.15
			has_trait = trusting
		}
		modifier = {
			add = -0.4
			has_trait = paranoid
		}
		modifier = {
			add = 0.1
			any_consort = {
				count >= 5
			}
		}
		modifier = {
			add = 0.05
			any_consort = {
				count >= 10
			}
		}
		modifier = {
			add = 0.1
			influence >= major_influence_value
		}
		modifier = {
			add = 0.1
			influence >= massive_influence_value
		}
		modifier = {
			add = 0.1
			influence >= monumental_influence_value
		}
		#The GC aptitude
		#GC - High aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 3
				opinion = {
					target = root
					value >= -10
				}
			}
			add = -0.1
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 4
				opinion = {
					target = root
					value >= -10
				}
			}
			add = -0.05
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 5
				opinion = {
					target = root
					value >= -10
				}
			}
			add = -0.05
		}
		#GC - Low aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position <= 2
			}
			add = 0.1
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 1
			}
			add = 0.1
		}
	}
	
	immediate = {
		save_scope_as = partner
		every_courtier = {
			limit = {
				is_influential_consort_trigger = yes
			}
			add_to_list = influential_consort_list
		}
		
		random_in_list = {
			list = influential_consort_list
			weight = {
				base = 20
				#Rank
				modifier = {
					is_parent_of = root
					add = 20
				}
				modifier = {
					exists = root.primary_spouse
					this = root.primary_spouse
					add = 20
				}
				modifier = {
					has_court_position = grand_consort_court_position
					add = 15
				}
				modifier = {
					is_married = yes
					NOR = {
						this = root.primary_spouse
						has_court_position = grand_consort_court_position
					}
					add = 10
				}
				#Traits
				modifier = {
					has_trait = calm
					add = -25
				}
				modifier = {
					has_trait = lazy
					add = -15
				}
				
				modifier = {
					has_trait = arrogant
					add = 10
				}
				modifier = {
					has_trait = ambitious
					add = 15
				}
				modifier = {
					has_trait = greedy
					add = 15
				}
				#Scheming consorts
				modifier = {
					add = 10
					has_character_modifier = scheming_consort_modifier
				}
				#Favor
				modifier = {
					add = 20
					has_character_modifier = beloved_consort_modifier
				}
				modifier = {
					add = 15
					has_character_modifier = favor_boost_modifier
				}
				modifier = {
					add = 10
					has_character_modifier = favored_consort_modifier
				}
				#Relation
				modifier = {
					add = 20
					has_relation_soulmate = root
				}
				modifier = {
					add = 10
					has_relation_lover = root
				}
				#Powerful families
				modifier = {
					add = 10
					house ?= {
						is_powerful_family = yes
					}
				}
			}
			save_scope_as = influential_consort
		}
		if = {
			limit = {
				exists = scope:influential_consort.house_head
			}
			scope:influential_consort.house_head = {
				save_scope_as = consort_relative
			}
			if = {
				limit = {
					exists = scope:consort_relative
				}
				random_list = {
					0 = { #Big influence
						modifier = {
							influence >= massive_influence_value
							add = 10
						}
						modifier = {
							has_relation_soulmate = scope:influential_consort
							add = 5
						}
						modifier = {
							scope:influential_consort = {
								has_character_modifier = beloved_consort_modifier
							}
							add = 5
						}
						modifier = {
							scope:influential_consort = {
								has_character_modifier = favor_boost_modifier
							}
							add = 10
						}
						save_scope_value_as = {
							name = stolen_influence
							value = medium_influence_value
						}
					}
					0 = { #Some influence
						modifier = {
							influence >= major_influence_value
							add = 20
						}
						save_scope_value_as = {
							name = stolen_influence
							value = minor_influence_value
						}
					}
					1 = { #Little influence
						modifier = {
							influence <= medium_influence_value
							add = 20
						}
						save_scope_value_as = {
							name = stolen_influence
							value = miniscule_influence_value
						}
					}
				}
			}
			root = {
				send_interface_toast = {
					type = event_generic_bad
					title = influential_consort_t
					right_icon = scope:influential_consort
					custom_tooltip = influential_consort_desc
					
					change_influence = {
						value = 0
						subtract = scope:stolen_influence
					}
				}
				#Flag assignment
				if = {
					limit = {
						scope:stolen_influence = miniscule_influence_value
					}
					random_list = {
						1 = {
							add_character_flag = {
								flag = had_influential_consort_flag
								months = 9
							}
						}
						1 = {
							add_character_flag = {
								flag = had_influential_consort_flag
								years = 1
							}
						}
						1 = {
							add_character_flag = {
								flag = had_influential_consort_flag
								months = 18
							}
						}
						1 = {
							add_character_flag = {
								flag = had_influential_consort_flag
								years = 2
							}
						}
					}
				}
				else = {
					random_list = {
						1 = {
							add_character_flag = {
								flag = had_influential_consort_flag
								years = 1
							}
						}
						1 = {
							add_character_flag = {
								flag = had_influential_consort_flag
								months = 18
							}
						}
						1 = {
							add_character_flag = {
								flag = had_influential_consort_flag
								years = 2
							}
						}
						1 = {
							add_character_flag = {
								flag = had_influential_consort_flag
								years = 3
							}
						}
					}
				}
			}
			scope:consort_relative = {
				if = {
					limit = {
						is_ai = no
					}
					send_interface_toast = {
						type = event_generic_good
						title = influential_consort_t
						right_icon = scope:influential_consort
						custom_tooltip = influential_consort_desc
						
						change_influence = {
							value = 0
							add = scope:stolen_influence
						}
					}
				}
			}
		}
	}
}

#############################
##A consort murders an heir##
#############################
scripted_trigger is_valid_scheming_consort = {
	is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
	is_imprisoned = no

	is_physically_able_ai_adult = yes

	harem_politics_evil_consort_trigger = yes

	intrigue >= medium_skill_rating

	NOR = {
		is_parent_of = $CHILD$

		has_relation_friend = $CHILD$
		has_relation_best_friend = $CHILD$
		has_relation_lover = $CHILD$
		has_relation_soulmate = $CHILD$

		has_relation_rival = root
		has_relation_nemesis = root

		has_opinion_modifier = {
			target = root
			modifier = forced_me_concubine_marriage_opinion
		}
	}

	save_temporary_scope_as = temporary_consort

	OR = {
		AND = { # The child rivals their child
			$CHILD$ = {
				is_player_heir_of = root
			}
			root = {
				NOT = {
					has_realm_law = confederate_partition_succession_law
				}
			}
			any_child = {
				is_child_of = root
				is_alive = yes
				character_gender_can_inherit_from_trigger = { CHARACTER = root }
				age >= 3
			}
		}
		AND = { # The child is a rival's child
			$CHILD$ = {
				any_parent = {
					is_consort_of = root
					OR = {
						has_relation_rival = scope:temporary_consort
						has_relation_nemesis = scope:temporary_consort
					}
					NOT = { this = root }
				}
			}
		}
	}

	can_start_scheme = {
		type = murder
		target_character = $CHILD$
	}
}

consort_events.0036 = {
	hidden = yes
	
	trigger = {
		any_child = {
			OR = {
				trigger_if = {	
					limit = {
						root = {
							NOT = { has_realm_law = confederate_partition_succession_law }
						}
					}
					is_player_heir_of = root
				}
				any_parent = {
					is_consort_of = root
					OR = {
						any_relation = {
							type = rival
							is_consort_of = root
							is_courtier_of = root
						}
						any_relation = {
							type = nemesis
							is_consort_of = root
							is_courtier_of = root
						}
					}
				}
			}
			save_temporary_scope_as = temporary_child
		}
		any_consort = {
			is_valid_scheming_consort = {
				CHILD = scope:temporary_child
			}
		}
		any_consort = {
			is_valid_for_favor_system_trigger = { HAREM_LIEGE = root }
			count >= 4
		}
		is_landed_or_landless_administrative = yes
		NOT = {
			has_character_flag = had_scheming_consort_heir_flag
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			add = 0.1
			any_consort = {
				count >= 5
			}
		}
		modifier = {
			add = 0.05
			any_consort = {
				count >= 10
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				has_character_flag = flag_yanwan
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				has_character_flag = flag_nurbanu
			}
		}
		modifier = {
			add = 0.05
			any_consort = {
				has_character_flag = flag_mei
			}
		}
		modifier = {
			add = 0.1
			any_consort = {
				harem_politics_special_consort_trigger = yes
			}
		}
		modifier = {
			add = 0.15
			highest_held_title_tier >= tier_kingdom
		}
		#The GC aptitude
		#GC - High aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 3
				opinion = {
					target = root
					value >= -10
				}
			}
			add = -0.15
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position >= 4
				opinion = {
					target = root
					value >= -10
				}
			}
			add = -0.3
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 5
				opinion = {
					target = root
					value >= -10
				}
			}
			add = -0.3
		}
		#GC - Low aptitude
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position <= 2
			}
			add = 0.1
		}
		modifier = {
			employs_court_position = grand_consort_court_position
			any_court_position_holder = {
				type = grand_consort_court_position
				aptitude:grand_consort_court_position = 1
			}
			add = 0.1
		}
	}
	
	immediate = {
		save_scope_as = partner
		random_child = {
			limit = {
				OR = {
					trigger_if = {	
						limit = {
							root = {
								NOT = { has_realm_law = confederate_partition_succession_law }
							}
						}
						is_player_heir_of = root
					}
					any_parent = {
						is_consort_of = root
						OR = {
							any_relation = {
								type = rival
								is_consort_of = root
								is_courtier_of = root
							}
							any_relation = {
								type = nemesis
								is_consort_of = root
								is_courtier_of = root
							}
						}
					}
				}
			}
			weight = {
				base = 1
				modifier = {
					add = 1
					is_player_heir_of = root
				}
			}
			save_scope_as = child
		}

		if = {
			limit = {
				exists = scope:child
				any_consort = {
					is_valid_scheming_consort = {
						CHILD = scope:child
					}
				}
			}
			random_consort = {
				limit = {
					is_valid_scheming_consort = {
						CHILD = scope:child
					}
				}
				weight = {
					base = 10
					modifier = { # Greed
						any_child = {
							is_child_of = root
							is_alive = yes
							character_gender_can_inherit_from_trigger = { CHARACTER = root }
						}
						add = {
							value = ai_greed
							multiply = 0.25
						}
					}
					modifier = { # Vengefulness
						add = {
							value = ai_vengefulness
							multiply = 0.5
						}
					}
					modifier = { #Intrigue
						add = {
							value = intrigue
							multiply = 2
						}
					}
					modifier = {
						OR = {	
							has_character_flag = flag_yanwan
							has_character_flag = flag_nurbanu
						}
						add = 15
					}
					modifier = {
						has_character_flag = flag_mei
						add = 10
					}
					modifier = {
						has_character_flag = flag_hailan
						add = 5
					}
					modifier = { # Higher-ups have more resources
						exists = root.primary_spouse
						this = root.primary_spouse
						add = 15
					}
					modifier = { # Higher-ups have more resources
						has_court_position = grand_consort_court_position
						trigger_if = {
							limit = {
								exists = root.primary_spouse
							}
							this != root.primary_spouse
						}
						add = 10
					}
					modifier = { # Higher-ups have more resources
						is_spouse_of = root
						NOR = {
							this = root.primary_spouse
							has_court_position = grand_consort_court_position
						}
						add = 5
					}

					# Favor
					modifier = {
						has_character_modifier = beloved_consort_modifier
						add = 15
					}
					modifier = {
						has_character_modifier = favor_boost_modifier
						add = 10
					}
					modifier = {
						has_character_modifier = favored_consort_modifier
						add = 5
					}
					modifier = {
						has_character_modifier = unfavored_consort_modifier
						add = 5
					}
					modifier = { # Forgotten consorts don't draw attention
						has_character_modifier = forgotten_consort_modifier
						add = 10
					}
				}
				save_scope_as = scheming_consort
			}
			if = {
				limit = {
					scope:scheming_consort ?= {
						can_start_scheme = {
							type = murder
							target_character = scope:child
						}
					}
				}
				scope:scheming_consort = {
					start_scheme = {
						type = murder
						target_character = scope:child
					}
				}
				add_character_flag = {
					flag = had_scheming_consort_heir_flag
					years = 2
				}
				if = {
					limit = {
						debug_only = yes
					}
					send_interface_toast = {
						type = event_generic_neutral
						title = success_hidden_event_t
						right_icon = scope:child
						left_icon = scope:scheming_consort
						custom_tooltip = successful_hidden_event_desc
					}
				}
			}
		}
	}
}

######################
##Summon to chambers##
######################

scripted_effect had_sex_with_consort_effect = {
	had_sex_with_effect = {
		CHARACTER = scope:recipient
		PREGNANCY_CHANCE = pregnancy_chance
	}
	random_list = {
		10 = { # A very good night
			modifier = {
				scope:recipient = {
					opinion = {
						target = scope:actor
						value >= 50
					}
				}
				add = 50
			}
			opinion_modifier = {
				who = scope:recipient
				opinion_target = scope:actor
				multiplier = 0.5
			}
			compatibility_modifier = {
				who = scope:recipient
				compatibility_target = scope:actor
				min = -25
				max = 25
				multiplier = 0.5
			}
			opinion_modifier = {
				who = scope:actor
				opinion_target = scope:recipient
				multiplier = 0.5
			}
			modifier = {
				has_relation_soulmate = scope:recipient
				add = 80
			}
			modifier = {
				has_relation_lover = scope:recipient
				add = 65
			}
			modifier = {
				has_relation_best_friend = scope:recipient
				add = 15
			}
			modifier = {
				has_relation_friend = scope:recipient
				add = 10
			}
			set_local_variable = {
				name = fantastic_night_variable
				value = yes
			}
			if = {
				limit = { 
					NOR = { 
						has_relation_lover = scope:recipient
						has_relation_soulmate = scope:recipient
					}
				}
				progress_towards_lover_effect = {
					CHARACTER = scope:recipient
					REASON = lover_seduction_general
					OPINION = 20
				}
			}
			else_if = {
				limit = {
					scope:recipient = {
						NOT = {
							has_opinion_modifier = {
								modifier = romance_opinion
								target = scope:actor
							}
						}
					}
				}
				add_opinion = {
					target = scope:recipient
					modifier = romance_opinion
					opinion = 10
				}
				scope:recipient = {
					add_opinion = {
						target = scope:actor
						modifier = romance_opinion
						opinion = 10
					}
				}
			}
			scope:recipient = {
				calyver_favor_medium_gain_effect = yes
			}
		}
		50 = { # A good night
			opinion_modifier = {
				who = scope:recipient
				opinion_target = scope:actor
				multiplier = 0.5
			}
			compatibility_modifier = {
				who = scope:recipient
				compatibility_target = scope:actor
				min = -25
				max = 25
				multiplier = 0.5
			}
			opinion_modifier = {
				who = scope:actor
				opinion_target = scope:recipient
				multiplier = 0.5
			}
			modifier = {
				has_relation_soulmate = scope:recipient
				add = 25
			}
			modifier = {
				has_relation_lover = scope:recipient
				add = 15
			}
			modifier = {
				has_relation_best_friend = scope:recipient
				add = 15
			}
			modifier = {
				has_relation_friend = scope:recipient
				add = 10
			}
			set_local_variable = {
				name = good_night_variable
				value = yes
			}
			if = {
				limit = { 
					NOR = { 
						has_relation_potential_lover = scope:recipient
						has_relation_lover = scope:recipient
						has_relation_soulmate = scope:recipient
					}
				}
				progress_towards_lover_effect = {
					CHARACTER = scope:recipient
					REASON = lover_seduction_general
					OPINION = 10
				}
			}
			else_if = {
				limit = {
					scope:recipient = {
						NOT = {
							has_opinion_modifier = {
								modifier = romance_opinion
								target = scope:actor
							}
						}
					}
				}
				add_opinion = {
					target = scope:recipient
					modifier = romance_opinion
					opinion = 5
				}
				scope:recipient = {
					add_opinion = {
						target = scope:actor
						modifier = romance_opinion
						opinion = 5
					}
				}
			}
			scope:recipient = {
				calyver_favor_moderate_gain_effect = yes
			}
		}
		50 = { # A normal night
			modifier = {
				scope:recipient = {
					opinion = {
						target = scope:actor
						value <= 20
					}
				}
				add = 40
			}
			opinion_modifier = {
				who = scope:recipient
				opinion_target = scope:actor
				multiplier = 0.5
			}
			compatibility_modifier = {
				who = scope:recipient
				compatibility_target = scope:actor
				min = -25
				max = 25
				multiplier = 0.5
			}
			opinion_modifier = {
				who = scope:actor
				opinion_target = scope:recipient
				multiplier = 0.5
			}
			modifier = {
				has_relation_lover = scope:recipient
				add = 65
			}
			modifier = {
				has_relation_friend = scope:recipient
				add = 10
			}
			set_local_variable = {
				name = regular_night_variable
				value = yes
			}
			scope:recipient = {
				calyver_favor_minor_gain_effect = yes
				if = {
					limit = {
						NOT = {
							has_opinion_modifier = {
								modifier = romance_opinion
								target = scope:actor
							}
						}
					}
					add_opinion = {
						target = scope:actor
						modifier = romance_opinion
						opinion = 5
					}
					scope:actor = {
						add_opinion = {
							target = scope:recipient
							modifier = romance_opinion
							opinion = 5
						}
					}
				}
			}
		}
		20 = { # A boring night
			modifier = {
				scope:recipient = {
					opinion = {
						target = scope:actor
						value <= 20
					}
				}
				add = 50
			}
			opinion_modifier = {
				who = scope:recipient
				opinion_target = scope:actor
				multiplier = -0.2
			}
			compatibility_modifier = {
				who = scope:recipient
				compatibility_target = scope:actor
				min = -25
				max = 25
				multiplier = -0.5
			}
			opinion_modifier = {
				who = scope:actor
				opinion_target = scope:recipient
				multiplier = -0.2
			}
			modifier = {
				has_relation_rival = scope:recipient
				add = 65
			}
			modifier = {
				has_relation_nemesis = scope:recipient
				add = 85
			}
			set_local_variable = {
				name = boring_night_variable
				value = yes
			}
		}
	}
}

## Success ##
consort_events.0037 = {
	type = character_event
	title = harem_politics.0011.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = local_var:fantastic_night_variable
				}
				desc = consort_events.0037.fantastic.desc
			}
			triggered_desc = {
				trigger = {
					exists = local_var:good_night_variable
				}
				desc = consort_events.0037.good.desc
			}
			triggered_desc = {
				trigger = {
					exists = local_var:regular_night_variable
				}
				desc = consort_events.0037.regular.desc
			}
			triggered_desc = {
				desc = consort_events.0037.boring.desc
			}
		}
	}
	theme = seduce_scheme
	override_background = {
		reference = bedchamber
	}
	
	left_portrait = { 	
		character = scope:actor
		triggered_animation = {
			trigger = {
				exists = local_var:boring_night_variable
			}
  			animation = disappointed
  		}
		animation = flirtation
		outfit_tags = { nightgown }
	}
	right_portrait = { 	
		character = scope:recipient
		triggered_animation = {
			trigger = {
				exists = local_var:boring_night_variable
			}
  			animation = shame
  		}
		animation = flirtation
		outfit_tags = { nightgown }
	}
	
	trigger = {
		scope:recipient = {
			is_alive = yes
			is_consort_of = scope:actor
			is_valid_for_favor_system_trigger = { HAREM_LIEGE = scope:actor }
			NOT = {
				has_trait = pregnant
			}
			is_physically_able = yes
			is_healthy = yes
			is_imprisoned = no
		}
		scope:actor = {
			is_alive = yes
			is_physically_able = yes
			is_healthy = yes
			is_imprisoned = no
			NOR = {
				has_trait = celibate
				has_trait = devoted
				has_trait = pregnant
				has_trait = eunuch
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				has_character_flag = summoned_to_chambers_flag
			}
			remove_character_flag = summoned_to_chambers_flag
		}
		add_character_flag = {
			flag = summoned_to_chambers_flag
			years = 1
		}
		had_sex_with_consort_effect = yes
	}
	
	option = {
		name = {
			trigger = {
				exists = local_var:fantastic_night_variable
			}
			text = consort_events.0037.fantastic.a
		}
		name = {
			trigger = {
				exists = local_var:good_night_variable
			}
			text = consort_events.0037.good.a
		}
		name = {
			trigger = {
				exists = local_var:regular_night_variable
			}
			text = consort_events.0037.regular.a
		}
		name = {
			trigger = {
				exists = local_var:boring_night_variable
			}
			text = consort_events.0037.boring.a
		}
		
		ai_chance = {
			base = 1
		}
	}
}

## Failure ##
consort_events.0038 = {
	type = character_event
	title = harem_politics.0011.t
	desc = {
		desc = consort_events.0038.start.desc
		first_valid = {
			triggered_desc = { # They are your rival
				trigger = {
					OR = {
						has_relation_rival = scope:recipient
						has_relation_nemesis = scope:recipient
					}
				}
				desc = consort_events.0038.rival.desc
			}
			triggered_desc = {
				trigger = {
					scope:recipient.age <= 20
				}
				desc = consort_events.0038.inexperienced.desc
			}
			triggered_desc = {
				trigger = {
					scope:actor.age <= 20
				}
				desc = consort_events.0038.inexperienced_actor.desc
			}
			triggered_desc = { # Fallback - uncompatible
				desc = consort_events.0038.fallback.desc
			}
		}
	}
	theme = seduce_scheme
	override_background = {
		reference = bedchamber
	}
	
	right_portrait = { 	
		character = scope:actor
		animation = disapproval
		outfit_tags = { nightgown }
	}
	left_portrait = { 	
		character = scope:recipient
		animation = shame
		outfit_tags = { nightgown }
	}
	
	trigger = {
		scope:recipient = {
			is_alive = yes
			is_consort_of = scope:actor
			is_valid_for_favor_system_trigger = { HAREM_LIEGE = scope:actor }
			NOT = {
				has_trait = pregnant
			}
			is_physically_able = yes
			is_healthy = yes
			is_imprisoned = no
		}
		scope:actor = {
			is_alive = yes
			is_physically_able = yes
			is_healthy = yes
			is_imprisoned = no
			NOR = {
				has_trait = celibate
				has_trait = devoted
				has_trait = pregnant
				has_trait = eunuch
			}
		}
	}
	
	immediate = {
	}
	
	# Convince them to try
	option = {
		name = consort_events.0038.a
		if = {
			limit = {
				has_character_flag = summoned_to_chambers_flag
			}
			remove_character_flag = summoned_to_chambers_flag
		}
		add_character_flag = {
			flag = summoned_to_chambers_flag
			years = 1
		}

		duel = {
			skill = diplomacy
			value = high_skill_rating
			# Victory!
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				modifier = {
					scope:recipient = {
						has_trait = ambitious
					}
					add = 15
				}
				modifier = {
					scope:recipient = {
						has_trait = greedy
					}
					add = 10
				}
				modifier = {
					scope:recipient = {
						has_trait = arrogant
					}
					add = 5
				}
				min = 5
				desc = consort_events.0038.a.success.desc
				show_as_tooltip = {
					had_sex_with_effect = {
						CHARACTER = scope:recipient
						PREGNANCY_CHANCE = pregnancy_chance
					}
				}
				hidden_effect = {
					send_interface_toast = {
						type = event_generic_good
						title = consort_events.0038.a.success.title
						right_icon = scope:recipient
						had_sex_with_consort_effect = yes
					}
				}
			}
			# Defeat.
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				min = 5
				desc = consort_events.0038.a.defeat.desc
				show_as_tooltip = {
					scope:recipient = {
						add_opinion = {
							target = scope:actor
							modifier = disrespect_opinion
							opinion = -10
						}
					}
				}
				hidden_effect = {
					send_interface_toast = {
						type = event_generic_bad
						title = consort_events.0038.a.success.title
						right_icon = scope:recipient
						scope:recipient = {
							add_opinion = {
								target = scope:actor
								modifier = disrespect_opinion
								opinion = -10
							}
						}
					}
				}
			}
		}
		
		ai_chance = {
			base = 1
		}
	}

	# Just talk
	option = {
		name = consort_events.0038.b
		custom_tooltip = consort_events.0038.b.tt
		if = {
			limit = {
				has_character_flag = summoned_to_chambers_flag
			}
			remove_character_flag = summoned_to_chambers_flag
		}
		add_character_flag = {
			flag = summoned_to_chambers_flag
			years = 1
		}

		duel = {
			skill = diplomacy
			value = decent_skill_rating
			# Victory!
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				min = 5
				desc = consort_events.0038.a.success.desc
				hidden_effect = {
					send_interface_toast = {
						type = event_generic_good
						title = consort_events.0038.b.success.title
						right_icon = scope:recipient
						scope:recipient = {
							add_opinion = {
								target = scope:actor
								modifier = trust_opinion
								opinion = 5
							}
							random = {
								chance = 15
								progress_towards_friend_effect = {
									REASON = friend_showed_personal_interest
									CHARACTER = scope:actor
									OPINION = default_friend_opinion
								}
							}
						}
					}
				}
			}
			# Defeat.
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				min = 5
				desc = consort_events.0038.a.defeat.desc
				hidden_effect = {
					send_interface_toast = {
						type = event_generic_neutral
						title = consort_events.0038.b.success.title
						right_icon = scope:recipient
					}
				}
			}
		}
		
		ai_chance = {
			base = 1
		}
	}

	# Summon another consort
	option = {
		name = consort_events.0038.c
		custom_tooltip = consort_events.0038.c.tt
		if = {
			limit = {
				has_character_flag = summoned_to_chambers_flag
			}
			remove_character_flag = summoned_to_chambers_flag
		}
		scope:recipient = {
			calyver_favor_moderate_loss_effect = yes
		}
		
		ai_chance = {
			base = 1
		}
	}
}

####################
##Bestowing a name##
####################
# consort_events.1000 = {
# 	type = character_event
# 	title = consort_events.1000.t
# 	desc = consort_events.1000.desc
# 	theme = family
# 	override_background = {
# 		reference = throne_room
# 	}
	
# 	left_portrait = scope:actor
# 	right_portrait = {
# 		character = scope:recipient
# 		animation = throne_room_bow_1
# 	}
	
# 	trigger = {
# 	}
	
	
# 	immediate = {
# 	}

# 	#NAMING WIDGET
# 	widgets = {
# 		widget = {
# 			gui = "event_window_widget_name_child"
# 			container = "dynamic_birth_name"
# 			controller = name_character
# 			setup_scope = { scope:recipient = { save_scope_as = name_character_target } }
# 		}
# 	}
	
# 	option = {
# 		name = consort_events.1000.a
# 		scope:recipient = {
# 			calyver_favor_micro_gain_effect = yes
# 			if = {
# 				limit = {
# 					OR = {
# 						accepts_harems = yes
# 						has_trait = ambitious
# 						has_trait = arrogant
# 						has_trait = greedy
# 					}
# 				}
# 				add_opinion_modifier = {
# 					modifier = bestowed_name_opinion
# 					target = scope:actor
# 					opinion = 5
# 				}
# 			}
# 			else = {
# 				add_opinion_modifier = {
# 					modifier = bestowed_name_opinion
# 					target = scope:actor
# 					opinion = 2
# 				}
# 			}
# 		}
# 		hidden_effect = {
# 			every_concubine = {
# 				limit = {
# 					NOR = {
# 						has_opinion_modifier = {
# 							modifier = bestowed_name_opinion
# 							target = scope:actor
# 						}
# 						has_trait = content
# 						has_relation_lover = scope:recipient
# 						has_relation_soulmate = scope:recipient

# 						has_relation_friend = scope:recipient
# 						has_relation_best_friend = scope:recipient
# 					}
# 					OR = {
# 						accepts_harems = yes
# 						has_trait = ambitious
# 						has_trait = arrogant
# 						has_trait = greedy
# 					}
# 				}
# 				add_opinion = {
# 					target = scope:recipient
# 					modifier = jealousy_opinion
# 					opinion = -5
# 				}
# 			}
# 		}
# 		ai_chance = {
# 			base = 1
# 		}
# 	}
# }