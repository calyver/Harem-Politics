namespace = harem_events

###############
##First event##
###############

scripted_trigger valid_harem_consort_trigger = {
	is_courtier_of = root
	is_physically_able_ai_adult = yes
	NOT = { has_character_flag = visited_consort_flag }
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
}

scripted_effect visited_consort_scope_effect = {
	$CONSORT$ = {
		save_scope_as = target_consort
		add_character_flag = {
			flag = visited_consort_flag
			days = 20
		}
	}
	random_list = {
		50 = { #Good visit
			simple_attraction_modifier = {
				WHO = $CONSORT$
				TARGET = root
				MAX_PERSONALITY = 15 # -50 at low trait combatibility, +150 at high trait combatibility.
				MAX_PHYSICAL = 15 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
			}
			opinion_modifier = {
				opinion_target = $CONSORT$
				min = -15
				max = 15
				multiplier = 0.15
			}
			opinion_modifier = {
				who = $CONSORT$
				opinion_target = root
				min = -20
				max = 20
				multiplier = 0.20
			}
			
			modifier = {
				has_relation_potential_lover = $CONSORT$
				add = 10
			}
			modifier = {
				has_relation_potential_friend = $CONSORT$
				add = 5
			}
			modifier = {
				has_relation_lover = $CONSORT$
				add = 20
			}
			modifier = {
				has_relation_friend = $CONSORT$
				add = 15
			}
			modifier = {
				has_relation_soulmate = $CONSORT$
				add = 50
			}
			modifier = {
				has_relation_best_friend = $CONSORT$
				add = 40
			}
			modifier = { #Ambitious consorts will try their best to sleep with root
				$CONSORT$ = { 
					has_trait = ambitious
				}
				add = 5
			}
			modifier = { #Ambitious consorts will try their best to sleep with root
				$CONSORT$ = { 
					has_trait = greedy
				}
				add = 5
			}
			modifier = { #Ambitious consorts will try their best to sleep with root
				$CONSORT$ = { 
					has_trait = arrogant
				}
				add = 5
			}
			modifier = { #Ambitious consorts will try their best to sleep with root
				$CONSORT$ = { 
					has_trait = deceitful
				}
				add = 5
			}
			modifier = { #Gregarious consorts are charismatic
				$CONSORT$ = { 
					has_trait = gregarious
				}
				add = 5
			}
			modifier = {
				$CONSORT$ = { 
					has_trait = trusting
				}
				add = 5
			}
			
			modifier = { #Diplomacy
				add = 10
				$CONSORT$ = {	
					diplomacy >= medium_skill_rating
				}
			}
			modifier = { #Diplomacy
				add = 5
				$CONSORT$ = {	
					diplomacy >= decent_skill_rating
				}
			}
			modifier = { #Diplomacy
				add = 10
				$CONSORT$ = {	
					diplomacy >= high_skill_rating
				}
			}
			
			modifier = { #Scheming and diplomatic consorts will try their best to sleep with root
				$CONSORT$ = { 
					OR = { 
						has_character_modifier = scheming_consort_modifier
						has_character_modifier = diplomatic_consort_modifier
					}
				}
				add = 5
			}
			modifier = { #The PS will try their best to be on good terms
				exists = primary_spouse
				primary_spouse = $CONSORT$
				add = 20
			}
			modifier = { #The GC will try their best to be on good terms
				$CONSORT$ = { 
					has_court_position = grand_consort_court_position
				}
				add = 15
			}
			modifier = { #The GC will try their best to be on good terms
				$CONSORT$ = { 
					is_married = yes
					NOR = {
						this = root.primary_spouse
						has_court_position = grand_consort_court_position
					}
				}
				add = 10
			}

			modifier = { #Favor
				add = 10
				$CONSORT$ = {	
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = { #Favor
				add = 15
				$CONSORT$ = {	
					has_character_modifier = favor_boost_modifier
				}
			}
			modifier = { #Favor
				add = 20
				$CONSORT$ = {	
					has_character_modifier = beloved_consort_modifier
				}
			}

			modifier = {
				NOT = { $CONSORT$ = { is_attracted_to_gender_of = root } }
				factor = 0.7
			}
			modifier = {
				NOT = { is_attracted_to_gender_of = $CONSORT$ }
				factor = 0
			}
			trigger_event = {
				id = harem_events.0002
				days = { 5 12 }
			}	
		}
		25 = { #Bad visit
			simple_attraction_modifier = {
				WHO = $CONSORT$
				TARGET = root
				MAX_PERSONALITY = 15 # -50 at low trait combatibility, +150 at high trait combatibility.
				MAX_PHYSICAL = 15 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
			}
			opinion_modifier = {
				opinion_target = $CONSORT$
				min = -15
				max = 15
				multiplier = -0.15
			}
			opinion_modifier = {
				who = $CONSORT$
				opinion_target = root
				min = -20
				max = 20
				multiplier = -0.20
			}
			
			modifier = { #Demoted consorts hate root
				$CONSORT$ = { 
					is_demoted_consort_trigger = yes
				}
				add = 30
			}
			modifier = {
				has_relation_potential_rival = $CONSORT$
				add = 10
			}
			modifier = {
				has_relation_rival = $CONSORT$
				add = 20
			}
			modifier = {
				has_relation_nemesis = $CONSORT$
				add = 50
			}
			
			modifier = { #Shy consorts are not charismatic
				$CONSORT$ = { 
					has_trait = shy
				}
				add = 10
			}
			modifier = {
				$CONSORT$ = { 
					has_trait = paranoid
				}
				add = 5
			}
			modifier = { #Chaste consorts will try their best to avoid sex
				$CONSORT$ = { 
					has_trait = chaste
				}
				add = 15
			}
			modifier = {
				$CONSORT$ = { 
					has_trait = irritable
				}
				add = 10
			}
			
			modifier = { #Diplomacy
				add = 5
				$CONSORT$ = {	
					intrigue <= mediocre_skill_rating
				}
			}
			modifier = { #Diplomacy
				add = 10
				$CONSORT$ = {	
					intrigue <= low_skill_rating
				}
			}

			modifier = { #Favor
				add = 10
				$CONSORT$ = {	
					has_character_modifier = unfavored_consort_modifier
				}
			}
			modifier = { #Favor
				add = 20
				$CONSORT$ = {	
					has_character_modifier = forgotten_consort_modifier
				}
			}

			modifier = { #Forced consorts
				$CONSORT$ = {	
					accepts_harems = no
				}
				add = 50
			}
			modifier = { #Forced consorts
				$CONSORT$ = {	
					has_opinion_modifier = {
						target = root
						modifier = forced_me_concubine_marriage_opinion
					}
				}
				add = 50
			}

			trigger_event = {
				id = harem_events.0003
				days = { 5 12 }
			}
			
		}
	}
}

scripted_effect harem_random_event_effect = {
	random_list = {
		25 = { #Your consorts are performing
			modifier = {
				any_consort = {
					is_courtier_of = root
					has_character_flag = flag_new_consort
					count >= 3
				}
				add = 10
			}
			modifier = {
				any_consort = {
					is_courtier_of = root
					count >= 5
				}
				add = 5
			}
			trigger_event = {
				id = harem_politics.0016
				days = { 5 14 }
			}
		}
		25 = { #You find two consorts on a walk
			modifier = {
				any_consort = {
					is_courtier_of = root
					count >= 4
				}
				add = 10
			}
			trigger_event = {
				id = harem_politics.0020
				days = { 5 14 }
			}
		}
		5 = { #Meeting Consort Ling through Consort Chun
			modifier = {
				highest_held_title_tier < tier_kingdom
				factor = 0
			}
			trigger_event = {
				id = harem_politics.0009
				days = { 5 14 }
			}
		}
		5 = { #Meeting Consort Ling through Consort Jia
			modifier = {
				highest_held_title_tier < tier_kingdom
				factor = 0
			}
			trigger_event = {
				id = harem_politics.0010
				days = { 5 14 }
			}
		}
		25 = { #Yu disrespects Zhen Huan
			modifier = {
				any_consort = {
					is_courtier_of = root
					has_character_flag = flag_new_consort
					count >= 3
				}
				add = 10
			}
			modifier = {
				any_consort = {
					is_courtier_of = root
					count >= 5
				}
				add = 10
			}
			trigger_event = {
				id = harem_politics.0019
				days = { 5 14 }
			}
		}
		0 = { #You find Consort Ying playing in the garden
			modifier = {
				any_consort = {
					consort_events_ying_pin_trigger = yes
				}
				add = 25
			}
			trigger_event = {
				id = harem_events.0004
				days = { 5 14 }
			}
		}
		25 = { #Generic event	
			modifier = {
				OR = {	
					has_trait = impotent
					has_trait = lovers_pox 
					has_trait = early_great_pox 
					has_trait = inbred 
				}
				add = 20
			}
			modifier = {
				any_consort = {
					count <= 3
				}
				add = 10
			}
			modifier = {
				stress_level >= 1
				add = 20
			}
			trigger_event = {
				id = harem_events.0010 
				days = { 5 14 }
			}
		}
	}
}

harem_events.0001 = {
	type = character_event
	title = harem_events.0001.t
	desc = {
		first_valid = {
			triggered_desc = { #Already visited a consort
				trigger = {
					has_character_flag = second_event_flag
				}
				desc = harem_events.0001.desc
			}
			triggered_desc = {
				desc = harem_events.0001.generic.desc
			}
		}
		desc = harem_events.0001.end.desc
	}
	theme = family
	override_background = {
		reference = garden
	}
	
	left_portrait  = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:consort_1
		animation = flirtation_left
	}
	lower_left_portrait = {
		character = scope:consort_2
	}
	lower_right_portrait = {
		character = scope:consort_3
	}
	
	trigger = {
		any_consort = {
			valid_harem_consort_trigger = yes
			count >= 3
		}
		is_landed_or_landless_administrative = yes
	}
	
	immediate = {
		if = {
			limit = {
				NOT = {
					has_variable = flag_visited_harem
				}
			}
			set_variable = {
				name = flag_visited_harem
				years = 3
			}
		}
		#Events sequence
		if = {
			limit = {
				has_character_flag = first_event_flag
			}
			remove_character_flag = first_event_flag
			add_character_flag = {
				flag = second_event_flag
				days = 20
			}
		}
		else = {
			add_character_flag = {
				flag = first_event_flag
				days = 20
			}
		}
		#Clearing the previous scopes
		if = {
			limit = {
				exists = scope:consort_1
			}
			clear_saved_scope = consort_1
		}
		if = {
			limit = {
				exists = scope:consort_2
			}
			clear_saved_scope = consort_2
		}
		if = {
			limit = {
				exists = scope:consort_3
			}
			clear_saved_scope = consort_3
		}
		if = {
			limit = {
				exists = scope:target_consort
			}
			clear_saved_scope = target_consort
		}
		#Building the lists
		every_consort = {
			limit = {
				valid_harem_consort_trigger = yes
			}
			add_to_list = valid_consorts_list
		}
		#Saving the scopes
		random_in_list = {
			list = valid_consorts_list
			limit = {
				valid_harem_consort_trigger = yes
			}
			weight = {
				base = 30
				modifier = { #The PS
					exists = root.primary_spouse
					this = root.primary_spouse
					add = 25
				}
				modifier = { #The GC
					has_court_position = grand_consort_court_position
					add = 15
				}
				modifier = { #Spouses
					is_married = yes
					add = 10
				}
				modifier = { #Demoted consorts
					is_demoted_consort_trigger = no
					add = 15
				}
				modifier = { #Good opinion
					reverse_opinion = {
						target = root
						value > 9
					}
					add = 10
				}
				
				modifier = { #Beautiful consorts have priority
					has_character_flag = flag_new_consort
					add = 10
				}
				
				modifier = { #Beautiful consorts have priority
					has_trait = beauty_good_1
					add = 10
				}
				modifier = { #Beautiful consorts have priority
					has_trait = beauty_good_2
					add = 15
				}
				modifier = { #Beautiful consorts have priority
					has_trait = beauty_good_3
					add = 20
				}

				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 10
				}
				modifier = {
					has_character_modifier = favor_boost_modifier
					add = 15
				}
				modifier = {
					has_character_modifier = beloved_consort_modifier
					add = 20
				}

				modifier = {
					has_character_modifier = unfavored_consort_modifier
					add = -10
				}
				modifier = {
					has_character_modifier = forgotten_consort_modifier
					add = -20
				}

				modifier = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
					add = 15
				}
				modifier = {
					OR = {
						has_relation_soulmate = root
						has_relation_best_friend = root
					}
					add = 20
				}
				modifier = {
					any_close_family_member = {
						NOT = { is_child_of = root }
						OR = {
							is_powerful_vassal_of = root
							is_liege_or_above_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
						}
					}
					add = 20
				}
				modifier = {
					any_close_family_member = {
						NOT = { is_child_of = root }
						highest_held_title_tier = tier_duchy
					}
					add = 10
				}
				modifier = {
					any_child = {
						is_child_of = root
						count >= 1
					}
					add = 10
				}
				modifier = {
					any_child = {
						is_child_of = root
						count >= 3
					}
					add = 5
				}
				modifier = {
					any_child = {
						is_player_heir_of = root
					}
					add = 20
				}
				modifier = { #Give a chance to other consorts
					NOT = {
						has_trait = pregnant
					}
					add = 20
				}
				modifier = { #Good traits
					num_of_good_genetic_traits = 1
					add = 5
				}
				modifier = { #Good traits
					num_of_good_genetic_traits = 2
					add = 10
				}
				modifier = { #Good traits
					num_of_good_genetic_traits = 3
					add = 20
				}
				modifier = { #Good traits
					has_trait = pure_blooded
					add = 20
				}
				modifier = { #Good traits
					has_trait = fecund
					add = 10
				}
				
				modifier = { #Fertile consorts
					age <= 30
					add = 10
				}
				modifier = { #Fertile consorts
					fertility >= medium_fertility
					add = 10
				}
				modifier = { #Sexual preferences
					is_attracted_to_gender_of = root
					add = 25
				}
			}
			save_scope_as = consort_1
		}
		random_in_list = {
			list = valid_consorts_list
			limit = {
				NOT = {
					this = scope:consort_1
				}
				valid_harem_consort_trigger = yes
			}
			weight = {
				base = 30
				modifier = { #The PS
					exists = root.primary_spouse
					this = root.primary_spouse
					add = 25
				}
				modifier = { #The GC
					has_court_position = grand_consort_court_position
					add = 15
				}
				modifier = { #Spouses
					is_married = yes
					add = 10
				}
				modifier = { #Demoted consorts
					is_demoted_consort_trigger = no
					add = 15
				}
				modifier = { #Good opinion
					reverse_opinion = {
						target = root
						value > 9
					}
					add = 10
				}
				
				modifier = { #Beautiful consorts have priority
					has_character_flag = flag_new_consort
					add = 10
				}
				
				modifier = { #Beautiful consorts have priority
					has_trait = beauty_good_1
					add = 10
				}
				modifier = { #Beautiful consorts have priority
					has_trait = beauty_good_2
					add = 15
				}
				modifier = { #Beautiful consorts have priority
					has_trait = beauty_good_3
					add = 20
				}

				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 10
				}
				modifier = {
					has_character_modifier = favor_boost_modifier
					add = 15
				}
				modifier = {
					has_character_modifier = beloved_consort_modifier
					add = 20
				}

				modifier = {
					has_character_modifier = unfavored_consort_modifier
					add = -10
				}
				modifier = {
					has_character_modifier = forgotten_consort_modifier
					add = -20
				}

				modifier = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
					add = 15
				}
				modifier = {
					OR = {
						has_relation_soulmate = root
						has_relation_best_friend = root
					}
					add = 20
				}
				modifier = {
					any_close_family_member = {
						NOT = { is_child_of = root }
						OR = {
							is_powerful_vassal_of = root
							is_liege_or_above_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
						}
					}
					add = 20
				}
				modifier = {
					any_close_family_member = {
						NOT = { is_child_of = root }
						highest_held_title_tier = tier_duchy
					}
					add = 10
				}
				modifier = {
					any_child = {
						is_child_of = root
						count >= 1
					}
					add = 10
				}
				modifier = {
					any_child = {
						is_child_of = root
						count >= 3
					}
					add = 5
				}
				modifier = {
					any_child = {
						is_player_heir_of = root
					}
					add = 20
				}
				modifier = { #Give a chance to other consorts
					NOT = {
						has_trait = pregnant
					}
					add = 20
				}
				modifier = { #Good traits
					num_of_good_genetic_traits = 1
					add = 5
				}
				modifier = { #Good traits
					num_of_good_genetic_traits = 2
					add = 10
				}
				modifier = { #Good traits
					num_of_good_genetic_traits = 3
					add = 20
				}
				modifier = { #Good traits
					has_trait = pure_blooded
					add = 20
				}
				modifier = { #Good traits
					has_trait = fecund
					add = 10
				}
				
				modifier = { #Fertile consorts
					age <= 30
					add = 10
				}
				modifier = { #Fertile consorts
					fertility >= medium_fertility
					add = 10
				}
				modifier = { #Sexual preferences
					is_attracted_to_gender_of = root
					add = 25
				}
			}
			save_scope_as = consort_2
		}
		random_in_list = {
			list = valid_consorts_list
			limit = {
				NOR = {
					this = scope:consort_1
					this = scope:consort_2
				}
				valid_harem_consort_trigger = yes
			}
			weight = {
				base = 30
				modifier = { #The PS
					exists = root.primary_spouse
					this = root.primary_spouse
					add = 25
				}
				modifier = { #The GC
					has_court_position = grand_consort_court_position
					add = 15
				}
				modifier = { #Spouses
					is_married = yes
					add = 10
				}
				modifier = { #Demoted consorts
					is_demoted_consort_trigger = no
					add = 15
				}
				modifier = { #Good opinion
					reverse_opinion = {
						target = root
						value > 9
					}
					add = 10
				}
				
				modifier = { #Beautiful consorts have priority
					has_character_flag = flag_new_consort
					add = 10
				}
				
				modifier = { #Beautiful consorts have priority
					has_trait = beauty_good_1
					add = 10
				}
				modifier = { #Beautiful consorts have priority
					has_trait = beauty_good_2
					add = 15
				}
				modifier = { #Beautiful consorts have priority
					has_trait = beauty_good_3
					add = 20
				}

				modifier = {
					has_character_modifier = favored_consort_modifier
					add = 10
				}
				modifier = {
					has_character_modifier = favor_boost_modifier
					add = 15
				}
				modifier = {
					has_character_modifier = beloved_consort_modifier
					add = 20
				}

				modifier = {
					has_character_modifier = unfavored_consort_modifier
					add = -10
				}
				modifier = {
					has_character_modifier = forgotten_consort_modifier
					add = -20
				}

				modifier = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
					add = 15
				}
				modifier = {
					OR = {
						has_relation_soulmate = root
						has_relation_best_friend = root
					}
					add = 20
				}
				modifier = {
					any_close_family_member = {
						NOT = { is_child_of = root }
						OR = {
							is_powerful_vassal_of = root
							is_liege_or_above_of = root
							is_councillor_of = root
							highest_held_title_tier >= tier_kingdom
						}
					}
					add = 20
				}
				modifier = {
					any_close_family_member = {
						NOT = { is_child_of = root }
						highest_held_title_tier = tier_duchy
					}
					add = 10
				}
				modifier = {
					any_child = {
						is_child_of = root
						count >= 1
					}
					add = 10
				}
				modifier = {
					any_child = {
						is_child_of = root
						count >= 3
					}
					add = 5
				}
				modifier = {
					any_child = {
						is_player_heir_of = root
					}
					add = 20
				}
				modifier = { #Give a chance to other consorts
					NOT = {
						has_trait = pregnant
					}
					add = 20
				}
				modifier = { #Good traits
					num_of_good_genetic_traits = 1
					add = 5
				}
				modifier = { #Good traits
					num_of_good_genetic_traits = 2
					add = 10
				}
				modifier = { #Good traits
					num_of_good_genetic_traits = 3
					add = 20
				}
				modifier = { #Good traits
					has_trait = pure_blooded
					add = 20
				}
				modifier = { #Good traits
					has_trait = fecund
					add = 10
				}
				
				modifier = { #Fertile consorts
					age <= 30
					add = 10
				}
				modifier = { #Fertile consorts
					fertility >= medium_fertility
					add = 10
				}
				modifier = { #Sexual preferences
					is_attracted_to_gender_of = root
					add = 25
				}
			}
			save_scope_as = consort_3
		}
		every_in_list = {
			list = valid_consorts_list
			remove_from_list = valid_consorts_list
		}
	}
	
	option = { # Visit consort_1
		name = harem_events.0001.a
		
		hidden_effect = {
			visited_consort_scope_effect = { CONSORT = scope:consort_1 }
		}
		stress_impact = {
			shy = minor_stress_impact_gain
		}
		ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			opinion_modifier = {
				opinion_target = scope:consort_1
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:consort_1
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}

			modifier = { #Favor
            	add = 10
            	scope:consort_1 = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = { #Favor
            	add = 15
            	scope:consort_1 = {
            		has_character_modifier = favor_boost_modifier
            	}
            }
			modifier = { #Favor
            	add = 20
            	scope:consort_1 = {
            		has_character_modifier = beloved_consort_modifier
            	}
            }

			modifier = { #Favor
            	add = -10
            	scope:consort_1 = {
            		has_character_modifier = unfavored_consort_modifier
            	}
            }
			modifier = { #Favor
            	add = -20
            	scope:consort_1 = {
            		has_character_modifier = forgotten_consort_modifier
            	}
            }

			modifier = {
            	add = 10
            	scope:consort_1 = {
            		this = root.primary_spouse
            	}
            }
			modifier = {
            	add = 5
            	scope:consort_1 = {
            		is_grand_consort_trigger = yes
            	}
            }
			modifier = {
            	add = 5
            	scope:consort_1 = {
            		is_married = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:consort_1 = {
            		fertility >= medium_fertility
            	}
            }
			modifier = {
            	add = -15
            	scope:consort_1 = {
            		age >= 30
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:consort_1
					has_relation_soulmate = scope:consort_1
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:consort_1
					has_relation_friend = scope:consort_1
            	}
            }

			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:consort_1
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:consort_1
				}
			}
			modifier = {
				add = 15
				any_child = {
					count <= 1
				}
			}
        }
	}
	
	option = { # Visit consort_2
		name = harem_events.0001.b
		
		hidden_effect = {	
			visited_consort_scope_effect = { CONSORT = scope:consort_2 }
		}
		stress_impact = {
			shy = minor_stress_impact_gain
		}
		ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			opinion_modifier = {
				opinion_target = scope:consort_2
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:consort_2
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}

			modifier = { #Favor
            	add = 10
            	scope:consort_2 = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = { #Favor
            	add = 15
            	scope:consort_2 = {
            		has_character_modifier = favor_boost_modifier
            	}
            }
			modifier = { #Favor
            	add = 20
            	scope:consort_2 = {
            		has_character_modifier = beloved_consort_modifier
            	}
            }

			modifier = { #Favor
            	add = -10
            	scope:consort_2 = {
            		has_character_modifier = unfavored_consort_modifier
            	}
            }
			modifier = { #Favor
            	add = -20
            	scope:consort_2 = {
            		has_character_modifier = forgotten_consort_modifier
            	}
            }

			modifier = {
            	add = 10
            	scope:consort_2 = {
            		this = root.primary_spouse
            	}
            }
			modifier = {
            	add = 5
            	scope:consort_2 = {
            		is_grand_consort_trigger = yes
            	}
            }
			modifier = {
            	add = 5
            	scope:consort_2 = {
            		is_married = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:consort_2 = {
            		fertility >= medium_fertility
            	}
            }
			modifier = {
            	add = -15
            	scope:consort_2 = {
            		age >= 30
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:consort_2
					has_relation_soulmate = scope:consort_2
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:consort_2
					has_relation_friend = scope:consort_2
            	}
            }

			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:consort_2
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:consort_2
				}
			}
			modifier = {
				add = 15
				any_child = {
					count <= 1
				}
			}
        }
	}
	
	option = { # Visit consort_3
		name = harem_events.0001.c
		
		hidden_effect = {
			visited_consort_scope_effect = { CONSORT = scope:consort_3 }
		}
		stress_impact = {
			shy = minor_stress_impact_gain
		}
		ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			opinion_modifier = {
				opinion_target = scope:consort_3
				multiplier = 0.20
			}
			simple_attraction_modifier = {
				WHO = root
				TARGET = scope:consort_3
				MAX_PERSONALITY = 30 
				MAX_PHYSICAL = 30 
			}

			modifier = { #Favor
            	add = 10
            	scope:consort_3 = {
            		has_character_modifier = favored_consort_modifier
            	}
            }
			modifier = { #Favor
            	add = 15
            	scope:consort_3 = {
            		has_character_modifier = favor_boost_modifier
            	}
            }
			modifier = { #Favor
            	add = 20
            	scope:consort_3 = {
            		has_character_modifier = beloved_consort_modifier
            	}
            }

			modifier = { #Favor
            	add = -10
            	scope:consort_3 = {
            		has_character_modifier = unfavored_consort_modifier
            	}
            }
			modifier = { #Favor
            	add = -20
            	scope:consort_3 = {
            		has_character_modifier = forgotten_consort_modifier
            	}
            }

			modifier = {
            	add = 10
            	scope:consort_3 = {
            		this = root.primary_spouse
            	}
            }
			modifier = {
            	add = 5
            	scope:consort_3 = {
            		is_grand_consort_trigger = yes
            	}
            }
			modifier = {
            	add = 5
            	scope:consort_3 = {
            		is_married = yes
            	}
            }
			modifier = {
            	add = 10
            	scope:consort_3 = {
            		fertility >= medium_fertility
            	}
            }
			modifier = {
            	add = -15
            	scope:consort_3 = {
            		age >= 30
            	}
            }
			modifier = {
            	add = 15
            	OR = {
            		has_relation_lover = scope:consort_3
					has_relation_soulmate = scope:consort_3
            	}
            }
			modifier = {
            	add = 10
            	OR = {
            		has_relation_best_friend = scope:consort_3
					has_relation_friend = scope:consort_3
            	}
            }

			modifier = {	
				add = 25
				is_attracted_to_gender_of = scope:consort_3
			}
			modifier = {	
				add = -25
				NOT = {
					is_attracted_to_gender_of = scope:consort_3
				}
			}
			modifier = {
				add = 15
				any_child = {
					count <= 1
				}
			}
        }
	}
	
	option = { # Just take a walk
		name = harem_events.0001.d
		custom_tooltip = harem_events.0001.d.tt
		
		##OTHER EVENTS##
		hidden_effect = {
			harem_random_event_effect = yes
		}
		
		ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			modifier = {
				add = -15
				has_trait = lustful
			}
			modifier = {
				add = 50
				has_trait = shy
			}
			modifier = {
				add = 20
				has_trait = irritable
			}
			modifier = {
				add = 20
				has_trait = reclusive
			}
        }
	}
}

########################
##Success - good visit##
########################

harem_events.0002 = {
	type = character_event
	title = harem_events.0001.t
	desc = harem_events.0002.desc
	theme = family
	
	right_portrait = { 	
		character = root
		animation = flirtation
	}
	left_portrait = { 	
		character = scope:target_consort
		animation = happiness
	}
	
	trigger = {
		is_landed_or_landless_administrative = yes
	}
	
	immediate = {
		scope:target_consort = {
			add_opinion = {
				target = root
				modifier = romance_opinion
				opinion = 5
			}
		}
		add_opinion = {
			target = scope:target_consort
			modifier = romance_opinion
			opinion = 5
		}
		stress_impact = {
			base = minor_stress_impact_loss
			gregarious = minor_stress_impact_loss
		}
	}
	
	option = { #Spend the night with target_consort
        name = harem_events.0002.a
		trigger = {
			NOR = {
				has_trait = celibate
				has_trait = devoted
			}
		}
		
		had_sex_with_effect = {
			CHARACTER = scope:target_consort
			PREGNANCY_CHANCE = pregnancy_chance
		}
		if = {
			limit = {
				NOR = {
					has_relation_potential_lover = scope:target_consort
					has_relation_lover = scope:target_consort
					has_relation_soulmate = scope:target_consort
				}
			}
			set_relation_potential_lover = scope:target_consort
		}
		scope:target_consort = {
			calyver_favor_minor_gain_effect = yes
			add_opinion = {
				target = root
				modifier = romance_opinion
				opinion = 5
			}
		}
		add_opinion = {
			target = scope:target_consort
			modifier = romance_opinion
			opinion = 5
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			modifier = {
				add = 25
				has_trait = lustful
			}
			modifier = {
				add = -20
				has_trait = irritable
			}
			modifier = {
				add = -20
				has_trait = reclusive
			}
			modifier = {
				add = -25
				has_trait = shy
			}
			modifier = {
				add = -25
				has_trait = craven
			}
			modifier = {
				add = 10
				scope:target_consort = {
					has_character_modifier = favored_consort_modifier
				}
			}
			modifier = {
				add = 15
				scope:target_consort = {
					has_character_modifier = favor_boost_modifier
				}
			}
			modifier = {
				add = 20
				scope:target_consort = {
					has_character_modifier = beloved_consort_modifier
				}
			}
        }
    }
	
	option = { #Look for another consort
        name = harem_events.0002.b
		custom_tooltip = harem_events.0002.b.tt
		trigger = {
			any_consort = {
				valid_harem_consort_trigger = yes
				count >= 3
			}
			NOT = {
				has_character_flag = second_event_flag
			}
		}
		scope:target_consort = {
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -10
			}
		}
		
		trigger_event = {
			id = harem_events.0001
			days = { 3 7 }
		}
		
        ai_chance = {
            base = 85
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			opinion_modifier = {
				opinion_target = scope:target_consort
				min = -50
				max = 50
				multiplier = -0.5
			}
			modifier = {
				add = -15
				has_trait = lustful
			}
			modifier = {
				add = 20
				has_trait = shy
			}
			modifier = {
				add = 20
				has_trait = reclusive
			}
			modifier = {
				add = 20
				has_trait = craven
			}
			modifier = {
				add = 20
				has_trait = chaste
			}
			modifier = {
				add = 5
				scope:target_consort = {
					has_character_modifier = unfavored_consort_modifier
				}
			}
			modifier = {
				add = 15
				scope:target_consort = {
					has_character_modifier = forgotten_consort_modifier
				}
			}
        }
    }
	
	option = { #Enough!
        name = harem_events.0002.c
		custom_tooltip = harem_events.0002.c.tt
		
		scope:target_consort = {
			add_opinion = {
				target = root
				modifier = disappointed_opinion
				opinion = -10
			}
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = -0.20
				ai_energy = -0.35
   			}
			opinion_modifier = {
				opinion_target = scope:target_consort
				min = -50
				max = 50
				multiplier = -0.5
			}
			modifier = {
				add = -15
				has_trait = lustful
			}
			modifier = {
				add = 20
				has_trait = lazy
			}
			modifier = {
				add = 20
				has_trait = shy
			}
			modifier = {
				add = 20
				has_trait = reclusive
			}
			modifier = {
				add = 20
				has_trait = craven
			}
			modifier = {
				add = 20
				has_trait = chaste
			}
			modifier = {
				add = 5
				scope:target_consort = {
					has_character_modifier = unfavored_consort_modifier
				}
			}
			modifier = {
				add = 15
				scope:target_consort = {
					has_character_modifier = forgotten_consort_modifier
				}
			}
        }
    }
}

###########
##Failure##
###########
harem_events.0003 = {
	type = character_event
	title = harem_events.0001.t
	desc = harem_events.0003.desc
	theme = family
	
	right_portrait = { 	
		character = root
		animation = worry
	}
	left_portrait = { 	
		character = scope:target_consort
		animation = disapproval
	}
	
	trigger = {
		is_landed_or_landless_administrative = yes
	}
	
	immediate = {
		scope:target_consort = {
			add_opinion = {
				target = root
				modifier = frustrated_opinion
				opinion = -10
			}
		}
		add_opinion = {
			target = scope:target_consort
			modifier = frustrated_opinion
			opinion = -10
		}
		stress_impact = {
			gregarious = minor_stress_impact_gain
			lustful = minor_stress_impact_gain
		}
	}
	
	option = { #Look for another consort
        name = harem_events.0002.b
		custom_tooltip = harem_events.0002.b.tt
		trigger = {
			any_consort = {
				valid_harem_consort_trigger = yes
				count >= 3
			}
			NOT = {
				has_character_flag = second_event_flag
			}
		}
		
		trigger_event = {
			id = harem_events.0001
			days = { 3 7 }
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = 0.20
				ai_energy = 0.35
   			}
			modifier = {
				add = 15
				has_trait = lustful
			}
			modifier = {
				add = 20
				has_trait = shy
			}
			modifier = {
				add = 20
				has_trait = reclusive
			}
			modifier = {
				add = 20
				has_trait = craven
			}
        }
    }
	
	option = { #Enough!
        name = harem_events.0002.c
		custom_tooltip = harem_events.0002.c.tt
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
				ai_greed = -0.20
				ai_energy = -0.35
   			}
			modifier = {
				add = -15
				has_trait = lustful
			}
			modifier = {
				add = 20
				has_trait = lazy
			}
			modifier = {
				add = 20
				has_trait = shy
			}
			modifier = {
				add = 20
				has_trait = reclusive
			}
			modifier = {
				add = 20
				has_trait = craven
			}
        }
    }
}

##########################
##Meeting Concubine Ying##
##########################
scripted_trigger consort_events_ying_pin_trigger = {
	is_physically_able_ai_adult = yes
	is_healthy = yes

	is_demoted_consort_trigger = no
	harem_politics_unfavored_consort_trigger = no
	harem_politics_punished_consort_trigger = no
	
	accepts_harems = yes
	
	NOR = {
		
		has_trait = pregnant
		has_trait = lunatic_1
		has_trait = lunatic_genetic
		has_trait = possessed_1
		has_trait = possessed_genetic
		
		has_trait = wounded
		has_trait = ill
		
		has_relation_nemesis = root
		has_relation_rival = root
		has_relation_potential_rival = root

		has_opinion_modifier = {
			target = root
			modifier = forced_me_concubine_marriage_opinion
		}
		has_character_flag = had_harem_event_flag
	}

	opinion = {
		target = root
		value >= -15
	}
	
	is_courtier_of = root
	OR = {
		AND = {
			is_travelling = yes
			current_travel_plan ={
				travel_plan_owner = root
			}
		}
		AND = {
			is_travelling = no
			root = {
				is_travelling = no
			}
		}
	}
	OR = { #Isn't unfavored
		AND = {
			has_variable = favor
			var:favor >= neutral_consort_lower_limit
		}
		NOT = {
			has_variable = favor
		}
	}
}

harem_events.0004 = {
	type = character_event
	title = harem_events.0004.t
	desc = {
		desc = harem_events.0004.start.desc
		first_valid = {
			triggered_desc = { #Ying is catching butterflies
				trigger = {
					exists = local_var:butterflies_variable
				}
				desc = harem_events.0004.butterflies.desc
			}
			triggered_desc = { #They're playing an instrument
				trigger = {
					exists = local_var:playing_instrument_variable
				}
				desc = harem_events.0004.instrument.desc
			}
			triggered_desc = { #They're singing
				trigger = {
					exists = local_var:singing_variable
				}
				desc = harem_events.0004.singing.desc
			}
			triggered_desc = { #They're reading poetry
				trigger = {
					exists = local_var:poetry_variable
				}
				desc = harem_events.0004.poetry.desc
			}
			triggered_desc = { #They're doing embroidery
				trigger = {
					exists = local_var:embroidery_variable
				}
				desc = harem_events.0004.embroidery.desc
			}
			triggered_desc = { #They're seeing the plants
				trigger = {
					exists = local_var:gardening_variable
				}
				desc = harem_events.0004.gardening.desc
			}
			triggered_desc = { #They're eating
				trigger = {
					exists = local_var:eating_variable
				}
				desc = harem_events.0004.eating.desc
			}
			triggered_desc = { #They're painting
				trigger = {
					exists = local_var:painting_variable
				}
				desc = harem_events.0004.painting.desc
			}
			triggered_desc = { #They're training
				trigger = {
					exists = local_var:training_variable
				}
				desc = harem_events.0004.training.desc
			}
			triggered_desc = { #Generic - they're just taking a walk
				desc = harem_events.0004.generic.desc
			}
		}
		desc = harem_events.0004.end.desc
	}
	theme = family
	override_background = {
		reference = garden
	}
	
	left_portrait = { 	
		character = root
		animation = happiness
	}
	right_portrait = { 	
		character = scope:first_consort
		animation = flirtation
	}
	
	trigger = {
		any_consort = {
			consort_events_ying_pin_trigger = yes
		}
		
		any_consort = {
			is_courtier_of = root
			count >= 3
		}
		
		NOT = {	
			has_character_modifier = mourner_modifier
		}
		is_physically_able_adult = yes
		is_at_war = no
		is_landed_or_landless_administrative = yes
	}
	
	immediate = {
		every_consort = {
			limit = {
				consort_events_ying_pin_trigger = yes
			}
			add_to_list = consort_list
		}
		
		
		random_in_list = {
			list = consort_list
			limit = {
				consort_events_ying_pin_trigger = yes
			}
			weight = {
				base = 10
				
				modifier = { #Ying was a new consort
					has_character_flag = flag_new_consort
					add = 25
				}
				
				modifier = { #Beautiful consorts have priority
					has_trait = beauty_good_1
					add = 10
				}
				modifier = { #Beautiful consorts have priority
					has_trait = beauty_good_2
					add = 15
				}
				modifier = { #Beautiful consorts have priority
					has_trait = beauty_good_3
					add = 20
				}

				modifier = { #Favor
					has_character_modifier = favored_consort_modifier
					add = 5
				}
				modifier = { #Favor
					has_character_modifier = favor_boost_modifier
					add = 10
				}
				modifier = { #Favor
					has_character_modifier = beloved_consort_modifier
					add = 15
				}

				modifier = {
					OR = {
						has_relation_potential_friend = root
						has_relation_potential_lover = root
					}
					add = 5
				}
				modifier = {
					OR = {
						has_relation_lover = root
						has_relation_friend = root
					}
					add = 10
				}
				modifier = {
					OR = {
						has_relation_soulmate = root
						has_relation_best_friend = root
					}
					add = 15
				}
			}
			save_scope_as = first_consort
		}
		
		#What's Ying doing?
		random_list = {
			50 = { #Playing with butterflies
				modifier = {
					scope:first_consort = {
						has_trait = gregarious
					}
					add = 20
				}
				modifier = {
					location = {
						OR = {
							has_province_modifier = winter_harsh_modifier
							has_province_modifier = winter_normal_modifier
							has_province_modifier = winter_mild_modifier
							
							terrain = desert
							terrain = desert_mountains
							terrain = drylands
							terrain = oasis
							terrain = mountains
							terrain = sea
							terrain = coastal_sea
						}
					}
					factor = 0
				}
				set_local_variable = {
					name = butterflies_variable
					value = yes
				}
			}
			
			50 = { #Playing an instrument - like Zhen Huan
				modifier = {
					add = {
						value = scope:first_consort.diplomacy
						multiply = 0.7
						max = 50
					}
				}
				modifier = {
					scope:first_consort = {
						has_trait = gregarious
					}
					add = 10
				}
				modifier = {
					scope:first_consort = {
						has_trait = shy
					}
					add = -15
				}
				modifier = {
					scope:first_consort = {
						has_trait = craven
					}
					add = -15
				}
				modifier = {
					scope:first_consort = {
						has_court_position = court_musician_court_position
					}
					add = 25
				}
				set_local_variable = {
					name = playing_instrument_variable
					value = yes
				}
			}
			
			50 = { #Singing - like Yanwan
				modifier = {
					add = {
						value = scope:first_consort.diplomacy
						multiply = 0.7
						max = 50
					}
				}
				modifier = {
					scope:first_consort = {
						has_trait = poet
					}
					add = 10
				}
				modifier = {
					scope:first_consort = {
						has_trait = shy
					}
					add = -15
				}
				modifier = {
					scope:first_consort = {
						has_trait = craven
					}
					add = -15
				}
				modifier = {
					scope:first_consort = {
						has_court_position = court_musician_court_position
					}
					add = 25
				}
				set_local_variable = {
					name = singing_variable
					value = yes
				}
			}
			
			50 = { #Reading poetry
				modifier = {
					add = {
						value = scope:first_consort.learning
						multiply = 0.7
						max = 50
					}
				}
				modifier = {
					scope:first_consort = {
						has_trait = poet
					}
					add = 30
				}
				
				modifier = {
					scope:first_consort = {
						has_trait = education_learning_1
					}
					add = 5
				}
				modifier = {
					scope:first_consort = {
						has_trait = education_learning_2
					}
					add = 10
				}
				modifier = {
					scope:first_consort = {
						has_trait = education_learning_3
					}
					add = 15
				}
				modifier = {
					scope:first_consort = {
						OR = {
							has_trait = education_learning_4
							has_trait = education_learning_5
						}
					}
					add = 20
				}
				
				modifier = {
					scope:first_consort = {
						has_trait = shy
					}
					add = -15
				}
				modifier = {
					scope:first_consort = {
						has_trait = craven
					}
					add = -15
				}
				modifier = {
					scope:first_consort = {
						has_court_position = court_poet_court_position
					}
					add = 25
				}
				set_local_variable = {
					name = poetry_variable
					value = yes
				}
			}
			
			50 = { #Embroidery
				modifier = {
					add = {
						value = scope:first_consort.learning
						multiply = 0.7
						max = 50
					}
				}
				modifier = {
					scope:first_consort = {
						is_lowborn = yes
					}
					add = 15
				}
				modifier = {
					scope:first_consort = {
						is_concubine = yes
					}
					add = 15
				}
				
				modifier = {
					scope:first_consort = {
						has_trait = patient
					}
					add = 10
				}
				
				modifier = {
					scope:first_consort = {
						has_trait = lazy
					}
					add = -15
				}
				modifier = {
					scope:first_consort = {
						has_trait = impatient
					}
					add = -20
				}
				modifier = {
					scope:first_consort = {
						has_trait = arrogant
					}
					add = -20
				}
				set_local_variable = {
					name = embroidery_variable
					value = yes
				}
			}
			
			50 = { #They're picking flowers
				modifier = {
					scope:first_consort = {
						has_trait = lifestyle_gardener
					}
					add = 30
				}
				
				modifier = {
					scope:first_consort = {
						has_trait = lifestyle_herbalist
					}
					add = 15
				}
				
				modifier = {
					scope:first_consort = {
						has_trait = shy
					}
					add = 10
				}
				modifier = {
					scope:first_consort = {
						has_trait = patient
					}
					add = 10
				}
				
				modifier = {
					scope:first_consort = {
						has_trait = lazy
					}
					add = -15
				}
				modifier = {
					scope:first_consort = {
						has_trait = impatient
					}
					add = -20
				}
				modifier = {
					scope:first_consort = {
						has_trait = arrogant
					}
					add = -20
				}
				modifier = {
					scope:first_consort = {
						has_trait = craven
					}
					add = -15
				}
				modifier = {
					location = {
						OR = {
							has_province_modifier = winter_harsh_modifier
							has_province_modifier = winter_normal_modifier
							has_province_modifier = winter_mild_modifier
							
							terrain = desert
							terrain = desert_mountains
							terrain = drylands
							terrain = oasis
							terrain = mountains
							terrain = sea
							terrain = coastal_sea
						}
					}
					factor = 0
				}
				set_local_variable = {
					name = gardening_variable
					value = yes
				}
			}
			
			50 = { #Eating
				modifier = {
					scope:first_consort = {
						has_trait = gluttonous
					}
					add = 30
				}
				modifier = {
					scope:first_consort = {
						has_trait = comfort_eater
					}
					add = 40
				}
				
				modifier = {
					scope:first_consort = {
						has_trait = temperate
					}
					add = -15
				}
				modifier = {
					scope:first_consort = {
						has_trait = inappetetic
					}
					add = -30
				}
				modifier = {
					scope:first_consort = {
						is_married = yes
					}
					add = 15
				}
				set_local_variable = {
					name = eating_variable
					value = yes
				}
			}
			
			50 = { #Painting
				modifier = {
					add = {
						value = scope:first_consort.learning
						multiply = 0.7
						max = 50
					}
				}
				
				modifier = {
					scope:first_consort = {
						has_trait = education_learning_1
					}
					add = 5
				}
				modifier = {
					scope:first_consort = {
						has_trait = education_learning_2
					}
					add = 10
				}
				modifier = {
					scope:first_consort = {
						has_trait = education_learning_3
					}
					add = 15
				}
				modifier = {
					scope:first_consort = {
						OR = {
							has_trait = education_learning_4
							has_trait = education_learning_5
						}
					}
					add = 20
				}
				
				modifier = {
					scope:first_consort = {
						has_trait = patient
					}
					add = 10
				}
				
				modifier = {
					scope:first_consort = {
						has_trait = lazy
					}
					add = -15
				}
				modifier = {
					scope:first_consort = {
						has_trait = impatient
					}
					add = -20
				}
				modifier = {
					scope:first_consort = {
						has_trait = shy
					}
					add = -15
				}
				modifier = {
					scope:first_consort = {
						has_trait = craven
					}
					add = -15
				}
				set_local_variable = {
					name = painting_variable
					value = yes
				}
			}
			
			75 = { #Training for knight-consorts
				modifier = {
					add = {
						value = scope:first_consort.martial
						multiply = 0.7
						max = 20
					}
				}
				modifier = {
					add = {
						value = scope:first_consort.prowess
						multiply = 0.7
						max = 20
					}
				}
				
				modifier = {
					scope:first_consort = {
						is_knight = yes
					}
					add = 30
				}
				modifier = {
					scope:first_consort = {
						is_acclaimed = yes
						is_knight = yes
					}
					add = 10
				}
				modifier = {
					scope:first_consort = {
						has_trait = education_martial_1
					}
					add = 5
				}
				modifier = {
					scope:first_consort = {
						has_trait = education_martial_2
					}
					add = 10
				}
				modifier = {
					scope:first_consort = {
						has_trait = education_martial_3
					}
					add = 15
				}
				modifier = {
					scope:first_consort = {
						OR = {
							has_trait = education_martial_4
							has_trait = education_martial_5
						}
					}
					add = 20
				}
				
				modifier = {
					scope:first_consort = {
						has_trait = lazy
					}
					add = -15
				}
				modifier = {
					scope:first_consort = {
						has_trait = shy
					}
					add = -15
				}
				modifier = {
					scope:first_consort = {
						has_trait = craven
					}
					add = -30
				}
				modifier = {
					scope:first_consort = {
						NOT = {
							can_be_knight_trigger = { ARMY_OWNER = root }
						}
					}
					factor = 0
				}
				set_local_variable = {
					name = training_variable
					value = yes
				}
			}
			
			50 = { #Fallback
				modifier = {
					scope:first_consort = {
						has_trait = physique_good
					}
					add = 10
				}
				modifier = {
					scope:first_consort = {
						has_trait = athletic
					}
					add = 10
				}
				
				modifier = {
					scope:first_consort = {
						has_trait = strong
					}
					add = 10
				}
				modifier = {
					scope:first_consort = {
						has_trait = patient
					}
					add = 10
				}
			}
		}
	}
	
	option = { #Spend time with Ying Pin
        name = harem_politics.0020.a
		
		#Possible outcomes
		random_list = {
			50 = { #Progress towards lovers
				simple_attraction_modifier = {
					WHO = scope:first_consort
					TARGET = root
					MAX_PERSONALITY = 50 # -50 at low trait combatibility, +150 at high trait combatibility.
					MAX_PHYSICAL = 50 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
				}
				opinion_modifier = {
					opinion_target = scope:first_consort
					min = -50
					max = 50
					multiplier = 0.5
				}
				opinion_modifier = {
					who = scope:first_consort
					opinion_target = root
					min = -50
					max = 50
					multiplier = 0.5
				}

				modifier = { #Favor
					scope:first_consort = {
						has_character_modifier = favored_consort_modifier
					}
					add = 10
				}
				modifier = { #Favor
					scope:first_consort = {
						has_character_modifier = favor_boost_modifier
					}
					add = 15
				}
				modifier = { #Favor
					scope:first_consort = {
						has_character_modifier = beloved_consort_modifier
					}
					add = 20
				}

				modifier = {
					NOT = { scope:first_consort = { is_attracted_to_gender_of = root } }
					factor = 0.7
				}
				modifier = {
					NOT = { is_attracted_to_gender_of = scope:first_consort }
					factor = 0
				}
				if = {
					limit = {
						NOR = {
							has_relation_lover = scope:first_consort
							has_relation_soulmate = scope:first_consort
							has_relation_potential_lover = scope:first_consort
						}
					}
					set_relation_potential_lover = scope:first_consort
				}
				scope:first_consort = {
					calyver_favor_minor_gain_effect = yes
					add_opinion = {
						target = root
						modifier = romance_opinion
						opinion = 5
					}
				}
				add_opinion = {
					target = scope:first_consort
					modifier = romance_opinion
					opinion = 5
				}
			}
			50 = { #Sleep with them
				trigger = {
					NOR = {
						has_trait = celibate
						has_trait = devoted
					}
				}
				simple_attraction_modifier = {
					WHO = scope:first_consort
					TARGET = root
					MAX_PERSONALITY = 50 # -50 at low trait combatibility, +150 at high trait combatibility.
					MAX_PHYSICAL = 50 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
				}
				opinion_modifier = {
					opinion_target = scope:first_consort
					min = -50
					max = 50
					multiplier = 0.5
				}
				opinion_modifier = {
					who = scope:first_consort
					opinion_target = root
					min = -50
					max = 50
					multiplier = 0.5
				}
				modifier = {
					OR = {
						has_relation_lover = scope:first_consort
						has_relation_soulmate = scope:first_consort
						has_relation_potential_lover = scope:first_consort
					}
					add = 15
				}

				modifier = { #Favor
					scope:first_consort = {
						has_character_modifier = favored_consort_modifier
					}
					add = 10
				}
				modifier = { #Favor
					scope:first_consort = {
						has_character_modifier = favor_boost_modifier
					}
					add = 15
				}
				modifier = { #Favor
					scope:first_consort = {
						has_character_modifier = beloved_consort_modifier
					}
					add = 20
				}

				modifier = {
					NOT = { scope:first_consort = { is_attracted_to_gender_of = root } }
					factor = 0.7
				}
				modifier = {
					NOT = { is_attracted_to_gender_of = scope:first_consort }
					factor = 0
				}
				had_sex_with_effect = {
					CHARACTER = scope:first_consort
					PREGNANCY_CHANCE = pregnancy_chance
				}
				scope:first_consort = {
					calyver_favor_moderate_gain_effect = yes
					add_opinion = {
						target = root
						modifier = romance_opinion
						opinion = 5
					}
				}
				add_opinion = {
					target = scope:first_consort
					modifier = romance_opinion
					opinion = 5
				}
			}
			50 = { #Nothing
				
			}
		}
		#Stress
		if = {
			limit = {
				NOR = {
					has_trait = shy
					has_trait = craven
				}
			}
			add_stress = minor_stress_impact_loss
		}
		
		stress_impact = {
			shy = minor_stress_impact_gain
			craven = minor_stress_impact_gain
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_rationality = 0.10
				ai_greed = 0.1
   			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:first_consort
				min = -50
				max = 50
				multiplier = 1
			}
			
			modifier = { #Stress management
				has_trait = shy
				add = -25
			}
			modifier = { #Stress management
				has_trait = craven
				add = -25
			}
			modifier = { #Stress management
				has_trait = chaste
				add = -15
			}	
			modifier = { #Traits
				has_trait = lustful
				add = 25
			}
			modifier = {
				NOT = { is_attracted_to_gender_of = scope:first_consort }
				add = -50
			}
			modifier = {
				exists = primary_spouse
				scope:first_consort = { 
					this = root.primary_spouse
				}
				add = 10
			}
			modifier = {
				scope:first_consort = { 
					has_court_position = grand_consort_court_position
				}
				add = 5
			}
			modifier = {
				any_spouse = { 
					this = scope:first_consort
				}
				add = 5
			}
			modifier = {
				scope:first_consort = { 
					has_character_modifier = favored_consort_modifier
				}
				add = 10
			}
			modifier = {
				scope:first_consort = { 
					has_character_modifier = favor_boost_modifier
				}
				add = 15
			}
			modifier = {
				scope:first_consort = { 
					has_character_modifier = beloved_consort_modifier
				}
				add = 20
			}
        }
    }
	
	option = { #Continue with the walk
        name = harem_politics.0020.d
		scope:first_consort = {
			random_list = {
				50 = { #Disappointed
					simple_attraction_modifier = {
						WHO = scope:first_consort
						TARGET = root
						MAX_PERSONALITY = 50 # -50 at low trait combatibility, +150 at high trait combatibility.
						MAX_PHYSICAL = 50 # Will be -25 by default (due to Rakish) but can vary from between -150 and +150 due to other Attraction modifiers.
					}
					opinion_modifier = {
						opinion_target = root
						min = -50
						max = 50
						multiplier = 0.5
					}
					modifier = {
						is_attracted_to_gender_of = root
						add = 10
					}

					modifier = {
						OR = {
							has_relation_lover = root
							has_relation_soulmate = root
							has_relation_potential_lover = root
						}
						add = 15
					}

					modifier = { #Favor
						has_character_modifier = favored_consort_modifier
						add = 10
					}
					modifier = { #Favor
						has_character_modifier = favor_boost_modifier
						add = 15
					}
					modifier = { #Favor
						has_character_modifier = beloved_consort_modifier
						add = 20
					}

					add_opinion = {
						target = root
						modifier = rejected_me_opinion
					}
				}
				50 = { #Nothing
					modifier = {
						NOT = { is_attracted_to_gender_of = root }
						add = 30
					}
				}
			}
		}	
		
		
		stress_impact = {
			base = miniscule_stress_impact_loss
			shy = minor_stress_impact_loss
			craven = minor_stress_impact_loss 
		}
		
        ai_chance = {
            base = 100
            ai_value_modifier = {
   				ai_honor = -0.10
				ai_greed = -0.1
				ai_boldness = -0.1
   			}
			
			opinion_modifier = { #Opinion
				opinion_target = scope:first_consort
				min = -50
				max = 50
				multiplier = -1
			}
			
			modifier = { #Stress management
				has_trait = shy
				add = 25
			}
			modifier = { #Stress management
				has_trait = craven
				add = 25
			}
			modifier = { 
				has_trait = chaste
				add = 15
			}
			modifier = { 
				has_trait = gregarious
				add = -25
			}	
			modifier = { 
				has_trait = lustful
				add = -15
			}	
			modifier = {
				NOT = { is_attracted_to_gender_of = scope:first_consort }
				add = 20
			}
        }
    }
	
	after = {
		scope:first_consort = {
			add_character_flag = {
				flag = had_harem_event_flag
				years = 4
			}
		}
	}
}

##################
##Fallback event##
##################

harem_events.0010 = {
	type = character_event
	title = harem_events.0001.t	
	desc = harem_events.0010.desc
	
	theme = family
	override_background = {
		reference = garden
	}
	
	right_portrait = { 	
		character = root
		animation = personality_content
	}
	
	trigger = {
		is_landed_or_landless_administrative = yes
	}
	
	immediate = {
	}
	
	option = {
        name = harem_events.0010.a
		
		add_stress = minor_stress_impact_loss
		
        ai_chance = {
            base = 10
        }
    }
}