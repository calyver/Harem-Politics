types Lists
{
	#Rows
	type widget_harem_list_item_finder = widget {
		datacontext = "[Scope.GetCharacter]"
		size = { 200 94 }

		#background = {
		#	visible = "[CharacterListItem.HasEvenOrderIndex]"
		#	using = Background_Area_Dark
		#	margin_top = -4
		#	margin_bottom = 200
		#	alpha = 0.5
		#}

		block "divider" {}

		block "widget" {}

		hbox = {
			margin_right = 15
			vbox = {
				portrait_head_small = {}

				expand = {}
			}

			block "button_content"
			{
				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_top = 5

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						# Name and age
						hbox = {
							layoutpolicy_horizontal = expanding
							margin = { 0 3 }
							margin_left = 5
							margin_right = 10

							background = {
								using = Background_Area_Characterlist
							}

							background = {
								using = Background_Area_Dark

								modify_texture = {
									texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
									blend_mode = alphamultiply
									alpha = 1
									rotate_uv = 90
									mirror = vertical
								}
							}

							hbox = {
								margin_left = 3
								layoutpolicy_horizontal = expanding
								maximumsize = { 338 -1 }

								text_single = {
									using = Font_Size_Medium
									layoutpolicy_horizontal = expanding
									align = nobaseline
									text = "[Character.GetUINameNoTooltip]"
									autoresize = no
									fontsize_min = 14
								}

								expand = {}
							}

							hbox = {
								margin_left = 90
								layoutpolicy_vertical = expanding
								using = character_age_or_death_text
								expand = {}
							}

						}

						### BOTTOM ROW ###
						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							vbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								block "additional_info_kill_list" {}

								hbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding

									# Dynasty
									widget = {
										size = { 45 40 }

										coa_house_small = {
											datacontext = "[Scope.GetCharacter.GetHouse]"
											parentanchor = center
											scale = 0.7
										}
									}

									# Traits
									hbox = {
										layoutpolicy_vertical = expanding
										margin = { 10 0 }
										minimumsize = { 140 0 } #### needed for prison view

										background = {
											using = Background_Area_Dark
											alpha = 0.5
											margin = { 0 2 }
										}

										hbox = {
											layoutpolicy_horizontal = expanding

											fixedgridbox = {
												name = "traits_grid"
												datamodel = "[Character.GetTraitIndices]"
												datamodel_reuse_widgets = yes
												flipdirection = yes
												layoutpolicy_horizontal = expanding
												layoutpolicy_vertical = expanding
												addcolumn = 30
												addrow = 28

												block "gridbox_items"
												{
													min_width = 210
													datamodel_wrap = 7
													maxverticalslots = 2
												}

												item = {
													icon_trait = {
														datacontext = "[GetTraitForIndex(int32.GetInt)]"
														visible = "[Trait.IsValid]"

														blockoverride "icon_size"
														{
															size = { 30 30 }
														}

														blockoverride "tooltip_placement"
														{
															using = tooltip_se
														}

														blockoverride "glow_radius"
														{
															glow_radius = 3
														}
													}
												}
											}
										}
									}

									expand = {}
								}
							}

							vbox = {
								datacontext = "[Scope.GetCharacter]"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								block "bottom_right_box"
								{
									hbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										# Religion and culture
										hbox = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											margin_left = 8
											margin_right = 4
											spacing = 5
											minimumsize = { 110 0 }

											background = {
												using = Background_Area_Dark
												alpha = 0.5
												margin = { 0 2 }
											}

											icon = {
												name = "faith_button"
												size = { 38 38 }
												datacontext = "[Character.GetFaith]"
												tooltipwidget = { faith_tooltip = {} }
												using = tooltip_se

												texture = "[Faith.GetIcon]"
											}

											hbox = {
												datacontext = "[Character.GetCulture]"
												layoutpolicy_horizontal = expanding
												spacing = 3

												tooltipwidget = {
													culture_tooltip = {}
												}
												using = tooltip_se

												icon = {
													name = "culture"
													texture = "gfx/interface/icons/icon_culture.dds"
													size = { 24 24 }
												}

												text_single = {
													layoutpolicy_horizontal = expanding
													text = "CULTURE_LISTS_WINDOW"
													autoresize = no
													align = nobaseline
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	#Consort list
	type vbox_consort_list = vbox {
		name = "character_list"
		spacing = 3
		
		widget = {
			layoutpolicy_horizontal = expanding
			size = { 0 25 }
			min_width = 110

			block "expand_button" {
				button_standard_hover = {
					size = { 100% 100% }

					block "expand_button_inside" {}
				}
			}

			hbox = {
				margin = { 10 0 }

				background = {
					using = Text_Label_Background
					alpha = 0.5
					margin = { 0 -2 }
				}

				text_single = {
					align = nobaseline
					fontsize = 14

					block "header_text"
					{
						raw_text = "#D NEEDS TEXT#!"
					}
				}

				expand = {}

				text_single = {
					align = nobaseline
					default_format = "#weak"

					block "remaining_items" {
						visible = no
					}
				}
			}
		}
		
		block "special_character" {}

		scrollbox = {

			name = "characters_scroll_area"
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding

			block "scrollbox_properties"
			{
			}

			blockoverride "scrollbox_content" {

				block "container_implementation" {
					vbox = {
						name = "characters_grid"
						datacontext = "[Scope.GetCharacter]"
						visible = "[Not(CharacterSelectionList.IsBuildingList)]"
						layoutpolicy_horizontal = expanding

						item = {
							widget_character_list_item = {
								block "item_size" {
									size = { 650 110 }
									layoutpolicy_horizontal = expanding
								}
							}
						}
					}
				}
			}

			blockoverride "scrollbox_empty"
			{
				block "scrollbox_empty_visibility"
				{
					layoutpolicy_vertical = expanding
					visible = "[IsDataModelEmpty( CharacterSelectionList.GetList )]"
					text = "NO_CHARACTERS_TO_SELECT"
				}
			}
		}
	}
}